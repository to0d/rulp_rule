(new model m)
(add-stmt m v1:'(38))
(add-constraint m v1:'(?x) (max 40 on ?x))
(add-rule m if v1:'(?x) do (-> v1:'((+ ?x 2))))
;=>m true true RU000

(setq ?bs-trace true)
;=>&?bs-trace

(do
    (defvar ?tree (back-search m v1:'(?x) explain))
    (println ?tree)
    (print-ref-tree ?tree)
)
;=>nil
;out:
00000 SO0000: create_root, stmt=v1:'(?x), type=STMT_OR, status=INIT
00000 SO0000: init begin, stmt=v1:'(?x), type=STMT_OR, status=INIT
00000 SO0000: has stmt, stmt=v1:'(?x), rst=true
00000 SO0000: init end, rst=true, status=COMPLETE, succ-child=null, needComplete=false
00001 SO0000: has stmt, stmt=v1:'(?x), rst=true
00001 SO0000: return true
'(v1:'(?x))
v1:'(?x)

;eof

