(new model m)
(add-rule m if '(?a p2 ?b) do (-> m '(?a p ?b)))
(add-rule m if '(?a p ?b) '(?b p ?c) do (-> m '(?a p ?c)))
(add-stmt m '(a p2 b))
(add-stmt m '(b p2 c))
;=>m RU000 RU001 true true

(setq ?bs-trace true)
;=>&?bs-trace

(back-search m '(a p c) explain)
;=>'('(a p c) ("RU001" '('(a p ?b) '(?b p c))))
;out:
00000 O0000: create, stmt='(a p c)
00000 O0000: init, stmt='(a p c)
00000 O0000: add child, type=AND, name=A0001
00000 O0000: add child, type=AND, name=A0002
00000 O0000: route to A0001
00001     A0001: init, stmt='(a p c), rule=RU000: RU000, action='(?0, p, ?2)(0)
00001     A0001: add child, type=OR, name=O0003
00001     A0001: route to O0003
00002         O0003: init, stmt='(a p2 c)
00002         O0003: not child, return false
00003         O0003: route to A0001
00004     A0001: process, child O0003 false, return false
00005     A0001: route to O0000
00006 O0000: route to A0002
00007     A0002: init, stmt='(a p c), rule=RU001: RU001, action='(?0, p, ?2)(0)
00007     A0002: add child, type=QUERY, name=Q0004
00007     A0002: route to Q0004
00008         Q0004: init, stmt-list=['(a p ?b), '(?b p c)]
00009         Q0004: process, forward=true, backward=true, result=1
00009         Q0004: route to A0002
00010     A0002: process, no child fail, return true
00011     A0002: complete return, rst=true
00011     A0002: route to O0000
00012 O0000: process, child A0002 succ, return true
00013 O0000: complete return, rst=true

;eof

(list-stmt m)
;=>'('(a p2 b) '(b p2 c) '(a p b) '(b p c) '(a p c))

