Model<m> stats info:
=================================================================================================================================================================
NODE    Fixed Define Reason Assume  Drop Remove  Temp  Null BindFr BindTo  Node Source  Exec  Idle Fail    Match Update Redunt MinL MaxL MinP MaxP QMatch  QFetch
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
ROOT0        0      2      0      0     0     0     0     0      0      0     2      0     0     0    0        0      2      0    0    0  900  900      0       2
NAME0        0      2      0      0     0     0     0     0      0      0     2      0     0     0    0        0      2      0    0    0    0    0      0       2
=================================================================================================================================================================

node info:
=================================================================================================================================================================
NODE[n]       Fixed Define Reason Assume   Drop Remove  Temp  Null  Bind  Match Update Redunt Exec Idle  Waste Fail Lvl Pri Src   Use    Stage      PVisit
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
R00001[3]         0      1      0      0      0      0     0     0   0/0      0      1      0    0    0      *    0   0 900   0     0  InQueue            
R00003[1000]      0      1      0      0      0      0     0     0   0/0      0      1      0    0    0      *    0   0 900   0     0  InQueue            
N00002[3]         0      1      0      0      0      0     0     0   0/0      0      1      0    0    0      *    0   0   0   0     0 InActive            
N00004[1000]      0      1      0      0      0      0     0     0   0/0      0      1      0    0    0      *    0   0   0   0     0 InActive            
=================================================================================================================================================================

node info3:
=================================================================================================================================================================
NODE[n]      UniqName
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
R00001[3]    '(?0 ?1 ?2)
R00003[1000] '(?0 ?1 ?2 ?3 ?4 ?5 ?6 ?7 ?8 ?9 ?10 ?11 ?12 ?13 ?14 ?15 ?16 ?17 ?18 ?19 ?20 ?21 ?22 ?23 ?24 ?25 ?26 ?27 ?28 ?29 ?30 ?31 ?32 ?33 ?34 ?35 ?36 ?37 ?38 ?39 ?40 ?41 ?42 ?43 ?44 ?45 ?46 ?47 ?48 ?49 ?50 ?51 ?52 ?53 ?54 ?55 ?56 ?57 ?58 ?59 ?60 ?61 ?62 ?63 ?64 ?65 ?66 ?67 ?68 ?69 ?70 ?71 ?72 ?73 ?74 ?75 ?76 ?77 ?78 ?79 ?80 ?81 ?82 ?83 ?84 ?85 ?86 ?87 ?88 ?89 ?90 ?91 ?92 ?93 ?94 ?95 ?96 ?97 ?98 ?99 ?100 ?101 ?102 ?103 ?104 ?105 ?106 ?107 ?108 ?109 ?110 ?111 ?112 ?113 ?114 ?115 ?116 ?117 ?118 ?119 ?120 ?121 ?122 ?123 ?124 ?125 ?126 ?127 ?128 ?129 ?130 ?131 ?132 ?133 ?134 ?135 ?136 ?137 ?138 ?139 ?140 ?141 ?142 ?143 ?144 ?145 ?146 ?147 ?148 ?149 ?150 ?151 ?152 ?153 ?154 ?155 ?156 ?157 ?158 ?159 ?160 ?161 ?162 ?163 ?164 ?165 ?166 ?167 ?168 ?169 ?170 ?171 ?172 ?173 ?174 ?175 ?176 ?177 ?178 ?179 ?180 ?181 ?182 ?183 ?184 ?185 ?186 ?187 ?188 ?189 ?190 ?191 ?192 ?193 ?194 ?195 ?196 ?197 ?198 ?199 ?200 ?201 ?202 ?203 ?204 ?205 ?206 ?207 ?208 ?209 ?210 ?211 ?212 ?213 ?214 ?215 ?216 ?217 ?218 ?219 ?220 ?221 ?222 ?223 ?224 ?225 ?226 ?227 ?228 ?229 ?230 ?231 ?232 ?233 ?234 ?235 ?236 ?237 ?238 ?239 ?240 ?241 ?242 ?243 ?244 ?245 ?246 ?247 ?248 ?249 ?250 ?251 ?252 ?253 ?254 ?255 ?256 ?257 ?258 ?259 ?260 ?261 ?262 ?263 ?264 ?265 ?266 ?267 ?268 ?269 ?270 ?271 ?272 ?273 ?274 ?275 ?276 ?277 ?278 ?279 ?280 ?281 ?282 ?283 ?284 ?285 ?286 ?287 ?288 ?289 ?290 ?291 ?292 ?293 ?294 ?295 ?296 ?297 ?298 ?299 ?300 ?301 ?302 ?303 ?304 ?305 ?306 ?307 ?308 ?309 ?310 ?311 ?312 ?313 ?314 ?315 ?316 ?317 ?318 ?319 ?320 ?321 ?322 ?323 ?324 ?325 ?326 ?327 ?328 ?329 ?330 ?331 ?332 ?333 ?334 ?335 ?336 ?337 ?338 ?339 ?340 ?341 ?342 ?343 ?344 ?345 ?346 ?347 ?348 ?349 ?350 ?351 ?352 ?353 ?354 ?355 ?356 ?357 ?358 ?359 ?360 ?361 ?362 ?363 ?364 ?365 ?366 ?367 ?368 ?369 ?370 ?371 ?372 ?373 ?374 ?375 ?376 ?377 ?378 ?379 ?380 ?381 ?382 ?383 ?384 ?385 ?386 ?387 ?388 ?389 ?390 ?391 ?392 ?393 ?394 ?395 ?396 ?397 ?398 ?399 ?400 ?401 ?402 ?403 ?404 ?405 ?406 ?407 ?408 ?409 ?410 ?411 ?412 ?413 ?414 ?415 ?416 ?417 ?418 ?419 ?420 ?421 ?422 ?423 ?424 ?425 ?426 ?427 ?428 ?429 ?430 ?431 ?432 ?433 ?434 ?435 ?436 ?437 ?438 ?439 ?440 ?441 ?442 ?443 ?444 ?445 ?446 ?447 ?448 ?449 ?450 ?451 ?452 ?453 ?454 ?455 ?456 ?457 ?458 ?459 ?460 ?461 ?462 ?463 ?464 ?465 ?466 ?467 ?468 ?469 ?470 ?471 ?472 ?473 ?474 ?475 ?476 ?477 ?478 ?479 ?480 ?481 ?482 ?483 ?484 ?485 ?486 ?487 ?488 ?489 ?490 ?491 ?492 ?493 ?494 ?495 ?496 ?497 ?498 ?499 ?500 ?501 ?502 ?503 ?504 ?505 ?506 ?507 ?508 ?509 ?510 ?511 ?512 ?513 ?514 ?515 ?516 ?517 ?518 ?519 ?520 ?521 ?522 ?523 ?524 ?525 ?526 ?527 ?528 ?529 ?530 ?531 ?532 ?533 ?534 ?535 ?536 ?537 ?538 ?539 ?540 ?541 ?542 ?543 ?544 ?545 ?546 ?547 ?548 ?549 ?550 ?551 ?552 ?553 ?554 ?555 ?556 ?557 ?558 ?559 ?560 ?561 ?562 ?563 ?564 ?565 ?566 ?567 ?568 ?569 ?570 ?571 ?572 ?573 ?574 ?575 ?576 ?577 ?578 ?579 ?580 ?581 ?582 ?583 ?584 ?585 ?586 ?587 ?588 ?589 ?590 ?591 ?592 ?593 ?594 ?595 ?596 ?597 ?598 ?599 ?600 ?601 ?602 ?603 ?604 ?605 ?606 ?607 ?608 ?609 ?610 ?611 ?612 ?613 ?614 ?615 ?616 ?617 ?618 ?619 ?620 ?621 ?622 ?623 ?624 ?625 ?626 ?627 ?628 ?629 ?630 ?631 ?632 ?633 ?634 ?635 ?636 ?637 ?638 ?639 ?640 ?641 ?642 ?643 ?644 ?645 ?646 ?647 ?648 ?649 ?650 ?651 ?652 ?653 ?654 ?655 ?656 ?657 ?658 ?659 ?660 ?661 ?662 ?663 ?664 ?665 ?666 ?667 ?668 ?669 ?670 ?671 ?672 ?673 ?674 ?675 ?676 ?677 ?678 ?679 ?680 ?681 ?682 ?683 ?684 ?685 ?686 ?687 ?688 ?689 ?690 ?691 ?692 ?693 ?694 ?695 ?696 ?697 ?698 ?699 ?700 ?701 ?702 ?703 ?704 ?705 ?706 ?707 ?708 ?709 ?710 ?711 ?712 ?713 ?714 ?715 ?716 ?717 ?718 ?719 ?720 ?721 ?722 ?723 ?724 ?725 ?726 ?727 ?728 ?729 ?730 ?731 ?732 ?733 ?734 ?735 ?736 ?737 ?738 ?739 ?740 ?741 ?742 ?743 ?744 ?745 ?746 ?747 ?748 ?749 ?750 ?751 ?752 ?753 ?754 ?755 ?756 ?757 ?758 ?759 ?760 ?761 ?762 ?763 ?764 ?765 ?766 ?767 ?768 ?769 ?770 ?771 ?772 ?773 ?774 ?775 ?776 ?777 ?778 ?779 ?780 ?781 ?782 ?783 ?784 ?785 ?786 ?787 ?788 ?789 ?790 ?791 ?792 ?793 ?794 ?795 ?796 ?797 ?798 ?799 ?800 ?801 ?802 ?803 ?804 ?805 ?806 ?807 ?808 ?809 ?810 ?811 ?812 ?813 ?814 ?815 ?816 ?817 ?818 ?819 ?820 ?821 ?822 ?823 ?824 ?825 ?826 ?827 ?828 ?829 ?830 ?831 ?832 ?833 ?834 ?835 ?836 ?837 ?838 ?839 ?840 ?841 ?842 ?843 ?844 ?845 ?846 ?847 ?848 ?849 ?850 ?851 ?852 ?853 ?854 ?855 ?856 ?857 ?858 ?859 ?860 ?861 ?862 ?863 ?864 ?865 ?866 ?867 ?868 ?869 ?870 ?871 ?872 ?873 ?874 ?875 ?876 ?877 ?878 ?879 ?880 ?881 ?882 ?883 ?884 ?885 ?886 ?887 ?888 ?889 ?890 ?891 ?892 ?893 ?894 ?895 ?896 ?897 ?898 ?899 ?900 ?901 ?902 ?903 ?904 ?905 ?906 ?907 ?908 ?909 ?910 ?911 ?912 ?913 ?914 ?915 ?916 ?917 ?918 ?919 ?920 ?921 ?922 ?923 ?924 ?925 ?926 ?927 ?928 ?929 ?930 ?931 ?932 ?933 ?934 ?935 ?936 ?937 ?938 ?939 ?940 ?941 ?942 ?943 ?944 ?945 ?946 ?947 ?948 ?949 ?950 ?951 ?952 ?953 ?954 ?955 ?956 ?957 ?958 ?959 ?960 ?961 ?962 ?963 ?964 ?965 ?966 ?967 ?968 ?969 ?970 ?971 ?972 ?973 ?974 ?975 ?976 ?977 ?978 ?979 ?980 ?981 ?982 ?983 ?984 ?985 ?986 ?987 ?988 ?989 ?990 ?991 ?992 ?993 ?994 ?995 ?996 ?997 ?998 ?999)
N00002[3]    n1:'(?0 ?1 ?2)
N00004[1000] n2:'(?0 ?1 ?2 ?3 ?4 ?5 ?6 ?7 ?8 ?9 ?10 ?11 ?12 ?13 ?14 ?15 ?16 ?17 ?18 ?19 ?20 ?21 ?22 ?23 ?24 ?25 ?26 ?27 ?28 ?29 ?30 ?31 ?32 ?33 ?34 ?35 ?36 ?37 ?38 ?39 ?40 ?41 ?42 ?43 ?44 ?45 ?46 ?47 ?48 ?49 ?50 ?51 ?52 ?53 ?54 ?55 ?56 ?57 ?58 ?59 ?60 ?61 ?62 ?63 ?64 ?65 ?66 ?67 ?68 ?69 ?70 ?71 ?72 ?73 ?74 ?75 ?76 ?77 ?78 ?79 ?80 ?81 ?82 ?83 ?84 ?85 ?86 ?87 ?88 ?89 ?90 ?91 ?92 ?93 ?94 ?95 ?96 ?97 ?98 ?99 ?100 ?101 ?102 ?103 ?104 ?105 ?106 ?107 ?108 ?109 ?110 ?111 ?112 ?113 ?114 ?115 ?116 ?117 ?118 ?119 ?120 ?121 ?122 ?123 ?124 ?125 ?126 ?127 ?128 ?129 ?130 ?131 ?132 ?133 ?134 ?135 ?136 ?137 ?138 ?139 ?140 ?141 ?142 ?143 ?144 ?145 ?146 ?147 ?148 ?149 ?150 ?151 ?152 ?153 ?154 ?155 ?156 ?157 ?158 ?159 ?160 ?161 ?162 ?163 ?164 ?165 ?166 ?167 ?168 ?169 ?170 ?171 ?172 ?173 ?174 ?175 ?176 ?177 ?178 ?179 ?180 ?181 ?182 ?183 ?184 ?185 ?186 ?187 ?188 ?189 ?190 ?191 ?192 ?193 ?194 ?195 ?196 ?197 ?198 ?199 ?200 ?201 ?202 ?203 ?204 ?205 ?206 ?207 ?208 ?209 ?210 ?211 ?212 ?213 ?214 ?215 ?216 ?217 ?218 ?219 ?220 ?221 ?222 ?223 ?224 ?225 ?226 ?227 ?228 ?229 ?230 ?231 ?232 ?233 ?234 ?235 ?236 ?237 ?238 ?239 ?240 ?241 ?242 ?243 ?244 ?245 ?246 ?247 ?248 ?249 ?250 ?251 ?252 ?253 ?254 ?255 ?256 ?257 ?258 ?259 ?260 ?261 ?262 ?263 ?264 ?265 ?266 ?267 ?268 ?269 ?270 ?271 ?272 ?273 ?274 ?275 ?276 ?277 ?278 ?279 ?280 ?281 ?282 ?283 ?284 ?285 ?286 ?287 ?288 ?289 ?290 ?291 ?292 ?293 ?294 ?295 ?296 ?297 ?298 ?299 ?300 ?301 ?302 ?303 ?304 ?305 ?306 ?307 ?308 ?309 ?310 ?311 ?312 ?313 ?314 ?315 ?316 ?317 ?318 ?319 ?320 ?321 ?322 ?323 ?324 ?325 ?326 ?327 ?328 ?329 ?330 ?331 ?332 ?333 ?334 ?335 ?336 ?337 ?338 ?339 ?340 ?341 ?342 ?343 ?344 ?345 ?346 ?347 ?348 ?349 ?350 ?351 ?352 ?353 ?354 ?355 ?356 ?357 ?358 ?359 ?360 ?361 ?362 ?363 ?364 ?365 ?366 ?367 ?368 ?369 ?370 ?371 ?372 ?373 ?374 ?375 ?376 ?377 ?378 ?379 ?380 ?381 ?382 ?383 ?384 ?385 ?386 ?387 ?388 ?389 ?390 ?391 ?392 ?393 ?394 ?395 ?396 ?397 ?398 ?399 ?400 ?401 ?402 ?403 ?404 ?405 ?406 ?407 ?408 ?409 ?410 ?411 ?412 ?413 ?414 ?415 ?416 ?417 ?418 ?419 ?420 ?421 ?422 ?423 ?424 ?425 ?426 ?427 ?428 ?429 ?430 ?431 ?432 ?433 ?434 ?435 ?436 ?437 ?438 ?439 ?440 ?441 ?442 ?443 ?444 ?445 ?446 ?447 ?448 ?449 ?450 ?451 ?452 ?453 ?454 ?455 ?456 ?457 ?458 ?459 ?460 ?461 ?462 ?463 ?464 ?465 ?466 ?467 ?468 ?469 ?470 ?471 ?472 ?473 ?474 ?475 ?476 ?477 ?478 ?479 ?480 ?481 ?482 ?483 ?484 ?485 ?486 ?487 ?488 ?489 ?490 ?491 ?492 ?493 ?494 ?495 ?496 ?497 ?498 ?499 ?500 ?501 ?502 ?503 ?504 ?505 ?506 ?507 ?508 ?509 ?510 ?511 ?512 ?513 ?514 ?515 ?516 ?517 ?518 ?519 ?520 ?521 ?522 ?523 ?524 ?525 ?526 ?527 ?528 ?529 ?530 ?531 ?532 ?533 ?534 ?535 ?536 ?537 ?538 ?539 ?540 ?541 ?542 ?543 ?544 ?545 ?546 ?547 ?548 ?549 ?550 ?551 ?552 ?553 ?554 ?555 ?556 ?557 ?558 ?559 ?560 ?561 ?562 ?563 ?564 ?565 ?566 ?567 ?568 ?569 ?570 ?571 ?572 ?573 ?574 ?575 ?576 ?577 ?578 ?579 ?580 ?581 ?582 ?583 ?584 ?585 ?586 ?587 ?588 ?589 ?590 ?591 ?592 ?593 ?594 ?595 ?596 ?597 ?598 ?599 ?600 ?601 ?602 ?603 ?604 ?605 ?606 ?607 ?608 ?609 ?610 ?611 ?612 ?613 ?614 ?615 ?616 ?617 ?618 ?619 ?620 ?621 ?622 ?623 ?624 ?625 ?626 ?627 ?628 ?629 ?630 ?631 ?632 ?633 ?634 ?635 ?636 ?637 ?638 ?639 ?640 ?641 ?642 ?643 ?644 ?645 ?646 ?647 ?648 ?649 ?650 ?651 ?652 ?653 ?654 ?655 ?656 ?657 ?658 ?659 ?660 ?661 ?662 ?663 ?664 ?665 ?666 ?667 ?668 ?669 ?670 ?671 ?672 ?673 ?674 ?675 ?676 ?677 ?678 ?679 ?680 ?681 ?682 ?683 ?684 ?685 ?686 ?687 ?688 ?689 ?690 ?691 ?692 ?693 ?694 ?695 ?696 ?697 ?698 ?699 ?700 ?701 ?702 ?703 ?704 ?705 ?706 ?707 ?708 ?709 ?710 ?711 ?712 ?713 ?714 ?715 ?716 ?717 ?718 ?719 ?720 ?721 ?722 ?723 ?724 ?725 ?726 ?727 ?728 ?729 ?730 ?731 ?732 ?733 ?734 ?735 ?736 ?737 ?738 ?739 ?740 ?741 ?742 ?743 ?744 ?745 ?746 ?747 ?748 ?749 ?750 ?751 ?752 ?753 ?754 ?755 ?756 ?757 ?758 ?759 ?760 ?761 ?762 ?763 ?764 ?765 ?766 ?767 ?768 ?769 ?770 ?771 ?772 ?773 ?774 ?775 ?776 ?777 ?778 ?779 ?780 ?781 ?782 ?783 ?784 ?785 ?786 ?787 ?788 ?789 ?790 ?791 ?792 ?793 ?794 ?795 ?796 ?797 ?798 ?799 ?800 ?801 ?802 ?803 ?804 ?805 ?806 ?807 ?808 ?809 ?810 ?811 ?812 ?813 ?814 ?815 ?816 ?817 ?818 ?819 ?820 ?821 ?822 ?823 ?824 ?825 ?826 ?827 ?828 ?829 ?830 ?831 ?832 ?833 ?834 ?835 ?836 ?837 ?838 ?839 ?840 ?841 ?842 ?843 ?844 ?845 ?846 ?847 ?848 ?849 ?850 ?851 ?852 ?853 ?854 ?855 ?856 ?857 ?858 ?859 ?860 ?861 ?862 ?863 ?864 ?865 ?866 ?867 ?868 ?869 ?870 ?871 ?872 ?873 ?874 ?875 ?876 ?877 ?878 ?879 ?880 ?881 ?882 ?883 ?884 ?885 ?886 ?887 ?888 ?889 ?890 ?891 ?892 ?893 ?894 ?895 ?896 ?897 ?898 ?899 ?900 ?901 ?902 ?903 ?904 ?905 ?906 ?907 ?908 ?909 ?910 ?911 ?912 ?913 ?914 ?915 ?916 ?917 ?918 ?919 ?920 ?921 ?922 ?923 ?924 ?925 ?926 ?927 ?928 ?929 ?930 ?931 ?932 ?933 ?934 ?935 ?936 ?937 ?938 ?939 ?940 ?941 ?942 ?943 ?944 ?945 ?946 ?947 ?948 ?949 ?950 ?951 ?952 ?953 ?954 ?955 ?956 ?957 ?958 ?959 ?960 ?961 ?962 ?963 ?964 ?965 ?966 ?967 ?968 ?969 ?970 ?971 ?972 ?973 ?974 ?975 ?976 ?977 ?978 ?979 ?980 ?981 ?982 ?983 ?984 ?985 ?986 ?987 ?988 ?989 ?990 ?991 ?992 ?993 ?994 ?995 ?996 ?997 ?998 ?999)
=================================================================================================================================================================

node info6:
=================================================================================================================================================================
NODE[n]      Type  Class Queue  Named Parent Child Rule Inhe Join  C1  C2 Pri VarEntry
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
R00001[3]    ROOT0 Rete0 UNIQ              0     0    0    0    0   0   0 900 [null, null, null]
R00003[1000] ROOT0 Rete0 UNIQ              0     0    0    0    0   0   0 900 [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
N00002[3]    NAME0 Named UNIQ   n1         0     0    0    0    0   0   0   0 [null, null, null]
N00004[1000] NAME0 Named UNIQ   n2         0     0    0    0    0   0   0   0 [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
=================================================================================================================================================================

priority info:
=================================================================================================================================================================
Priority        ROOT0 NAME0
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
900(root)    :      2      
000(inactive):            2
=================================================================================================================================================================

model count info:
=================================================================================================================================================================
name                              count
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
model-gc-trigger                      0
model-gc-count                        0
graph-gc-count                        0
graph-gc-node-remove                  0
graph-gc-node-clean                   0
graph-gc-inactive-leaf                0
graph-gc-cache                        0
=================================================================================================================================================================


MatchCount: BETA0 BETA2 BETA3

Entry Table:
	    ETA: total-action=0, new-action=0, max-size=0, capacity=256, expend=0
	  Entry: count=4, stmt=4
=================================================================================================================================================================
Entry Bit Map: total=4, max-id=4, create=4, removed=0, group-size=10, group-count=1
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
4 [4]
=================================================================================================================================================================
Length Array: min=3, max=1000
Entry[0003]= 2, n1(1)
Entry[1000]= 2, n2(1)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Length Array:
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
Length:   ROOT0   NAME0
     3:       1       1
  1000:       1       1
 total:       2       2
=================================================================================================================================================================
Ref Array:
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
RefCount: unRefer   ROOT0   NAME0
       0:       0
       1:       0       2       2
   total:       0       2       2
=================================================================================================================================================================
Ref Bit Map: total=4, max-id=4, create=4, removed=0, group-size=10, group-count=1
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
4 [4]
=================================================================================================================================================================

Model<m> frame:id=3, name=model, lvl=3, ref=1/1, entry=1, pid=2(main), subject=model
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
default_model        : 76       3        2    instance   model@m             
==========================================================================================================================


Global Info:

Total runtime info:
==========================================================================================================================
                          Name:     info
--------------------------------------------------------------------------------------------------------------------------
           Interpreter call id:      253
    Interpreter call level/max:        0        8
               Frame max level:        7
                  Frame max id:        9
           Frame free id count:        5
==========================================================================================================================

Optimize info:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       ERO: rebuild=0, compute=0
       CCO: rebuild=0, expr=0, call=0, cache=0, reuse=0
       TCO: rebuild=0, expr=0, call=0, node=0, compute=0, level=0, stack=0
       LCO: rebuild=0, arg=0, pass=0, hit=0
==========================================================================================================================

Expression compute count:
==========================================================================================================================
     RType:    Count
--------------------------------------------------------------------------------------------------------------------------
    factor:    12406
      func:     4020
==========================================================================================================================

Callable stats info: callId=253, row=26, column=64(4), value-max=3012, value-unit=3^x
==========================================================================================================================
   Frame    RType  Count  Ref Object                         23333333333333333333333333333333333333333333333333333333333455X9 max=13057, unit=3^x
--------------------------------------------------------------------------------------------------------------------------
    root   factor   4020    0 return                                                                                      398
    root   factor   4008    0 add-list-to-array                                                                           298
  system funcList   4008    1 add                                                                                         298
    root   factor   2006    0 +                                                                                           281
    root   factor   2004    0 to-atom                                                                                     28 
    root   factor    179    0 add-attribute                   1333333333333333333333333333333333333333333332                 
    root   factor     77    0 defun                                                                        2333123333 33442  
    root   factor     40    0 defconst                                                                                   5   
    root   factor     11    0 defvar                                                                           21       1 131
    root   factor      8    0 defmacro                                                                                  33   
    root   factor      7    0 alias                          22                                                      1       
  system funcList      6    1 to-list                                                                                     131
    root   factor      6    0 make-array                                                                                  131
    root   factor      6    0 loop                                                                                        131
    root   factor      6    0 do                                                                                          131
  system   factor      6    0 add-stmt                                                                                    131
    root   factor      6    0 add-array-to-list                                                                           131
    root   factor      4    0 make-list                                                                        21            
    root   factor      3    0 to-named-list                                                                                21
    main     func      3    1 (make_root_list int string)                                                                 12 
    main     func      3    1 (make_named_list int string)                                                                 21
    root   factor      3    0 load                                                                                      12   
    root   factor      3    0 deftemplate                                                                            2       
    root   factor      1    0 new                                                                                         1  
    root   factor      1    0 load-class                                                                                 1   
  system   factor      1    0 list-stmt                                                                                     1
==========================================================================================================================

Object create count:
==========================================================================================================================
       RType:       Create       Delete        Exist
--------------------------------------------------------------------------------------------------------------------------
        atom:        18386            0        18386
         int:         3500            0         3500
      string:         4102            0         4102
        list:         4102            4         4098
        expr:         5105         4020         1085
       array:            6            6            0
         var:        12075        12054           21
    constant:           40            0           40
        func:           94            0           94
    template:            1            0            1
       macro:            8            0            8
      member:           22            0           22
       frame:         8041         8040            1
 interpreter:            1            0
  frameEntry:        12438            0
      lambda:            0            0
==========================================================================================================================

Global frame list: total=1

id=2, name=main, lvl=2, ref=2/3, entry=79, pid=1(system), subject=main
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
root                 : 1        2        0    frame      frame@root          
system               : 2        2        0    frame      frame@system        
main                 : 3        2        2    frame      frame@main          
--                   : 4        2        2    macro      --                  
++                   : 5        2        2    macro      ++                  
inc                  : 6        2        2    macro      inc                 
dec                  : 7        2        2    macro      dec                 
max                  : 8        2        2    funcList   '((max list) (max nil nil)) : frame=null, type=list
                                         2    func       (max nil nil) : frame=frame@main
                                         1    func       (max list) : frame=frame@main
min                  : 9        2        2    funcList   '((min list) (min nil nil)) : frame=null, type=list
                                         2    func       (min nil nil) : frame=frame@main
                                         1    func       (min list) : frame=frame@main
is-empty             : 10       2        2    funcList   '((is-empty array) (is-empty list) (is-empty string)) : frame=null, type=list
                                         2    func       (is-empty list) : frame=frame@system
                                         2    func       (is-empty array) : frame=frame@system
                                         1    func       (is-empty string) : frame=frame@main
is-blank             : 11       2        2    func       (is-blank string) : frame=frame@main
file-prename         : 12       2        2    func       (file-prename string) : frame=frame@main
file-subffix         : 13       2        2    func       (file-subffix string) : frame=frame@main
sort                 : 14       2        4    funcList   '((sort array func) (sort array) (sort list func) (sort list)) : frame=null, type=list
                                         2    func       (sort list) : frame=frame@main
                                         1    func       (sort list func) : frame=frame@main
                                         1    func       (sort array) : frame=frame@main
                                         1    func       (sort array func) : frame=frame@main
print-list           : 15       2        3    funcList   '((print-list list) (print-list nil nil) (print-list nil)) : frame=null, type=list
                                         2    func       (print-list list) : frame=frame@main
                                         1    func       (print-list nil nil) : frame=frame@main
                                         1    func       (print-list nil) : frame=frame@main
to-valid-path        : 16       2        2    func       (to-valid-path string) : frame=frame@main
day-is-bigger-than   : 17       2        2    func       (day-is-bigger-than string string) : frame=frame@main
day-is-smaller-than  : 18       2        2    func       (day-is-smaller-than string string) : frame=frame@main
?script-path         : 19       2        2    var        result\factor\XRFactorAddStmtTest\test_add_stmt_c_max_stmt_len_1.rulp : type=string
script_out           : 20       2        2    macro      script_out          
_ginfo               : 21       2        2    funcList   '((_ginfo string) (_ginfo)) : frame=null, type=list
                                         2    func       (_ginfo) : frame=frame@main
                                         1    func       (_ginfo string) : frame=frame@main
RRT_ROOT             : 22       2        2    constant   RRT_ROOT:"0"        
RRT_NAME             : 23       2        2    constant   RRT_NAME:"1"        
RRT_VAR              : 24       2        2    constant   RRT_VAR:"2"         
RRT_CONST            : 25       2        2    constant   RRT_CONST:"3"       
RRT_ALPH0            : 26       2        2    constant   RRT_ALPH0:"4"       
RRT_ALPH1            : 27       2        2    constant   RRT_ALPH1:"5"       
RRT_EXPR0            : 28       2        2    constant   RRT_EXPR0:"6"       
RRT_EXPR1            : 29       2        2    constant   RRT_EXPR1:"7"       
RRT_EXPR2            : 30       2        2    constant   RRT_EXPR2:"8"       
RRT_EXPR3            : 31       2        2    constant   RRT_EXPR3:"9"       
RRT_EXPR4            : 32       2        2    constant   RRT_EXPR4:"10"      
RRT_BETA0            : 33       2        2    constant   RRT_BETA0:"11"      
RRT_BETA1            : 34       2        2    constant   RRT_BETA1:"12"      
RRT_BETA2            : 35       2        2    constant   RRT_BETA2:"13"      
RRT_BETA3            : 36       2        2    constant   RRT_BETA3:"14"      
RRT_RULE             : 37       2        2    constant   RRT_RULE:"15"       
RRT_WORK             : 38       2        2    constant   RRT_WORK:"16"       
ATTR_RETE_TYPE       : 39       2        2    constant   ATTR_RETE_TYPE:"rete-type"
ATTR_ENTRY_LEN       : 40       2        2    constant   ATTR_ENTRY_LEN:"entry-len"
RRS_DEFINE           : 41       2        2    constant   RRS_DEFINE:"0"      
RRS_REASON           : 42       2        2    constant   RRS_REASON:"1"      
RRS_ASSUME           : 43       2        2    constant   RRS_ASSUME:"2"      
RRS_REMOVE           : 44       2        2    constant   RRS_REMOVE:"3"      
RRS_FIXED            : 45       2        2    constant   RRS_FIXED:"4"       
RRS_TEMP             : 46       2        2    constant   RRS_TEMP:"5"        
RRS_ALL_STATUS       : 47       2        2    constant   RRS_ALL_STATUS:"'(0 1 2 3 4 5)"
RETE_QUEUE_EMPTY     : 48       2        2    constant   RETE_QUEUE_EMPTY:"0"
RETE_QUEUE_MULTI     : 49       2        2    constant   RETE_QUEUE_MULTI:"1"
RETE_QUEUE_SINGLE    : 50       2        2    constant   RETE_QUEUE_SINGLE:"2"
RETE_QUEUE_UNIQ      : 51       2        2    constant   RETE_QUEUE_UNIQ:"3" 
RETE_QUEUE_ACTION    : 52       2        2    constant   RETE_QUEUE_ACTION:"4"
RETE_PRIORITY_DEFAULT : 53       2        2    constant   RETE_PRIORITY_DEFAULT:"99"
RETE_PRIORITY_MAXIMUM : 54       2        2    constant   RETE_PRIORITY_MAXIMUM:"499"
RRUN_STATE_COMPLETED : 55       2        2    constant   RRUN_STATE_COMPLETED:"completed"
RRUN_STATE_FAILED    : 56       2        2    constant   RRUN_STATE_FAILED:"failed"
RRUN_STATE_HALTING   : 57       2        2    constant   RRUN_STATE_HALTING:"halting"
RRUN_STATE_RUNNABLE  : 58       2        2    constant   RRUN_STATE_RUNNABLE:"runnable"
RRUN_STATE_RUNNING   : 59       2        2    constant   RRUN_STATE_RUNNING:"running"
RRUN_STATE_PARTIAL   : 60       2        2    constant   RRUN_STATE_PARTIAL:"partial"
RETE_MAX_STMT_LEN    : 61       2        2    constant   RETE_MAX_STMT_LEN:"1000"
set-model-gc-capacity : 62       2        2    func       (set-model-gc-capacity type#model long) : frame=frame@main
set-model-gc-interval : 63       2        2    func       (set-model-gc-interval type#model long) : frame=frame@main
set-model-gc-inactive-leaf : 64       2        2    func       (set-model-gc-inactive-leaf type#model int) : frame=frame@main
set-model-gc-max-cache-node : 65       2        2    func       (set-model-gc-max-cache-node type#model int) : frame=frame@main
list-with-state      : 66       2        2    macro      list-with-state     
list-without-state   : 67       2        2    macro      list-without-state  
list-rule            : 68       2        2    macro      list-rule           
get-rule             : 69       2        2    func       (get-rule type#model string) : frame=frame@main
get-root-rete-node   : 70       2        2    func       (get-root-rete-node type#model int) : frame=frame@main
get-named-rete-node  : 71       2        2    func       (get-named-rete-node type#model string) : frame=frame@main
rete-type-of         : 72       2        2    func       (rete-type-of nil) : frame=frame@main
entry-length-of      : 73       2        2    func       (entry-length-of nil) : frame=frame@main
rete-valid-entry-of  : 74       2        2    func       (rete-valid-entry-of nil) : frame=frame@main
set-node-multi-queue : 75       2        2    func       (set-node-multi-queue type#model list) : frame=frame@main
m                    : 77       2        2    instance   model@m             
make_root_list       : 78       2        1    func       (make_root_list int string) : frame=frame@main
make_named_list      : 79       2        1    func       (make_named_list int string) : frame=frame@main
?rv                  : 95       2        1    var        n3:'(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  )... : type=list
==========================================================================================================================


id=3, name=model, lvl=3, ref=1/1, entry=1, pid=2(main), subject=model
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
default_model        : 76       3        2    instance   model@m             
==========================================================================================================================

Root var list: total=6
==========================================================================================================================
Var                  : Value
--------------------------------------------------------------------------------------------------------------------------
?load-class          : '("alpha.rulp.utils.RRuleLoader")
?load-jar            : '("rulp_rule_bin_0.0.1.jar")
?load-script         : '("C:\\data\\rs\\load\\tool.rulp" "C:\\data\\rs\\load\\test/itest.rulp" "C:\\data\\rs\\load\\rule.rulp")
?model-trace         : false
?path                : '()
?trace               : false
==========================================================================================================================

Global frame tree:

->FRAME(root): id=0, lvl=0, subject=root
    ->FRAME(system): id=1, lvl=1, subject=system
        ->FRAME(main): id=2, lvl=2, subject=main
            ->FRAME(model): id=3, lvl=3, subject=model

Global Subject list:

name=m, string=model@m, lvl=1, ref=2/4, parent=model, final=false, mbrs=7, frame=null
==========================================================================================================================
Name                           : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?cst-init                      : DEFAULT                      0    1    var        false : type=bool
?model-gc-capacity             : DEFAULT                      0    1    var        2048L : type=long
?model-gc-inactive-leaf        : DEFAULT                      0    1    var        30L : type=long
?model-gc-interval             : DEFAULT                      0    1    var        -1L : type=long
?model-gc-max-cache-node       : DEFAULT                      0    1    var        -1L : type=long
?model-state                   : DEFAULT                      0    1    var        completed : type=atom
this                           : DEFAULT                      0    2    instance   model@m
==========================================================================================================================



