Model<m> stats info:
===============================================================================================================================================================================
NODE    Create Delete Fixed Define Reason Assume  Drop Remove  Temp  Null BindFr BindTo Total Node Source  Exec  Idle Fail    Match Update Redunt MinL MaxL MinP MaxP QMatch  QFetch
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ROOT0         2      0     0      2      0      0     0     0     0     0      0      0     2    2      0     0     0    0        0      2      0    0    0  900  900      0       2
NAME0         2      0     0      2      0      0     0     0     0     0      0      0     2    2      0     0     0    0        0      2      0    0    0    0    0      0       2
===============================================================================================================================================================================

node info:
===============================================================================================================================================================================
NODE[n]      Create Delete  Fixed Define Reason Assume   Drop Remove  Temp  Null  Bind  Match Update Redunt Exec Idle  Waste Fail Lvl Pri Src   Use    Stage      PVisit
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
R00001[3]         1      0      0      1      0      0      0      0     0     0   0/0      0      1      0    0    0      *    0   0 900   0     0  InQueue            
R00003[1000]      1      0      0      1      0      0      0      0     0     0   0/0      0      1      0    0    0      *    0   0 900   0     0  InQueue            
N00002[3]         1      0      0      1      0      0      0      0     0     0   0/0      0      1      0    0    0      *    0   0   0   0     0 InActive            
N00004[1000]      1      0      0      1      0      0      0      0     0     0   0/0      0      1      0    0    0      *    0   0   0   0     0 InActive            
===============================================================================================================================================================================

node info3:
===============================================================================================================================================================================
NODE[n]      UniqName
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
R00001[3]    '(?_0 ?_1 ?_2)
R00003[1000] '(?_0 ?_1 ?_2 ?_3 ?_4 ?_5 ?_6 ?_7 ?_8 ?_9 ?_10 ?_11 ?_12 ?_13 ?_14 ?_15 ?_16 ?_17 ?_18 ?_19 ?_20 ?_21 ?_22 ?_23 ?_24 ?_25 ?_26 ?_27 ?_28 ?_29 ?_30 ?_31 ?_32 ?_33 ?_34 ?_35 ?_36 ?_37 ?_38 ?_39 ?_40 ?_41 ?_42 ?_43 ?_44 ?_45 ?_46 ?_47 ?_48 ?_49 ?_50 ?_51 ?_52 ?_53 ?_54 ?_55 ?_56 ?_57 ?_58 ?_59 ?_60 ?_61 ?_62 ?_63 ?_64 ?_65 ?_66 ?_67 ?_68 ?_69 ?_70 ?_71 ?_72 ?_73 ?_74 ?_75 ?_76 ?_77 ?_78 ?_79 ?_80 ?_81 ?_82 ?_83 ?_84 ?_85 ?_86 ?_87 ?_88 ?_89 ?_90 ?_91 ?_92 ?_93 ?_94 ?_95 ?_96 ?_97 ?_98 ?_99 ?_100 ?_101 ?_102 ?_103 ?_104 ?_105 ?_106 ?_107 ?_108 ?_109 ?_110 ?_111 ?_112 ?_113 ?_114 ?_115 ?_116 ?_117 ?_118 ?_119 ?_120 ?_121 ?_122 ?_123 ?_124 ?_125 ?_126 ?_127 ?_128 ?_129 ?_130 ?_131 ?_132 ?_133 ?_134 ?_135 ?_136 ?_137 ?_138 ?_139 ?_140 ?_141 ?_142 ?_143 ?_144 ?_145 ?_146 ?_147 ?_148 ?_149 ?_150 ?_151 ?_152 ?_153 ?_154 ?_155 ?_156 ?_157 ?_158 ?_159 ?_160 ?_161 ?_162 ?_163 ?_164 ?_165 ?_166 ?_167 ?_168 ?_169 ?_170 ?_171 ?_172 ?_173 ?_174 ?_175 ?_176 ?_177 ?_178 ?_179 ?_180 ?_181 ?_182 ?_183 ?_184 ?_185 ?_186 ?_187 ?_188 ?_189 ?_190 ?_191 ?_192 ?_193 ?_194 ?_195 ?_196 ?_197 ?_198 ?_199 ?_200 ?_201 ?_202 ?_203 ?_204 ?_205 ?_206 ?_207 ?_208 ?_209 ?_210 ?_211 ?_212 ?_213 ?_214 ?_215 ?_216 ?_217 ?_218 ?_219 ?_220 ?_221 ?_222 ?_223 ?_224 ?_225 ?_226 ?_227 ?_228 ?_229 ?_230 ?_231 ?_232 ?_233 ?_234 ?_235 ?_236 ?_237 ?_238 ?_239 ?_240 ?_241 ?_242 ?_243 ?_244 ?_245 ?_246 ?_247 ?_248 ?_249 ?_250 ?_251 ?_252 ?_253 ?_254 ?_255 ?_256 ?_257 ?_258 ?_259 ?_260 ?_261 ?_262 ?_263 ?_264 ?_265 ?_266 ?_267 ?_268 ?_269 ?_270 ?_271 ?_272 ?_273 ?_274 ?_275 ?_276 ?_277 ?_278 ?_279 ?_280 ?_281 ?_282 ?_283 ?_284 ?_285 ?_286 ?_287 ?_288 ?_289 ?_290 ?_291 ?_292 ?_293 ?_294 ?_295 ?_296 ?_297 ?_298 ?_299 ?_300 ?_301 ?_302 ?_303 ?_304 ?_305 ?_306 ?_307 ?_308 ?_309 ?_310 ?_311 ?_312 ?_313 ?_314 ?_315 ?_316 ?_317 ?_318 ?_319 ?_320 ?_321 ?_322 ?_323 ?_324 ?_325 ?_326 ?_327 ?_328 ?_329 ?_330 ?_331 ?_332 ?_333 ?_334 ?_335 ?_336 ?_337 ?_338 ?_339 ?_340 ?_341 ?_342 ?_343 ?_344 ?_345 ?_346 ?_347 ?_348 ?_349 ?_350 ?_351 ?_352 ?_353 ?_354 ?_355 ?_356 ?_357 ?_358 ?_359 ?_360 ?_361 ?_362 ?_363 ?_364 ?_365 ?_366 ?_367 ?_368 ?_369 ?_370 ?_371 ?_372 ?_373 ?_374 ?_375 ?_376 ?_377 ?_378 ?_379 ?_380 ?_381 ?_382 ?_383 ?_384 ?_385 ?_386 ?_387 ?_388 ?_389 ?_390 ?_391 ?_392 ?_393 ?_394 ?_395 ?_396 ?_397 ?_398 ?_399 ?_400 ?_401 ?_402 ?_403 ?_404 ?_405 ?_406 ?_407 ?_408 ?_409 ?_410 ?_411 ?_412 ?_413 ?_414 ?_415 ?_416 ?_417 ?_418 ?_419 ?_420 ?_421 ?_422 ?_423 ?_424 ?_425 ?_426 ?_427 ?_428 ?_429 ?_430 ?_431 ?_432 ?_433 ?_434 ?_435 ?_436 ?_437 ?_438 ?_439 ?_440 ?_441 ?_442 ?_443 ?_444 ?_445 ?_446 ?_447 ?_448 ?_449 ?_450 ?_451 ?_452 ?_453 ?_454 ?_455 ?_456 ?_457 ?_458 ?_459 ?_460 ?_461 ?_462 ?_463 ?_464 ?_465 ?_466 ?_467 ?_468 ?_469 ?_470 ?_471 ?_472 ?_473 ?_474 ?_475 ?_476 ?_477 ?_478 ?_479 ?_480 ?_481 ?_482 ?_483 ?_484 ?_485 ?_486 ?_487 ?_488 ?_489 ?_490 ?_491 ?_492 ?_493 ?_494 ?_495 ?_496 ?_497 ?_498 ?_499 ?_500 ?_501 ?_502 ?_503 ?_504 ?_505 ?_506 ?_507 ?_508 ?_509 ?_510 ?_511 ?_512 ?_513 ?_514 ?_515 ?_516 ?_517 ?_518 ?_519 ?_520 ?_521 ?_522 ?_523 ?_524 ?_525 ?_526 ?_527 ?_528 ?_529 ?_530 ?_531 ?_532 ?_533 ?_534 ?_535 ?_536 ?_537 ?_538 ?_539 ?_540 ?_541 ?_542 ?_543 ?_544 ?_545 ?_546 ?_547 ?_548 ?_549 ?_550 ?_551 ?_552 ?_553 ?_554 ?_555 ?_556 ?_557 ?_558 ?_559 ?_560 ?_561 ?_562 ?_563 ?_564 ?_565 ?_566 ?_567 ?_568 ?_569 ?_570 ?_571 ?_572 ?_573 ?_574 ?_575 ?_576 ?_577 ?_578 ?_579 ?_580 ?_581 ?_582 ?_583 ?_584 ?_585 ?_586 ?_587 ?_588 ?_589 ?_590 ?_591 ?_592 ?_593 ?_594 ?_595 ?_596 ?_597 ?_598 ?_599 ?_600 ?_601 ?_602 ?_603 ?_604 ?_605 ?_606 ?_607 ?_608 ?_609 ?_610 ?_611 ?_612 ?_613 ?_614 ?_615 ?_616 ?_617 ?_618 ?_619 ?_620 ?_621 ?_622 ?_623 ?_624 ?_625 ?_626 ?_627 ?_628 ?_629 ?_630 ?_631 ?_632 ?_633 ?_634 ?_635 ?_636 ?_637 ?_638 ?_639 ?_640 ?_641 ?_642 ?_643 ?_644 ?_645 ?_646 ?_647 ?_648 ?_649 ?_650 ?_651 ?_652 ?_653 ?_654 ?_655 ?_656 ?_657 ?_658 ?_659 ?_660 ?_661 ?_662 ?_663 ?_664 ?_665 ?_666 ?_667 ?_668 ?_669 ?_670 ?_671 ?_672 ?_673 ?_674 ?_675 ?_676 ?_677 ?_678 ?_679 ?_680 ?_681 ?_682 ?_683 ?_684 ?_685 ?_686 ?_687 ?_688 ?_689 ?_690 ?_691 ?_692 ?_693 ?_694 ?_695 ?_696 ?_697 ?_698 ?_699 ?_700 ?_701 ?_702 ?_703 ?_704 ?_705 ?_706 ?_707 ?_708 ?_709 ?_710 ?_711 ?_712 ?_713 ?_714 ?_715 ?_716 ?_717 ?_718 ?_719 ?_720 ?_721 ?_722 ?_723 ?_724 ?_725 ?_726 ?_727 ?_728 ?_729 ?_730 ?_731 ?_732 ?_733 ?_734 ?_735 ?_736 ?_737 ?_738 ?_739 ?_740 ?_741 ?_742 ?_743 ?_744 ?_745 ?_746 ?_747 ?_748 ?_749 ?_750 ?_751 ?_752 ?_753 ?_754 ?_755 ?_756 ?_757 ?_758 ?_759 ?_760 ?_761 ?_762 ?_763 ?_764 ?_765 ?_766 ?_767 ?_768 ?_769 ?_770 ?_771 ?_772 ?_773 ?_774 ?_775 ?_776 ?_777 ?_778 ?_779 ?_780 ?_781 ?_782 ?_783 ?_784 ?_785 ?_786 ?_787 ?_788 ?_789 ?_790 ?_791 ?_792 ?_793 ?_794 ?_795 ?_796 ?_797 ?_798 ?_799 ?_800 ?_801 ?_802 ?_803 ?_804 ?_805 ?_806 ?_807 ?_808 ?_809 ?_810 ?_811 ?_812 ?_813 ?_814 ?_815 ?_816 ?_817 ?_818 ?_819 ?_820 ?_821 ?_822 ?_823 ?_824 ?_825 ?_826 ?_827 ?_828 ?_829 ?_830 ?_831 ?_832 ?_833 ?_834 ?_835 ?_836 ?_837 ?_838 ?_839 ?_840 ?_841 ?_842 ?_843 ?_844 ?_845 ?_846 ?_847 ?_848 ?_849 ?_850 ?_851 ?_852 ?_853 ?_854 ?_855 ?_856 ?_857 ?_858 ?_859 ?_860 ?_861 ?_862 ?_863 ?_864 ?_865 ?_866 ?_867 ?_868 ?_869 ?_870 ?_871 ?_872 ?_873 ?_874 ?_875 ?_876 ?_877 ?_878 ?_879 ?_880 ?_881 ?_882 ?_883 ?_884 ?_885 ?_886 ?_887 ?_888 ?_889 ?_890 ?_891 ?_892 ?_893 ?_894 ?_895 ?_896 ?_897 ?_898 ?_899 ?_900 ?_901 ?_902 ?_903 ?_904 ?_905 ?_906 ?_907 ?_908 ?_909 ?_910 ?_911 ?_912 ?_913 ?_914 ?_915 ?_916 ?_917 ?_918 ?_919 ?_920 ?_921 ?_922 ?_923 ?_924 ?_925 ?_926 ?_927 ?_928 ?_929 ?_930 ?_931 ?_932 ?_933 ?_934 ?_935 ?_936 ?_937 ?_938 ?_939 ?_940 ?_941 ?_942 ?_943 ?_944 ?_945 ?_946 ?_947 ?_948 ?_949 ?_950 ?_951 ?_952 ?_953 ?_954 ?_955 ?_956 ?_957 ?_958 ?_959 ?_960 ?_961 ?_962 ?_963 ?_964 ?_965 ?_966 ?_967 ?_968 ?_969 ?_970 ?_971 ?_972 ?_973 ?_974 ?_975 ?_976 ?_977 ?_978 ?_979 ?_980 ?_981 ?_982 ?_983 ?_984 ?_985 ?_986 ?_987 ?_988 ?_989 ?_990 ?_991 ?_992 ?_993 ?_994 ?_995 ?_996 ?_997 ?_998 ?_999)
N00002[3]    n1:'(?_0 ?_1 ?_2)
N00004[1000] n2:'(?_0 ?_1 ?_2 ?_3 ?_4 ?_5 ?_6 ?_7 ?_8 ?_9 ?_10 ?_11 ?_12 ?_13 ?_14 ?_15 ?_16 ?_17 ?_18 ?_19 ?_20 ?_21 ?_22 ?_23 ?_24 ?_25 ?_26 ?_27 ?_28 ?_29 ?_30 ?_31 ?_32 ?_33 ?_34 ?_35 ?_36 ?_37 ?_38 ?_39 ?_40 ?_41 ?_42 ?_43 ?_44 ?_45 ?_46 ?_47 ?_48 ?_49 ?_50 ?_51 ?_52 ?_53 ?_54 ?_55 ?_56 ?_57 ?_58 ?_59 ?_60 ?_61 ?_62 ?_63 ?_64 ?_65 ?_66 ?_67 ?_68 ?_69 ?_70 ?_71 ?_72 ?_73 ?_74 ?_75 ?_76 ?_77 ?_78 ?_79 ?_80 ?_81 ?_82 ?_83 ?_84 ?_85 ?_86 ?_87 ?_88 ?_89 ?_90 ?_91 ?_92 ?_93 ?_94 ?_95 ?_96 ?_97 ?_98 ?_99 ?_100 ?_101 ?_102 ?_103 ?_104 ?_105 ?_106 ?_107 ?_108 ?_109 ?_110 ?_111 ?_112 ?_113 ?_114 ?_115 ?_116 ?_117 ?_118 ?_119 ?_120 ?_121 ?_122 ?_123 ?_124 ?_125 ?_126 ?_127 ?_128 ?_129 ?_130 ?_131 ?_132 ?_133 ?_134 ?_135 ?_136 ?_137 ?_138 ?_139 ?_140 ?_141 ?_142 ?_143 ?_144 ?_145 ?_146 ?_147 ?_148 ?_149 ?_150 ?_151 ?_152 ?_153 ?_154 ?_155 ?_156 ?_157 ?_158 ?_159 ?_160 ?_161 ?_162 ?_163 ?_164 ?_165 ?_166 ?_167 ?_168 ?_169 ?_170 ?_171 ?_172 ?_173 ?_174 ?_175 ?_176 ?_177 ?_178 ?_179 ?_180 ?_181 ?_182 ?_183 ?_184 ?_185 ?_186 ?_187 ?_188 ?_189 ?_190 ?_191 ?_192 ?_193 ?_194 ?_195 ?_196 ?_197 ?_198 ?_199 ?_200 ?_201 ?_202 ?_203 ?_204 ?_205 ?_206 ?_207 ?_208 ?_209 ?_210 ?_211 ?_212 ?_213 ?_214 ?_215 ?_216 ?_217 ?_218 ?_219 ?_220 ?_221 ?_222 ?_223 ?_224 ?_225 ?_226 ?_227 ?_228 ?_229 ?_230 ?_231 ?_232 ?_233 ?_234 ?_235 ?_236 ?_237 ?_238 ?_239 ?_240 ?_241 ?_242 ?_243 ?_244 ?_245 ?_246 ?_247 ?_248 ?_249 ?_250 ?_251 ?_252 ?_253 ?_254 ?_255 ?_256 ?_257 ?_258 ?_259 ?_260 ?_261 ?_262 ?_263 ?_264 ?_265 ?_266 ?_267 ?_268 ?_269 ?_270 ?_271 ?_272 ?_273 ?_274 ?_275 ?_276 ?_277 ?_278 ?_279 ?_280 ?_281 ?_282 ?_283 ?_284 ?_285 ?_286 ?_287 ?_288 ?_289 ?_290 ?_291 ?_292 ?_293 ?_294 ?_295 ?_296 ?_297 ?_298 ?_299 ?_300 ?_301 ?_302 ?_303 ?_304 ?_305 ?_306 ?_307 ?_308 ?_309 ?_310 ?_311 ?_312 ?_313 ?_314 ?_315 ?_316 ?_317 ?_318 ?_319 ?_320 ?_321 ?_322 ?_323 ?_324 ?_325 ?_326 ?_327 ?_328 ?_329 ?_330 ?_331 ?_332 ?_333 ?_334 ?_335 ?_336 ?_337 ?_338 ?_339 ?_340 ?_341 ?_342 ?_343 ?_344 ?_345 ?_346 ?_347 ?_348 ?_349 ?_350 ?_351 ?_352 ?_353 ?_354 ?_355 ?_356 ?_357 ?_358 ?_359 ?_360 ?_361 ?_362 ?_363 ?_364 ?_365 ?_366 ?_367 ?_368 ?_369 ?_370 ?_371 ?_372 ?_373 ?_374 ?_375 ?_376 ?_377 ?_378 ?_379 ?_380 ?_381 ?_382 ?_383 ?_384 ?_385 ?_386 ?_387 ?_388 ?_389 ?_390 ?_391 ?_392 ?_393 ?_394 ?_395 ?_396 ?_397 ?_398 ?_399 ?_400 ?_401 ?_402 ?_403 ?_404 ?_405 ?_406 ?_407 ?_408 ?_409 ?_410 ?_411 ?_412 ?_413 ?_414 ?_415 ?_416 ?_417 ?_418 ?_419 ?_420 ?_421 ?_422 ?_423 ?_424 ?_425 ?_426 ?_427 ?_428 ?_429 ?_430 ?_431 ?_432 ?_433 ?_434 ?_435 ?_436 ?_437 ?_438 ?_439 ?_440 ?_441 ?_442 ?_443 ?_444 ?_445 ?_446 ?_447 ?_448 ?_449 ?_450 ?_451 ?_452 ?_453 ?_454 ?_455 ?_456 ?_457 ?_458 ?_459 ?_460 ?_461 ?_462 ?_463 ?_464 ?_465 ?_466 ?_467 ?_468 ?_469 ?_470 ?_471 ?_472 ?_473 ?_474 ?_475 ?_476 ?_477 ?_478 ?_479 ?_480 ?_481 ?_482 ?_483 ?_484 ?_485 ?_486 ?_487 ?_488 ?_489 ?_490 ?_491 ?_492 ?_493 ?_494 ?_495 ?_496 ?_497 ?_498 ?_499 ?_500 ?_501 ?_502 ?_503 ?_504 ?_505 ?_506 ?_507 ?_508 ?_509 ?_510 ?_511 ?_512 ?_513 ?_514 ?_515 ?_516 ?_517 ?_518 ?_519 ?_520 ?_521 ?_522 ?_523 ?_524 ?_525 ?_526 ?_527 ?_528 ?_529 ?_530 ?_531 ?_532 ?_533 ?_534 ?_535 ?_536 ?_537 ?_538 ?_539 ?_540 ?_541 ?_542 ?_543 ?_544 ?_545 ?_546 ?_547 ?_548 ?_549 ?_550 ?_551 ?_552 ?_553 ?_554 ?_555 ?_556 ?_557 ?_558 ?_559 ?_560 ?_561 ?_562 ?_563 ?_564 ?_565 ?_566 ?_567 ?_568 ?_569 ?_570 ?_571 ?_572 ?_573 ?_574 ?_575 ?_576 ?_577 ?_578 ?_579 ?_580 ?_581 ?_582 ?_583 ?_584 ?_585 ?_586 ?_587 ?_588 ?_589 ?_590 ?_591 ?_592 ?_593 ?_594 ?_595 ?_596 ?_597 ?_598 ?_599 ?_600 ?_601 ?_602 ?_603 ?_604 ?_605 ?_606 ?_607 ?_608 ?_609 ?_610 ?_611 ?_612 ?_613 ?_614 ?_615 ?_616 ?_617 ?_618 ?_619 ?_620 ?_621 ?_622 ?_623 ?_624 ?_625 ?_626 ?_627 ?_628 ?_629 ?_630 ?_631 ?_632 ?_633 ?_634 ?_635 ?_636 ?_637 ?_638 ?_639 ?_640 ?_641 ?_642 ?_643 ?_644 ?_645 ?_646 ?_647 ?_648 ?_649 ?_650 ?_651 ?_652 ?_653 ?_654 ?_655 ?_656 ?_657 ?_658 ?_659 ?_660 ?_661 ?_662 ?_663 ?_664 ?_665 ?_666 ?_667 ?_668 ?_669 ?_670 ?_671 ?_672 ?_673 ?_674 ?_675 ?_676 ?_677 ?_678 ?_679 ?_680 ?_681 ?_682 ?_683 ?_684 ?_685 ?_686 ?_687 ?_688 ?_689 ?_690 ?_691 ?_692 ?_693 ?_694 ?_695 ?_696 ?_697 ?_698 ?_699 ?_700 ?_701 ?_702 ?_703 ?_704 ?_705 ?_706 ?_707 ?_708 ?_709 ?_710 ?_711 ?_712 ?_713 ?_714 ?_715 ?_716 ?_717 ?_718 ?_719 ?_720 ?_721 ?_722 ?_723 ?_724 ?_725 ?_726 ?_727 ?_728 ?_729 ?_730 ?_731 ?_732 ?_733 ?_734 ?_735 ?_736 ?_737 ?_738 ?_739 ?_740 ?_741 ?_742 ?_743 ?_744 ?_745 ?_746 ?_747 ?_748 ?_749 ?_750 ?_751 ?_752 ?_753 ?_754 ?_755 ?_756 ?_757 ?_758 ?_759 ?_760 ?_761 ?_762 ?_763 ?_764 ?_765 ?_766 ?_767 ?_768 ?_769 ?_770 ?_771 ?_772 ?_773 ?_774 ?_775 ?_776 ?_777 ?_778 ?_779 ?_780 ?_781 ?_782 ?_783 ?_784 ?_785 ?_786 ?_787 ?_788 ?_789 ?_790 ?_791 ?_792 ?_793 ?_794 ?_795 ?_796 ?_797 ?_798 ?_799 ?_800 ?_801 ?_802 ?_803 ?_804 ?_805 ?_806 ?_807 ?_808 ?_809 ?_810 ?_811 ?_812 ?_813 ?_814 ?_815 ?_816 ?_817 ?_818 ?_819 ?_820 ?_821 ?_822 ?_823 ?_824 ?_825 ?_826 ?_827 ?_828 ?_829 ?_830 ?_831 ?_832 ?_833 ?_834 ?_835 ?_836 ?_837 ?_838 ?_839 ?_840 ?_841 ?_842 ?_843 ?_844 ?_845 ?_846 ?_847 ?_848 ?_849 ?_850 ?_851 ?_852 ?_853 ?_854 ?_855 ?_856 ?_857 ?_858 ?_859 ?_860 ?_861 ?_862 ?_863 ?_864 ?_865 ?_866 ?_867 ?_868 ?_869 ?_870 ?_871 ?_872 ?_873 ?_874 ?_875 ?_876 ?_877 ?_878 ?_879 ?_880 ?_881 ?_882 ?_883 ?_884 ?_885 ?_886 ?_887 ?_888 ?_889 ?_890 ?_891 ?_892 ?_893 ?_894 ?_895 ?_896 ?_897 ?_898 ?_899 ?_900 ?_901 ?_902 ?_903 ?_904 ?_905 ?_906 ?_907 ?_908 ?_909 ?_910 ?_911 ?_912 ?_913 ?_914 ?_915 ?_916 ?_917 ?_918 ?_919 ?_920 ?_921 ?_922 ?_923 ?_924 ?_925 ?_926 ?_927 ?_928 ?_929 ?_930 ?_931 ?_932 ?_933 ?_934 ?_935 ?_936 ?_937 ?_938 ?_939 ?_940 ?_941 ?_942 ?_943 ?_944 ?_945 ?_946 ?_947 ?_948 ?_949 ?_950 ?_951 ?_952 ?_953 ?_954 ?_955 ?_956 ?_957 ?_958 ?_959 ?_960 ?_961 ?_962 ?_963 ?_964 ?_965 ?_966 ?_967 ?_968 ?_969 ?_970 ?_971 ?_972 ?_973 ?_974 ?_975 ?_976 ?_977 ?_978 ?_979 ?_980 ?_981 ?_982 ?_983 ?_984 ?_985 ?_986 ?_987 ?_988 ?_989 ?_990 ?_991 ?_992 ?_993 ?_994 ?_995 ?_996 ?_997 ?_998 ?_999)
===============================================================================================================================================================================

node info6:
===============================================================================================================================================================================
NODE[n]      Type  Class Queue  Named Parent Child Rule Inhe Join  C1  C2 Pri VarEntry
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
R00001[3]    ROOT0 Rete0 UNIQ              0     0    0    0    0   0   0 900 [null, null, null]
R00003[1000] ROOT0 Rete0 UNIQ              0     0    0    0    0   0   0 900 [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
N00002[3]    NAME0 Named UNIQ   n1         0     0    0    0    0   0   0   0 [null, null, null]
N00004[1000] NAME0 Named UNIQ   n2         0     0    0    0    0   0   0   0 [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
===============================================================================================================================================================================

cache info:
===============================================================================================================================================================================
NODE[n]      Node                           Queue                          Constraint
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
R00001[3]                                   uniqEntryMap: size=1           
R00003[1000]                                uniqEntryMap: size=1           
N00002[3]                                   uniqEntryMap: size=1           
N00004[1000]                                uniqEntryMap: size=1           
===============================================================================================================================================================================

priority info:
===============================================================================================================================================================================
Priority        ROOT0 NAME0
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
900(root)    :      2      
000(inactive):            2
===============================================================================================================================================================================

model count info:
===============================================================================================================================================================================
name                              count
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
model-addStatement                    6
model-addUpdateNode                   4
model-listStatements                  1
graph-createNodeRoot                  4
graph-listSourceNodes                12
===============================================================================================================================================================================


MatchCount: BETA0 BETA2 BETA3

Entry Table:
	    ETA: total-action=0, new-action=0, max-size=0, capacity=256, expend=0
	  Entry: count=4, stmt=4
===============================================================================================================================================================================
Entry Bit Map: total=4, max-id=4, create=4, removed=0, group-size=10, group-count=1
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4 [4]
===============================================================================================================================================================================
Length Array: min=3, max=1000
Entry[0003]= 2, n1(1)
Entry[1000]= 2, n2(1)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Length Array:
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Length:   ROOT0   NAME0
     3:       1       1
  1000:       1       1
 total:       2       2
===============================================================================================================================================================================
Ref Array:
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
RefCount: unRefer   ROOT0   NAME0
       0:       0
       1:       0       2       2
   total:       0       2       2
===============================================================================================================================================================================
Ref Bit Map: total=4, max-id=4, create=4, removed=0, group-size=10, group-count=1
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4 [4]
===============================================================================================================================================================================

Model<m> frame:id=3, name=model, lvl=3, ref=1/1, entry=1, pid=2(main), subject=model
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
default_model        : 84       3        2    instance   model@m             
==========================================================================================================================


Global Info:

Total runtime info:
==========================================================================================================================
                          Name:     info
--------------------------------------------------------------------------------------------------------------------------
           Interpreter call id:      255
    Interpreter call level/max:        0        8
               Frame max level:        7
                  Frame max id:        9
           Frame free id count:        5
==========================================================================================================================

Optimize info:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       ERO: rebuild=0, compute=0
       CCO: rebuild=0, expr=0, call=0, cache=0, reuse=0
       TCO: rebuild=0, expr=0, call=0, node=0, compute=0, level=0, stack=0
       LCO: rebuild=0, arg=0, pass=0, hit=0
==========================================================================================================================

Expression compute count:
==========================================================================================================================
     RType:    Count
--------------------------------------------------------------------------------------------------------------------------
    factor:    12416
      func:     4020
==========================================================================================================================

Callable stats info: callId=255, row=26, column=64(4), value-max=3008, value-unit=3^x
==========================================================================================================================
   Frame    RType  Count  Ref Object                         233333333333333333333333333333333333333333333333333333333333559X max=11043, unit=3^x
--------------------------------------------------------------------------------------------------------------------------
    root   factor   4020    0 return                                                                                       89
    root   factor   4008    0 add-list-to-array                                                                            89
  system funcList   4008    1 add                                                                                          89
    root   factor   2006    0 +                                                                                            88
    root   factor   2004    0 to-atom                                                                                      88
    root   factor    178    0 add-attribute                   1333333333333333333333333333333333333333333331                 
    root   factor     82    0 defun                                                                        2333 333331233441 
    root   factor     46    0 defconst                                                                                    5  
    root   factor     11    0 defvar                                                                           3         1 22
    root   factor      8    0 defmacro                                                                                   32  
    root   factor      7    0 alias                          22                                                       1      
  system funcList      6    1 to-list                                                                                      22
    root   factor      6    0 make-array                                                                                   22
    root   factor      6    0 loop                                                                                         22
    root   factor      6    0 do                                                                                           22
  system   factor      6    0 add-stmt                                                                                     22
    root   factor      6    0 add-array-to-list                                                                            22
    root   factor      4    0 make-list                                                                        3             
    root   factor      3    0 to-named-list                                                                                12
    main     func      3    1 (make_root_list int string)                                                                  21
    main     func      3    1 (make_named_list int string)                                                                 12
    root   factor      3    0 load                                                                                       12  
    root   factor      3    0 deftemplate                                                                            2       
    root   factor      1    0 new                                                                                         1  
    root   factor      1    0 load-class                                                                                  1  
  system   factor      1    0 list-stmt                                                                                     1
==========================================================================================================================

Object create count:
==========================================================================================================================
       RType:       Create       Delete        Exist
--------------------------------------------------------------------------------------------------------------------------
        atom:        18491            0        18491
         int:         3500            0         3500
      string:         4105            0         4105
        list:         4103            4         4099
        expr:         5161         4020         1141
       array:            6            6            0
         var:        12076        12054           22
    constant:           46            0           46
        func:           99            0           99
    template:            1            0            1
       macro:            8            0            8
      member:           22            0           22
       frame:         8041         8040            1
 interpreter:            1            0
  frameEntry:        12456            0
      lambda:            0            0
==========================================================================================================================

Global frame list: total=1

id=2, name=main, lvl=2, ref=2/3, entry=87, pid=1(system), subject=main
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
root                 : 1        2        0    frame      frame@root          
system               : 2        2        0    frame      frame@system        
main                 : 3        2        2    frame      frame@main          
--                   : 4        2        2    macro      --                  
++                   : 5        2        2    macro      ++                  
inc                  : 6        2        2    macro      inc                 
dec                  : 7        2        2    macro      dec                 
max                  : 8        2        2    funcList   '((max list) (max nil nil)) : frame=null, type=list
                                         2    func       (max nil nil) : frame=frame@main
                                         1    func       (max list) : frame=frame@main
min                  : 9        2        2    funcList   '((min list) (min nil nil)) : frame=null, type=list
                                         2    func       (min nil nil) : frame=frame@main
                                         1    func       (min list) : frame=frame@main
is-empty             : 10       2        2    funcList   '((is-empty array) (is-empty list) (is-empty string)) : frame=null, type=list
                                         2    func       (is-empty list) : frame=frame@system
                                         2    func       (is-empty array) : frame=frame@system
                                         1    func       (is-empty string) : frame=frame@main
is-blank             : 11       2        2    func       (is-blank string) : frame=frame@main
file-prename         : 12       2        2    func       (file-prename string) : frame=frame@main
file-subffix         : 13       2        2    func       (file-subffix string) : frame=frame@main
str-split-line       : 14       2        2    func       (str-split-line string) : frame=frame@main
to-one-line          : 15       2        2    func       (to-one-line list) : frame=frame@main
sort                 : 16       2        4    funcList   '((sort array func) (sort array) (sort list func) (sort list)) : frame=null, type=list
                                         2    func       (sort list) : frame=frame@main
                                         1    func       (sort list func) : frame=frame@main
                                         1    func       (sort array) : frame=frame@main
                                         1    func       (sort array func) : frame=frame@main
print-list           : 17       2        3    funcList   '((print-list list) (print-list nil nil) (print-list nil)) : frame=null, type=list
                                         2    func       (print-list list) : frame=frame@main
                                         1    func       (print-list nil nil) : frame=frame@main
                                         1    func       (print-list nil) : frame=frame@main
to-valid-path        : 18       2        2    func       (to-valid-path string) : frame=frame@main
day-is-bigger-than   : 19       2        2    func       (day-is-bigger-than string string) : frame=frame@main
day-is-smaller-than  : 20       2        2    func       (day-is-smaller-than string string) : frame=frame@main
?script-path         : 21       2        2    var        result\factor\XRFactorAddStmtTest\test_add_stmt_c_max_stmt_len_1.rulp : type=string
script_out           : 22       2        2    macro      script_out          
_ginfo               : 23       2        2    funcList   '((_ginfo string) (_ginfo)) : frame=null, type=list
                                         2    func       (_ginfo) : frame=frame@main
                                         1    func       (_ginfo string) : frame=frame@main
RRT_ROOT             : 24       2        2    constant   RRT_ROOT:"0"        
RRT_NAME             : 25       2        2    constant   RRT_NAME:"1"        
RRT_VAR              : 26       2        2    constant   RRT_VAR:"2"         
RRT_CONST            : 27       2        2    constant   RRT_CONST:"3"       
RRT_ALPH0            : 28       2        2    constant   RRT_ALPH0:"4"       
RRT_ALPH1            : 29       2        2    constant   RRT_ALPH1:"5"       
RRT_EXPR0            : 30       2        2    constant   RRT_EXPR0:"6"       
RRT_EXPR1            : 31       2        2    constant   RRT_EXPR1:"7"       
RRT_EXPR2            : 32       2        2    constant   RRT_EXPR2:"8"       
RRT_EXPR3            : 33       2        2    constant   RRT_EXPR3:"9"       
RRT_EXPR4            : 34       2        2    constant   RRT_EXPR4:"10"      
RRT_BETA0            : 35       2        2    constant   RRT_BETA0:"11"      
RRT_BETA1            : 36       2        2    constant   RRT_BETA1:"12"      
RRT_BETA2            : 37       2        2    constant   RRT_BETA2:"13"      
RRT_BETA3            : 38       2        2    constant   RRT_BETA3:"14"      
RRT_ZETA0            : 39       2        2    constant   RRT_ZETA0:"15"      
RRT_RULE             : 40       2        2    constant   RRT_RULE:"16"       
RRT_WORK             : 41       2        2    constant   RRT_WORK:"17"       
RRT_INDEX            : 42       2        2    constant   RRT_INDEX:"18"      
RRT_INHER            : 43       2        2    constant   RRT_INHER:"19"      
RRT_OR0              : 44       2        2    constant   RRT_OR0:"20"        
RRT_DUP              : 45       2        2    constant   RRT_DUP:"21"        
ATTR_RETE_TYPE       : 46       2        2    constant   ATTR_RETE_TYPE:"rete-type"
ATTR_ENTRY_LEN       : 47       2        2    constant   ATTR_ENTRY_LEN:"entry-len"
RRS_DEFINE           : 48       2        2    constant   RRS_DEFINE:"0"      
RRS_REASON           : 49       2        2    constant   RRS_REASON:"1"      
RRS_ASSUME           : 50       2        2    constant   RRS_ASSUME:"2"      
RRS_REMOVE           : 51       2        2    constant   RRS_REMOVE:"3"      
RRS_FIXED            : 52       2        2    constant   RRS_FIXED:"4"       
RRS_TEMP             : 53       2        2    constant   RRS_TEMP:"5"        
RRS_ALL_STATUS       : 54       2        2    constant   RRS_ALL_STATUS:"'(0 1 2 3 4 5)"
RETE_QUEUE_EMPTY     : 55       2        2    constant   RETE_QUEUE_EMPTY:"0"
RETE_QUEUE_MULTI     : 56       2        2    constant   RETE_QUEUE_MULTI:"1"
RETE_QUEUE_SINGLE    : 57       2        2    constant   RETE_QUEUE_SINGLE:"2"
RETE_QUEUE_UNIQ      : 58       2        2    constant   RETE_QUEUE_UNIQ:"3" 
RETE_QUEUE_ACTION    : 59       2        2    constant   RETE_QUEUE_ACTION:"4"
RETE_QUEUE_ORDER     : 60       2        2    constant   RETE_QUEUE_ORDER:"5"
RETE_PRIORITY_DEFAULT : 61       2        2    constant   RETE_PRIORITY_DEFAULT:"99"
RETE_PRIORITY_MAXIMUM : 62       2        2    constant   RETE_PRIORITY_MAXIMUM:"499"
RRUN_STATE_COMPLETED : 63       2        2    constant   RRUN_STATE_COMPLETED:"completed"
RRUN_STATE_FAILED    : 64       2        2    constant   RRUN_STATE_FAILED:"failed"
RRUN_STATE_HALTING   : 65       2        2    constant   RRUN_STATE_HALTING:"halting"
RRUN_STATE_RUNNABLE  : 66       2        2    constant   RRUN_STATE_RUNNABLE:"runnable"
RRUN_STATE_RUNNING   : 67       2        2    constant   RRUN_STATE_RUNNING:"running"
RRUN_STATE_PARTIAL   : 68       2        2    constant   RRUN_STATE_PARTIAL:"partial"
RETE_MAX_STMT_LEN    : 69       2        2    constant   RETE_MAX_STMT_LEN:"1000"
set-model-gc-capacity : 70       2        2    func       (set-model-gc-capacity type#model long) : frame=frame@main
set-model-gc-interval : 71       2        2    func       (set-model-gc-interval type#model long) : frame=frame@main
set-model-gc-inactive-leaf : 72       2        2    func       (set-model-gc-inactive-leaf type#model int) : frame=frame@main
set-model-gc-max-cache-node : 73       2        2    func       (set-model-gc-max-cache-node type#model int) : frame=frame@main
list-with-state      : 74       2        2    macro      list-with-state     
list-without-state   : 75       2        2    macro      list-without-state  
list-rule            : 76       2        2    macro      list-rule           
get-rule             : 77       2        2    func       (get-rule type#model string) : frame=frame@main
get-root-rete-node   : 78       2        2    func       (get-root-rete-node type#model int) : frame=frame@main
get-named-rete-node  : 79       2        2    func       (get-named-rete-node type#model string) : frame=frame@main
rete-type-of         : 80       2        2    func       (rete-type-of nil) : frame=frame@main
entry-length-of      : 81       2        2    func       (entry-length-of nil) : frame=frame@main
rete-valid-entry-of  : 82       2        2    func       (rete-valid-entry-of nil) : frame=frame@main
set-node-multi-queue : 83       2        2    func       (set-node-multi-queue type#model list) : frame=frame@main
m                    : 85       2        2    instance   model@m             
make_root_list       : 86       2        1    func       (make_root_list int string) : frame=frame@main
make_named_list      : 87       2        1    func       (make_named_list int string) : frame=frame@main
?rv                  : 103      2        1    var        n3:'(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  )... : type=list
==========================================================================================================================


id=3, name=model, lvl=3, ref=1/1, entry=1, pid=2(main), subject=model
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
default_model        : 84       3        2    instance   model@m             
==========================================================================================================================

Root var list: total=7
==========================================================================================================================
Var                  : Value
--------------------------------------------------------------------------------------------------------------------------
?bs-trace            : false
?load-class          : '("alpha.rulp.utils.RRuleLoader")
?load-jar            : '("rulp_rule_bin_0.0.1.jar")
?load-script         : '("C:\\data\\rs\\load\\tool.rulp" "C:\\data\\rs\\load\\test/itest.rulp" "C:\\data\\rs\\load\\rule.rulp")
?model-trace         : false
?path                : '()
?trace               : false
==========================================================================================================================

Global frame tree:

->FRAME(root): id=0, lvl=0, subject=root
    ->FRAME(system): id=1, lvl=1, subject=system
        ->FRAME(main): id=2, lvl=2, subject=main
            ->FRAME(model): id=3, lvl=3, subject=model

Global Subject list:

name=m, string=model@m, lvl=1, ref=2/4, parent=model, final=false, mbrs=7, frame=null
==========================================================================================================================
Name                           : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?cst-init                      : DEFAULT                      0    1    var        false : type=bool
?model-gc-capacity             : DEFAULT                      0    1    var        2048L : type=long
?model-gc-inactive-leaf        : DEFAULT                      0    1    var        30L : type=long
?model-gc-interval             : DEFAULT                      0    1    var        -1L : type=long
?model-gc-max-cache-node       : DEFAULT                      0    1    var        -1L : type=long
?model-state                   : DEFAULT                      0    1    var        completed : type=atom
this                           : DEFAULT                      0    2    instance   model@m
==========================================================================================================================



