(ls-print root)
;=>nil
;out:
mbr=!=, name=!=, type=factor, property='(public)
mbr=%, name=%, type=factor, property='(public)
mbr=&, name=&, type=factor, property='(public)
mbr=*, name=*, type=factor, property='(public)
mbr=+, name=+, type=factor, property='(public)
mbr=-, name=-, type=factor, property='(public)
mbr=/, name=/, type=factor, property='(public)
mbr=::, name=::, type=factor, property='(public)
mbr=<, name=<, type=factor, property='(public)
mbr=<=, name=<=, type=factor, property='(public)
mbr==, name==, type=factor, property='(public)
mbr=>, name=>, type=factor, property='(public)
mbr=>=, name=>=, type=factor, property='(public)
mbr=?file.separator, name=?file.separator, type=var, property='(public), value="\"
mbr=?os.name, name=?os.name, type=var, property='(public), value="Windows 10"
mbr=?os.version, name=?os.version, type=var, property='(public), value="10.0"
mbr=?path.separator, name=?path.separator, type=var, property='(public), value=";"
mbr=?user.dir, name=?user.dir, type=var, property='(public), value="C:\data\itool\irulp_rule"
mbr=?user.home, name=?user.home, type=var, property='(public), value="C:\Users\YANLIU"
mbr=?user.name, name=?user.name, type=var, property='(public), value="921511672"
mbr=^, name=^, type=factor, property='(public)
mbr=access, name=access, type=factor, property='(public)
mbr=add-array-to-list, name=add-array-to-list, type=factor, property='(public)
mbr=add-list-to-array, name=add-list-to-array, type=factor, property='(public)
mbr=add-list-to-list, name=add-list-to-list, type=factor, property='(public)
mbr=add_search_frame, name=add_search_frame, type=factor, property='(public)
mbr=alias, name=alias, type=factor, property='(public)
mbr=and, name=and, type=factor, property='(public)
mbr=annotation, name=annotation, type=atom, property='(public)
mbr=array, name=array, type=atom, property='(public)
mbr=atom, name=atom, type=atom, property='(public)
mbr=blob, name=blob, type=atom, property='(public)
mbr=blob-length, name=blob-length, type=factor, property='(public)
mbr=bool, name=bool, type=atom, property='(public)
mbr=break, name=break, type=factor, property='(public)
mbr=can-cast, name=can-cast, type=factor, property='(public)
mbr=case, name=case, type=factor, property='(public)
mbr=class, name=class, type=atom, property='(public)
mbr=class-of, name=class-of, type=factor, property='(public)
mbr=cmp_def, name=cmp_def, type=factor, property='(public)
mbr=compute, name=compute, type=factor, property='(public)
mbr=constant, name=constant, type=atom, property='(public)
mbr=continue, name=continue, type=factor, property='(public)
mbr=cps-callee, name=cps-callee, type=factor, property='(public)
mbr=cps-count, name=cps-count, type=factor, property='(public)
mbr=date, name=date, type=factor, property='(public)
mbr=default, name=default, type=atom, property='(public)
mbr=defclass, name=defclass, type=factor, property='(public)
mbr=defconst, name=defconst, type=factor, property='(public)
mbr=defmacro, name=defmacro, type=factor, property='(public)
mbr=deftemplate, name=deftemplate, type=factor, property='(public)
mbr=defun, name=defun, type=factor, property='(public)
mbr=defvar, name=defvar, type=factor, property='(public)
mbr=delete, name=delete, type=factor, property='(public)
mbr=do, name=do, type=factor, property='(public)
mbr=do-p, name=do-p, type=factor, property='(public)
mbr=do-when-obj-deleted, name=do-when-obj-deleted, type=factor, property='(public)
mbr=do-when-var-changed, name=do-when-var-changed, type=factor, property='(public)
mbr=double, name=double, type=atom, property='(public)
mbr=equal_def, name=equal_def, type=factor, property='(public)
mbr=error, name=error, type=factor, property='(public)
mbr=error-value, name=error-value, type=factor, property='(public)
mbr=expr, name=expr, type=atom, property='(public)
mbr=factor, name=factor, type=atom, property='(public)
mbr=false, name=nil, type=bool, property='(public)
mbr=final, name=final, type=atom, property='(public)
mbr=float, name=float, type=atom, property='(public)
mbr=foreach, name=foreach, type=factor, property='(public)
mbr=frame, name=frame, type=atom, property='(public)
mbr=frame-of, name=frame-of, type=factor, property='(public)
mbr=from, name=from, type=atom, property='(public)
mbr=func, name=func, type=atom, property='(public)
mbr=get-of-array, name=get-of-array, type=factor, property='(public)
mbr=get-of-list, name=get-of-list, type=factor, property='(public)
mbr=has-member, name=has-member, type=factor, property='(public)
mbr=if, name=if, type=factor, property='(public)
mbr=instance, name=instance, type=atom, property='(public)
mbr=int, name=int, type=atom, property='(public)
mbr=is-const, name=is-const, type=factor, property='(public)
mbr=is-stable, name=is-stable, type=factor, property='(public)
mbr=join, name=join, type=factor, property='(public)
mbr=lambda, name=lambda, type=factor, property='(public)
mbr=let, name=let, type=factor, property='(public)
mbr=list, name=list, type=atom, property='(public)
mbr=load, name=load, type=factor, property='(public)
mbr=long, name=long, type=atom, property='(public)
mbr=loop, name=loop, type=factor, property='(public)
mbr=ls, name=ls, type=factor, property='(public)
mbr=macro, name=macro, type=atom, property='(public)
mbr=make-array, name=make-array, type=factor, property='(public)
mbr=make-blob, name=make-blob, type=factor, property='(public)
mbr=make-cps, name=make-cps, type=factor, property='(public)
mbr=make-list, name=make-list, type=factor, property='(public)
mbr=make-string, name=make-string, type=factor, property='(public)
mbr=member, name=member, type=atom, property='(public)
mbr=name-of, name=name-of, type=factor, property='(public)
mbr=namespace, name=namespace, type=class, property='(public), class-property='()
mbr=nan, name=nan, type=atom, property='(public)
mbr=native, name=native, type=atom, property='(public)
mbr=new, name=new, type=factor, property='(public)
mbr=nil, name=nil, type=null, property='(public)
mbr=noclass, name=noclass, type=class, property='(public), class-property='(final)
mbr=not, name=not, type=factor, property='(public)
mbr=null, name=null, type=atom, property='(public)
mbr=open-txt-file, name=open-txt-file, type=factor, property='(public)
mbr=or, name=or, type=factor, property='(public)
mbr=out-to-file, name=out-to-file, type=factor, property='(public)
mbr=parent-of, name=parent-of, type=factor, property='(public)
mbr=power, name=power, type=factor, property='(public)
mbr=print, name=print, type=factor, property='(public)
mbr=print-frame-tree, name=print-frame-tree, type=factor, property='(public)
mbr=print-global-info, name=print-global-info, type=factor, property='(public)
mbr=print-subject, name=print-subject, type=factor, property='(public)
mbr=private, name=private, type=atom, property='(public)
mbr=property-of, name=property-of, type=factor, property='(public)
mbr=public, name=public, type=atom, property='(public)
mbr=random, name=random, type=factor, property='(public)
mbr=ref, name=ref, type=factor, property='(public)
mbr=remove, name=remove, type=factor, property='(public)
mbr=return, name=return, type=factor, property='(public)
mbr=reverse, name=reverse, type=factor, property='(public)
mbr=root, name=root, type=frame, property='(public)
mbr=rulp-object-count, name=rulp-object-count, type=factor, property='(public)
mbr=save-txt-file, name=save-txt-file, type=factor, property='(public)
mbr=search-frame-of, name=search-frame-of, type=factor, property='(public)
mbr=seta, name=seta, type=factor, property='(public)
mbr=setq, name=setq, type=factor, property='(public)
mbr=size-of-array, name=size-of-array, type=factor, property='(public)
mbr=size-of-list, name=size-of-list, type=factor, property='(public)
mbr=sleep, name=sleep, type=factor, property='(public)
mbr=sort, name=sort, type=factor, property='(public)
mbr=static, name=static, type=atom, property='(public)
mbr=str-char-at, name=str-char-at, type=factor, property='(public)
mbr=str-end-with, name=str-end-with, type=factor, property='(public)
mbr=str-equal, name=str-equal, type=factor, property='(public)
mbr=str-equal-nocase, name=str-equal-nocase, type=factor, property='(public)
mbr=str-format, name=str-format, type=factor, property='(public)
mbr=str-index-of, name=str-index-of, type=factor, property='(public)
mbr=str-last-index-of, name=str-last-index-of, type=factor, property='(public)
mbr=str-length, name=str-length, type=factor, property='(public)
mbr=str-match, name=str-match, type=factor, property='(public)
mbr=str-replace, name=str-replace, type=factor, property='(public)
mbr=str-split, name=str-split, type=factor, property='(public)
mbr=str-split-line, name=str-split-line, type=factor, property='(public)
mbr=str-start-with, name=str-start-with, type=factor, property='(public)
mbr=str-substr, name=str-substr, type=factor, property='(public)
mbr=str-trim, name=str-trim, type=factor, property='(public)
mbr=str-trim-head, name=str-trim-head, type=factor, property='(public)
mbr=str-trim-tail, name=str-trim-tail, type=factor, property='(public)
mbr=str-upper, name=str-upper, type=factor, property='(public)
mbr=strcat, name=strcat, type=factor, property='(public)
mbr=string, name=string, type=atom, property='(public)
mbr=subject-of, name=subject-of, type=factor, property='(public)
mbr=sys-gc, name=sys-gc, type=factor, property='(public)
mbr=sys-time, name=sys-time, type=factor, property='(public)
mbr=to-atom, name=to-atom, type=factor, property='(public)
mbr=to-blob, name=to-blob, type=factor, property='(public)
mbr=to-expr, name=to-expr, type=factor, property='(public)
mbr=to-int, name=to-int, type=factor, property='(public)
mbr=to-named-list, name=to-named-list, type=factor, property='(public)
mbr=to-nonamed-list, name=to-nonamed-list, type=factor, property='(public)
mbr=to-string, name=to-string, type=factor, property='(public)
mbr=true, name=nil, type=bool, property='(public)
mbr=try, name=try, type=factor, property='(public)
mbr=type#namespace, name=type#namespace, type=atom, property='(public)
mbr=type#noclass, name=type#noclass, type=atom, property='(public)
mbr=type-of, name=type-of, type=factor, property='(public)
mbr=union, name=union, type=factor, property='(public)
mbr=uniq, name=uniq, type=factor, property='(public)
mbr=value-of, name=value-of, type=factor, property='(public)
mbr=value-type-of, name=value-type-of, type=factor, property='(public)
mbr=var, name=var, type=atom, property='(public)
mbr=when, name=when, type=factor, property='(public)
mbr=write-blob, name=write-blob, type=factor, property='(public)
mbr=|, name=|, type=factor, property='(public)
mbr=~, name=~, type=factor, property='(public)

;eof

(ls-print system)
;=>nil
;out:
mbr=++, name=++, type=macro, property='(public)
mbr=--, name=--, type=macro, property='(public)
mbr=?load-paths, name=?load-paths, type=var, property='(public), value="'()"
mbr=?model-trace, name=?model-trace, type=var, property='(public), value="false"
mbr=?op-cps, name=?op-cps, type=var, property='(public), value="false"
mbr=?op-stable, name=?op-stable, type=var, property='(public), value="false"
mbr=?trace, name=?trace, type=var, property='(public), value="false"
mbr=add, name='((add array nil nil nil) (add array nil nil) (add array nil) (add list nil nil nil) (add list nil nil) (add list nil)), type=func, property='(public)
mbr=add-all, name=(add-all list list), type=func, property='(public)
mbr=add-constraint, name=add-constraint, type=factor, property='(public)
mbr=add-lazy-stmt, name=add-lazy-stmt, type=factor, property='(public)
mbr=add-node, name=add-node, type=factor, property='(public)
mbr=add-rule, name=add-rule, type=factor, property='(public)
mbr=add-stmt, name=add-stmt, type=factor, property='(public)
mbr=add_cst_constraint_max, name=(add_cst_constraint_max type#model string nil int), type=func, property='(public)
mbr=add_cst_constraint_min, name=(add_cst_constraint_min type#model string nil int), type=func, property='(public)
mbr=add_cst_constraint_one_of, name=(add_cst_constraint_one_of type#model string nil list), type=func, property='(public)
mbr=add_cst_constraint_type, name=(add_cst_constraint_type type#model string nil nil), type=func, property='(public)
mbr=assume-stmt, name=assume-stmt, type=factor, property='(public)
mbr=assumed, name=assumed, type=atom, property='(public)
mbr=clear, name='((clear type#map) (clear type#queue) (clear type#set) (clear type#stack)), type=func, property='(public)
mbr=cmp, name=(cmp nil nil), type=func, property='(public)
mbr=completed, name=completed, type=atom, property='(public)
mbr=defined, name=defined, type=atom, property='(public)
mbr=dump-status, name=dump-status, type=factor, property='(public)
mbr=equal, name='((equal nil nil) (equal string string)), type=func, property='(public)
mbr=failed, name=failed, type=atom, property='(public)
mbr=fix-stmt, name=fix-stmt, type=factor, property='(public)
mbr=gc-model, name=gc-model, type=factor, property='(public)
mbr=get, name='((get array int int) (get array int) (get list int) (get type#queue int)), type=func, property='(public)
mbr=get-rule, name=get-rule, type=factor, property='(public)
mbr=halting, name=halting, type=atom, property='(public)
mbr=has-stmt, name=has-stmt, type=factor, property='(public)
mbr=init_cst_rule, name=(init_cst_rule type#model), type=func, property='(public)
mbr=is-blank, name=(is-blank string), type=func, property='(public)
mbr=is-empty, name='((is-empty array) (is-empty list) (is-empty string) (is-empty type#map) (is-empty type#queue) (is-empty type#set) (is-empty type#stack)), type=func, property='(public)
mbr=length-of, name='((length-of blob) (length-of string)), type=func, property='(public)
mbr=limit, name=limit, type=atom, property='(public)
mbr=list-constraint, name=list-constraint, type=factor, property='(public)
mbr=list-rule, name=list-rule, type=factor, property='(public)
mbr=list-source-node, name=list-source-node, type=factor, property='(public)
mbr=list-stmt, name=list-stmt, type=factor, property='(public)
mbr=list-with-state, name=list-with-state, type=macro, property='(public)
mbr=list-without-state, name=list-without-state, type=macro, property='(public)
mbr=ls-print, name='((ls-print nil nil) (ls-print nil)), type=func, property='(public)
mbr=map, name=map, type=class, property='(public), class-property='(final)
mbr=model, name=model, type=class, property='(public), class-property='()
mbr=on, name=on, type=atom, property='(public)
mbr=opt-model, name=opt-model, type=factor, property='(public)
mbr=partial, name=partial, type=atom, property='(public)
mbr=print-list, name=print-list, type=macro, property='(public)
mbr=print-model-status, name=print-model-status, type=factor, property='(public)
mbr=print-runnable-counter, name=print-runnable-counter, type=factor, property='(public)
mbr=println, name='((println nil nil nil nil nil nil nil nil nil) (println nil nil nil nil nil nil nil nil) (println nil nil nil nil nil nil nil) (println nil nil nil nil nil nil) (println nil nil nil nil nil) (println nil nil nil nil) (println nil nil nil) (println nil nil) (println nil) (println)), type=func, property='(public)
mbr=priority, name=priority, type=atom, property='(public)
mbr=priority-of, name=priority-of, type=factor, property='(public)
mbr=prove-stmt, name=prove-stmt, type=factor, property='(public)
mbr=query-stmt, name=query-stmt, type=factor, property='(public)
mbr=queue, name=queue, type=class, property='(public), class-property='(final)
mbr=reasoned, name=reasoned, type=atom, property='(public)
mbr=remove-constraint, name=remove-constraint, type=factor, property='(public)
mbr=remove-stmt, name=remove-stmt, type=factor, property='(public)
mbr=remove_cst_constraint_max, name=(remove_cst_constraint_max type#model string nil int), type=func, property='(public)
mbr=remove_cst_constraint_min, name=(remove_cst_constraint_min type#model string nil int), type=func, property='(public)
mbr=remove_cst_constraint_one_of, name=(remove_cst_constraint_one_of type#model string nil list), type=func, property='(public)
mbr=remove_cst_constraint_type, name=(remove_cst_constraint_type type#model string nil nil), type=func, property='(public)
mbr=removed, name=removed, type=atom, property='(public)
mbr=root, name=root, type=frame, property='(public)
mbr=runnable, name=runnable, type=atom, property='(public)
mbr=running, name=running, type=atom, property='(public)
mbr=save-model, name=save-model, type=factor, property='(public)
mbr=scope, name=scope, type=class, property='(public), class-property='(final)
mbr=search, name=search, type=factor, property='(public)
mbr=set, name=set, type=class, property='(public), class-property='(final)
mbr=set-default-model, name=set-default-model, type=factor, property='(public)
mbr=set-model-cache-path, name=set-model-cache-path, type=factor, property='(public)
mbr=set-node-cache-path, name=set-node-cache-path, type=factor, property='(public)
mbr=set-rule-priority, name=set-rule-priority, type=factor, property='(public)
mbr=size-of, name='((size-of array int) (size-of array) (size-of list) (size-of type#map) (size-of type#model) (size-of type#queue) (size-of type#set) (size-of type#stack)), type=func, property='(public)
mbr=size-of-model, name=size-of-model, type=factor, property='(public)
mbr=stack, name=stack, type=class, property='(public), class-property='(final)
mbr=start, name=start, type=factor, property='(public)
mbr=state, name=state, type=atom, property='(public)
mbr=state-of, name=state-of, type=factor, property='(public)
mbr=system, name=system, type=frame, property='(public)
mbr=to-array, name=(to-array list), type=func, property='(public)
mbr=to-list, name='((to-list array) (to-list list) (to-list type#queue) (to-list type#set) (to-list type#stack)), type=func, property='(public)
mbr=trace-rule, name=trace-rule, type=factor, property='(public)
mbr=type, name=type, type=atom, property='(public)
mbr=type#map, name=type#map, type=atom, property='(public)
mbr=type#model, name=type#model, type=atom, property='(public)
mbr=type#queue, name=type#queue, type=atom, property='(public)
mbr=type#scope, name=type#scope, type=atom, property='(public)
mbr=type#set, name=type#set, type=atom, property='(public)
mbr=type#stack, name=type#stack, type=atom, property='(public)
mbr=use, name=use, type=template, property='(public)
mbr=where, name=where, type=atom, property='(public)

;eof

(ls-print main)
;=>nil
;out:
mbr=main, name=main, type=frame, property='(public)
mbr=mts, name=mts, type=instance, property='(public), instance-class=namespace
mbr=rbs, name=rbs, type=instance, property='(public), instance-class=namespace
mbr=root, name=root, type=frame, property='(public)
mbr=system, name=system, type=frame, property='(public)

;eof

(load "result/p2d.rulp")
;=>'(p2d &#ns_tag &#ns_domain get-uri-name get-suffix get-field-name get-new-ns true true true true true true true true true true true true true true true true true true true true true true get-version-number TV1 true true TC1 true CC1 true TG1 TG3 C1 C2 C3 C4 C5 C6 C7 C8 T1 T2 T3 T4 T5 T8 TA5 true true D1 D2 D3 D4 D5 DC1 RR1 RR2 RR3 RR4 RR5 RR6 RR7 AC1 AC2 AC3 AC4 AC5 AC6 AC7 AC8 hasGroupChild)

(ls-print main)
;=>nil
;out:
mbr=#ns_domain, name=#ns_domain, type=var, property='(public), value="nd:"
mbr=#ns_tag, name=#ns_tag, type=var, property='(public), value="nt:"
mbr=get-field-name, name=(get-field-name nil), type=func, property='(public)
mbr=get-new-ns, name=get-new-ns, type=macro, property='(public)
mbr=get-suffix, name=(get-suffix nil nil), type=func, property='(public)
mbr=get-uri-name, name=(get-uri-name nil), type=func, property='(public)
mbr=get-version-number, name=(get-version-number nil), type=func, property='(public)
mbr=hasGroupChild, name=hasGroupChild, type=macro, property='(public)
mbr=main, name=main, type=frame, property='(public)
mbr=mts, name=mts, type=instance, property='(public), instance-class=namespace
mbr=p2d, name=p2d, type=instance, property='(public), instance-class=model
mbr=rbs, name=rbs, type=instance, property='(public), instance-class=namespace
mbr=root, name=root, type=frame, property='(public)
mbr=system, name=system, type=frame, property='(public)

;eof

