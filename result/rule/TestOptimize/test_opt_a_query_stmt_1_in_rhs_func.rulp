(new model m)
;=>

(add-stmt m n1:'(2))
(add-stmt m n1:'(3))
;=>

(defun f1 (?xx)
    (return (size-of (query-stmt m ?v from n2:'(?xx ?v))))
)
;=>

(add-rule m if n1:'(?x) do (-> n3:'((f1 ?x))))
;=>

(add-rule m if n1:'(?x) n1:'(?y) (< (+ ?x ?y) 6) do (-> n1:'((+ ?x ?y))))
;=>

(add-rule m if n1:'(?x) n1:'(?y) (< ?x ?y) do (-> n2:'(?x (+ ?x ?y))))
;=>

(start m)
;=>

(list-stmt m)
;=>

