(load "result/p2d.rulp")
;=>nil

(add-stmt p2d '(nt:tc nm:beClassTagOf nt:t1))
(add-stmt p2d '(nt:tc nm:hasFieldTag nt:te))
(add-stmt p2d '(nt:t1-te nm:typeOf nm:tag))
;=>true true true

(start p2d)
;=>703

(state-of p2d)
;=>completed

(list-with-state (list-rule p2d) failed)
;err:
factor not found: (list-with-state (list-rule p2d) failed)
at (list-with-state (list-rule p2d) failed) ; main-2
;eof

(list-stmt p2d from '(?x nm:beClassTagOf ?y))
;=>'('(nt:tc nm:beClassTagOf nt:t1))

(list-stmt p2d from '(?x nm:beInstanceTagOf ?y))
;=>'('(nt:t1 nm:beInstanceTagOf nt:tc))

(list-stmt p2d from '(?x nm:hasFieldTag ?y))
;=>'('(nt:tc nm:hasFieldTag nt:te) '(nt:t1 nm:hasFieldTag nt:t1-te))

(list-stmt p2d from '(?x nm:beFieldTagOf ?y))
;=>'('(nt:te nm:beFieldTagOf nt:tc) '(nt:t1-te nm:beFieldTagOf nt:t1))

