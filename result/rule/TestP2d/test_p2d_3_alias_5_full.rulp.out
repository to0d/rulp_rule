(load "result/p2d.rulp")
;=>nil

(add-stmt p2d '(ta nm:beParentTagOf tb))
;=>true

(add-stmt p2d '(ta nm:hasRelatedTag tc))
;=>true

(add-stmt p2d '(tax nm:beAliasTo ta))
;=>true

(add-stmt p2d '(tax nm:beParentTagOf td))
;=>true

(add-stmt p2d '(tax nm:hasRelatedTag te))
;=>true

(start p2d)
;=>447

(state-of p2d)
;=>completed

(list-with-state (list-rule p2d) failed)
;err:
factor not found: (list-with-state (list-rule p2d) failed)
at (list-with-state (list-rule p2d) failed) ; main-2
;eof

(list-stmt p2d from '(?x nm:typeOf nm:tag))
;=>'('(ta nm:typeOf nm:tag) '(tc nm:typeOf nm:tag) '(tax nm:typeOf nm:tag) '(te nm:typeOf nm:tag) '(tb nm:typeOf nm:tag) '(td nm:typeOf nm:tag) '(nt:$TGROUP nm:typeOf nm:tag))

(list-stmt p2d from '(ta nm:beParentTagOf ?x))
;=>'('(ta nm:beParentTagOf tb) '(ta nm:beParentTagOf td))

(list-stmt p2d from '(td nm:beChildTagOf ?x))
;=>'('(td nm:beChildTagOf tax) '(td nm:beChildTagOf ta))

(list-stmt p2d from '(ta nm:hasRelatedTag ?x))
;=>'('(ta nm:hasRelatedTag tc) '(ta nm:hasRelatedTag te) '(ta nm:hasRelatedTag nt:$TGROUP))

(list-stmt p2d from '(tc nm:hasRelatedTag ?x))
;=>'('(tc nm:hasRelatedTag ta))

(list-stmt p2d from '(te nm:hasRelatedTag ?x))
;=>'('(te nm:hasRelatedTag tax) '(te nm:hasRelatedTag ta))

