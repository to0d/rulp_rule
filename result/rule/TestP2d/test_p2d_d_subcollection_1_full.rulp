(load "result/p2d.rulp")
;;;

(add-stmt p2d '(ta1 nm:hasFieldTag f1))
(add-stmt p2d '(ta1 nm:beParentTagOf c1))
(add-stmt p2d '(ta2 nm:hasFieldTag f2-xx))
(add-stmt p2d '(ta2 nm:beParentTagOf c2))
(add-stmt p2d '(ta3 nm:hasFieldTag f3))
(add-stmt p2d '(ta3 nm:beParentTagOf c3))
(add-stmt p2d '(c3-f3 nm:typeOf nm:tag))
(add-stmt p2d '(ta4 nm:hasFieldTag f4-xx))
(add-stmt p2d '(ta4 nm:beParentTagOf c4))
(add-stmt p2d '(c4-xx nm:typeOf nm:tag))
;;;

(start p2d)
;;;

(state-of p2d)
;;;

(list-with-state (list-rule p2d) failed)
;;;

(list-stmt p2d from '(?x nm:hasSubCollection ?y))
;;;

(list-stmt p2d from '(?x nm:beFieldTagOf ?y))
;;;