(new model ?m)

(defvar ?arr (make-array))

(add-rule "R1" ?m if n1:'(?x) do 
    (add ?arr (+ "A-" ?x))
    (if (< ?x 3)
        (add-stmt ?m n1:'((+ ?x 1))))
)

(add-rule "R2" ?m if n1:'(?x) do 
    (add ?arr (+ "B-" ?x))
)
;=>?m &?arr R1 R2

(set-priority (get-rule ?m "R1") (+ RETE_PRIORITY_DEFAULT 1))
;=>nil

(add-stmt ?m n1:'(0))
;=>true

(start ?m)
;=>9

(println ?arr)
;=>nil
;out:
{A-0,A-1,A-2,A-3,B-0,B-1,B-2,B-3}

;eof

