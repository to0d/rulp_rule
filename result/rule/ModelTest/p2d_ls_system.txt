mbr=?load-paths, name=?load-paths, type=var, property='(public), value="'()"
mbr=?model-trace, name=?model-trace, type=var, property='(public), value="false"
mbr=add-constraint, name=add-constraint, type=factor, property='(public)
mbr=add-lazy-stmt, name=add-lazy-stmt, type=factor, property='(public)
mbr=add-node, name=add-node, type=factor, property='(public)
mbr=add-rule, name=add-rule, type=factor, property='(public)
mbr=add-stmt, name=add-stmt, type=factor, property='(public)
mbr=assume-stmt, name=assume-stmt, type=factor, property='(public)
mbr=assumed, name=assumed, type=atom, property='(public)
mbr=cmp, name=(cmp nil nil), type=func, property='(public)
mbr=completed, name=completed, type=atom, property='(public)
mbr=create, name=create, type=factor, property='(public)
mbr=defined, name=defined, type=atom, property='(public)
mbr=dump-status, name=dump-status, type=factor, property='(public)
mbr=equal, name='((equal nil nil) (equal string string)), type=func, property='(public)
mbr=failed, name=failed, type=atom, property='(public)
mbr=fix-stmt, name=fix-stmt, type=factor, property='(public)
mbr=gc-model, name=gc-model, type=factor, property='(public)
mbr=get, name='((get array int int) (get array int) (get list int)), type=func, property='(public)
mbr=get-rule, name=get-rule, type=factor, property='(public)
mbr=halting, name=halting, type=atom, property='(public)
mbr=has-stmt, name=has-stmt, type=factor, property='(public)
mbr=length-of, name=(length-of string), type=func, property='(public)
mbr=limit, name=limit, type=atom, property='(public)
mbr=list-constraint, name=list-constraint, type=factor, property='(public)
mbr=list-rule, name=list-rule, type=factor, property='(public)
mbr=list-source-node, name=list-source-node, type=factor, property='(public)
mbr=list-stmt, name=list-stmt, type=factor, property='(public)
mbr=list-with-state, name=list-with-state, type=macro, property='(public)
mbr=list-without-state, name=list-without-state, type=macro, property='(public)
mbr=ls-print, name='((ls-print nil nil) (ls-print nil)), type=func, property='(public)
mbr=map, name=map, type=class, property='(public), class-property='(final)
mbr=model, name=model, type=class, property='(public), class-property='()
mbr=namespace, name=namespace, type=class, property='(public), class-property='()
mbr=on, name=on, type=atom, property='(public)
mbr=opt-model, name=opt-model, type=factor, property='(public)
mbr=partial, name=partial, type=atom, property='(public)
mbr=print-entry-ref, name=print-entry-ref, type=factor, property='(public)
mbr=print-list, name=print-list, type=macro, property='(public)
mbr=print-model-status, name=print-model-status, type=factor, property='(public)
mbr=print-runnable-counter, name=print-runnable-counter, type=factor, property='(public)
mbr=priority, name=priority, type=atom, property='(public)
mbr=priority-of, name=priority-of, type=factor, property='(public)
mbr=query-stmt, name=query-stmt, type=factor, property='(public)
mbr=reasoned, name=reasoned, type=atom, property='(public)
mbr=remove-constraint, name=remove-constraint, type=factor, property='(public)
mbr=remove-stmt, name=remove-stmt, type=factor, property='(public)
mbr=removed, name=removed, type=atom, property='(public)
mbr=root, name=root, type=frame, property='(public)
mbr=runnable, name=runnable, type=atom, property='(public)
mbr=running, name=running, type=atom, property='(public)
mbr=save-model, name=save-model, type=factor, property='(public)
mbr=scope, name=scope, type=class, property='(public), class-property='(final)
mbr=set, name=set, type=class, property='(public), class-property='(final)
mbr=set-default-model, name=set-default-model, type=factor, property='(public)
mbr=set-model-cache-path, name=set-model-cache-path, type=factor, property='(public)
mbr=set-node-cache-path, name=set-node-cache-path, type=factor, property='(public)
mbr=set-rule-priority, name=set-rule-priority, type=factor, property='(public)
mbr=size-of, name='((size-of array int) (size-of array) (size-of list) (size-of type#map) (size-of type#model) (size-of type#set)), type=func, property='(public)
mbr=size-of-model, name=size-of-model, type=factor, property='(public)
mbr=socket, name=socket, type=class, property='(public), class-property='(final)
mbr=start, name=start, type=factor, property='(public)
mbr=state, name=state, type=atom, property='(public)
mbr=state-of, name=state-of, type=factor, property='(public)
mbr=system, name=system, type=frame, property='(public)
mbr=trace-rule, name=trace-rule, type=factor, property='(public)
mbr=type, name=type, type=atom, property='(public)
mbr=type#map, name=type#map, type=atom, property='(public)
mbr=type#model, name=type#model, type=atom, property='(public)
mbr=type#namespace, name=type#namespace, type=atom, property='(public)
mbr=type#scope, name=type#scope, type=atom, property='(public)
mbr=type#set, name=type#set, type=atom, property='(public)
mbr=type#socket, name=type#socket, type=atom, property='(public)
