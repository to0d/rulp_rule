beta.rulp.cache.CacheTest:test_1_model_cache_1:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.cache.CacheTest:test_1_model_cache_1:1-mCount:stmt=2, rule=0, match=0, fetch=2, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=2, entry-maxid=2, waste-node=2, waste-match=0
beta.rulp.cache.CacheTest:test_1_model_cache_1:1-mStatus:sc=[0,1], n0=[0,1,1],
beta.rulp.cache.CacheTest:test_1_model_cache_1b:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.cache.CacheTest:test_1_model_cache_1b:1-mCount:stmt=2, rule=0, match=0, fetch=2, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=2, entry-maxid=2, waste-node=2, waste-match=0
beta.rulp.cache.CacheTest:test_1_model_cache_1b:1-mStatus:sc=[0,1], n0=[0,1,1],
beta.rulp.cache.CacheTest:test_1_model_cache_2:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.cache.CacheTest:test_1_model_cache_2:1-mCount:stmt=2, rule=0, match=0, fetch=5, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=2, entry-maxid=2, waste-node=2, waste-match=0
beta.rulp.cache.CacheTest:test_1_model_cache_2:1-mStatus:sc=[0,1], n0=[0,1,1],
beta.rulp.cache.CacheTest:test_1_model_cache_3:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.cache.CacheTest:test_1_model_cache_3:1-mCount:stmt=2, rule=0, match=1, fetch=4, exec=1, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=2, entry-maxid=2, waste-node=2, waste-match=0
beta.rulp.cache.CacheTest:test_1_model_cache_3:1-mStatus:sc=[0,1], n0=[0,2,1,1],
beta.rulp.cache.CacheTest:test_1_model_cache_4a:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.cache.CacheTest:test_1_model_cache_4a:1-mCount:stmt=3, rule=1, match=1, fetch=7, exec=4, idle=0, state=0/3, max-queue=2, uniq-obj=3, entry-cnt=3, entry-maxid=3, waste-node=1, waste-match=0
beta.rulp.cache.CacheTest:test_1_model_cache_4a:1-mStatus:sc=[0,1], n0=[0,3,1,2], ru=[1,0,1,99,1,0,0,0,1],
beta.rulp.cache.CacheTest:test_1_model_cache_4b:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.cache.CacheTest:test_1_model_cache_4b:1-mCount:stmt=3, rule=1, match=0, fetch=4, exec=5, idle=1, state=5/3, max-queue=4, uniq-obj=3, entry-cnt=3, entry-maxid=3, waste-node=1, waste-match=0
beta.rulp.cache.CacheTest:test_1_model_cache_4b:1-mStatus:sc=[0,1], n0=[0,3,1,3,1], ru=[1,0,1,99,1,0,0,0,1],
beta.rulp.cache.CacheTest:test_1_model_cache_5:1-eCount:size=0, max-id=1, dup=0, null=1
beta.rulp.cache.CacheTest:test_1_model_cache_5:1-mCount:stmt=0, rule=0, match=0, fetch=2, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=0, entry-maxid=1, waste-node=1, waste-match=0
beta.rulp.cache.CacheTest:test_1_model_cache_5:1-mStatus:sc=[0,0,0,0,1],
beta.rulp.cache.CacheTest:test_2_node_cache_1:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.cache.CacheTest:test_2_node_cache_1:1-mCount:stmt=2, rule=0, match=1, fetch=3, exec=1, idle=0, state=1/1, max-queue=0, uniq-obj=1, entry-cnt=2, entry-maxid=2, waste-node=0, waste-match=0
beta.rulp.cache.CacheTest:test_2_node_cache_1:1-mStatus:sc=[], n0=[0,1,2,1],
beta.rulp.cache.CacheTest:test_2_node_cache_2:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.cache.CacheTest:test_2_node_cache_2:1-mCount:stmt=3, rule=0, match=0, fetch=2, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=3, entry-cnt=3, entry-maxid=3, waste-node=3, waste-match=0
beta.rulp.cache.CacheTest:test_2_node_cache_2:1-mStatus:sc=[0,1], n0=[0,2,2],
beta.rulp.cache.CacheTest:test_3_model_cache_list_1:1-eCount:size=1, max-id=1, dup=0, null=0
beta.rulp.cache.CacheTest:test_3_model_cache_list_1:1-mCount:stmt=1, rule=0, match=0, fetch=1, exec=0, idle=0, state=1/1, max-queue=0, uniq-obj=0, entry-cnt=1, entry-maxid=1, waste-node=1, waste-match=0
beta.rulp.cache.CacheTest:test_3_model_cache_list_1:1-mStatus:sc=[], n0=[0,1,1],
beta.rulp.factor.XRFactorAddStmtTest:test_add_stmt_b_variable_length_entry:1-mStatus:sc=[0,3],
beta.rulp.factor.XRFactorAddStmtTest:test_add_stmt_b_variable_length_entry:2-mStatus:sc=[0,3], a0=[2,0,2,0,2,0,0,2,2,0,2/0,2],
beta.rulp.factor.XRFactorAddStmtTest:test_add_stmt_b_variable_length_entry:3-mStatus:sc=[0,3], a0=[4,0,2,0,4,0,0,4,4,0,4/0,4],
beta.rulp.factor.XRFactorAddStmtTest:test_add_stmt_b_variable_length_entry:4-mStatus:sc=[0,3], a0=[6,0,2,0,6,0,0,6,6,0,6/0,6],
beta.rulp.factor.XRFactorAddStmtTest:test_add_stmt_b_variable_length_entry:5-mStatus:sc=[0,3], a0=[8,0,2,0,8,2,0,6,6,0,6/0,6],
beta.rulp.factor.XRFactorAddStmtTest:test_add_stmt_b_variable_length_entry:6-mStatus:sc=[0,4], a0=[9,0,2,0,9,2,0,7,7,0,7/0,7],
beta.rulp.factor.XRFactorAddStmtTest:test_add_stmt_b_variable_length_entry:7-mStatus:sc=[0,5], a0=[9,0,2,0,9,2,0,7,7,0,7/0,7],
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_1:1-eCount:size=1, max-id=2, dup=0, null=1
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_1:1-mCount:stmt=1, rule=0, match=1, fetch=1, exec=1, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=1, entry-maxid=2, waste-node=1, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_1:1-mStatus:sc=[0,0,0,0,1], n0=[0,1,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_2:1-eCount:size=1, max-id=2, dup=0, null=1
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_2:1-mCount:stmt=1, rule=0, match=1, fetch=1, exec=1, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=1, entry-maxid=2, waste-node=1, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_2:1-mStatus:sc=[0,0,0,0,1], n0=[0,1,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_3:1-eCount:size=1, max-id=2, dup=0, null=1
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_3:1-mCount:stmt=1, rule=0, match=2, fetch=2, exec=2, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=1, entry-maxid=2, waste-node=1, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_3:1-mStatus:sc=[0,0,0,0,1], n0=[0,1,1], a0=[1,0,1,0,1,0,0,1,1,0,1/0,0,0,0,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_4:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_4:1-mCount:stmt=2, rule=0, match=0, fetch=0, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=2, entry-maxid=2, waste-node=2, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_4:1-mStatus:sc=[0,1], n0=[0,1,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_5:1-eCount:size=0, max-id=3, dup=0, null=3
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_5:1-mCount:stmt=0, rule=0, match=1, fetch=3, exec=1, idle=0, state=1/1, max-queue=0, uniq-obj=0, entry-cnt=0, entry-maxid=3, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_5:1-mStatus:sc=[], n0=[0,1,0,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_6:1-eCount:size=0, max-id=3, dup=0, null=3
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_6:1-mCount:stmt=0, rule=0, match=1, fetch=3, exec=1, idle=0, state=1/1, max-queue=0, uniq-obj=0, entry-cnt=0, entry-maxid=3, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_6:1-mStatus:sc=[], n0=[0,1,0,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_1:1-eCount:size=1, max-id=4, dup=0, null=3
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_1:1-mCount:stmt=1, rule=1, match=1, fetch=14, exec=6, idle=2, state=0/3, max-queue=2, uniq-obj=3, entry-cnt=1, entry-maxid=4, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_1:1-mStatus:sc=[0,1,0,0,0,0,0,1], a0=[1,0,1,99,1,0,0,2,2,0,6/0,1,0,0,0,0,0,1], b0=[1,0,2,99,1,0,0,4,2,0,2/0,0,0,0,0,0,0,2], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:1-eCount:size=18, max-id=42, dup=3, null=24
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:1-mCount:stmt=6, rule=2, match=1, fetch=231, exec=18, idle=3, state=0/6, max-queue=4, uniq-obj=6, entry-cnt=18, entry-maxid=42, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:1-mStatus:sc=[0,3,3,0,0,0,0,3,21], a0=[1,1,1,99,4,1,0,9,9,0,162/0,3,3,0,0,0,0,3], b0=[2,0,3,99,4,0,0,135,33,0,33/0,0,12,0,0,0,0,21], e1=[1,0,2,99,1,0,0,9,6,0,6/0,3,0,0,0,0,0,3], ru=[2,0,4,99,4,0,0,0,30,21],
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_3:1-eCount:size=4, max-id=24, dup=0, null=20
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_3:1-mCount:stmt=3, rule=2, match=1, fetch=129, exec=14, idle=3, state=0/3, max-queue=3, uniq-obj=6, entry-cnt=4, entry-maxid=24, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_3:1-mStatus:sc=[0,2,1,0,0,0,0,3], a0=[1,1,1,99,2,0,0,6,6,0,87/0,2,1,0,0,0,0,3], b0=[2,0,3,99,4,0,0,72,18,0,18/0,0,1,0,0,0,0,17], e1=[1,0,2,99,2,0,0,6,6,0,9/0,2,1,0,0,0,0,3], ru=[2,0,4,99,3,0,0,0,4],
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_1:1-eCount:size=3, max-id=24, dup=0, null=21
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_1:1-mCount:stmt=2, rule=2, match=0, fetch=129, exec=13, idle=2, state=0/3, max-queue=3, uniq-obj=6, entry-cnt=3, entry-maxid=24, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_1:1-mStatus:sc=[0,2,0,0,0,0,0,4], a0=[1,1,1,99,2,0,0,6,6,0,87/0,2,0,0,0,0,0,4], b0=[2,0,3,99,4,0,0,72,18,0,18/0,0,1,0,0,0,0,17], e1=[1,0,2,99,2,0,0,6,6,0,9/0,2,0,0,0,0,0,4], ru=[2,0,4,99,3,0,0,0,4],
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_2:1-eCount:size=3, max-id=24, dup=0, null=21
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_2:1-mCount:stmt=2, rule=2, match=0, fetch=129, exec=13, idle=2, state=0/3, max-queue=3, uniq-obj=6, entry-cnt=3, entry-maxid=24, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_2:1-mStatus:sc=[0,2,0,0,0,0,0,4], a0=[1,1,1,99,2,0,0,6,6,0,87/0,2,0,0,0,0,0,4], b0=[2,0,3,99,4,0,0,72,18,0,18/0,0,1,0,0,0,0,17], e1=[1,0,2,99,2,0,0,6,6,0,9/0,2,0,0,0,0,0,4], ru=[2,0,4,99,3,0,0,0,4],
beta.rulp.factor.XRFactorRemoveStmtTest:test_incomplete_mode:1-eCount:size=2, max-id=3, dup=0, null=1
beta.rulp.factor.XRFactorRemoveStmtTest:test_incomplete_mode:1-mCount:stmt=2, rule=0, match=0, fetch=6, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=2, entry-maxid=3, waste-node=1, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_incomplete_mode:1-mStatus:sc=[0,2,0,0,0,0,0,1],
beta.rulp.manners.MannerModelTest:test_can_sit_forward_1:1-mStatus:sc=[0,10,4,0,0,0,0,0,4], a0=[6,4,2,99,9,0,0,42,16,0,73/0,12,4], b0=[2,0,3,99,2,0,0,40,14,0,18/0,0,14], b2=[1,0,3,99,2,1,0,21,6,0,6/0,0,6], b3=[1,0,4,99,1,0,0,4,2,0,2/0,0,2], ru=[2,0,5,99,2,0,0,0,8,4],
beta.rulp.manners.MannerModelTest:test_can_sit_forward_1:1-oStatus:shared=0
beta.rulp.rule.TestModel:test_model_1_add_factor_rule_1:1-mStatus:sc=[0,3], a0=[2,0,2,99,2,0,0,6,6,0,6/0,6], ru=[1,0,3,99,1,0,0,0,3],
beta.rulp.rule.TestModel:test_model_1_add_factor_rule_1:1-oStatus:shared=0
beta.rulp.rule.TestModel:test_model_1_add_factor_rule_2:1-mStatus:sc=[0,3], a0=[2,0,2,99,2,0,0,6,6,0,6/0,6], ru=[1,0,3,99,1,0,0,0,3],
beta.rulp.rule.TestModel:test_model_1_add_factor_rule_2:1-oStatus:shared=0
beta.rulp.rule.TestModel:test_model_2_list_stmt_1:1-mStatus:sc=[0,3], a0=[2,0,2,0,2,0,0,6,6,0,6/0,6],
beta.rulp.rule.TestModel:test_model_2_list_stmt_1:1-oStatus:shared=0
beta.rulp.rule.TestModel:test_model_3_remove_stmt_after_completed:1-mStatus:sc=[0,2,0,0,1], vc=[1, 0, 0, 2, 0], a0=[1,0,1,99,1,0,0,3,3,0,3/0,2,0,0,1], a1=[1,0,1,99,2,0,0,2,1,0,1/0,0,0,0,0,1], b0=[1,0,3,99,1,0,0,9,1,0,1/0,0,1], b1=[1,0,5,99,2,1,0,1,1,0,1/0,0,1], b2=[1,0,4,99,1,0,0,3,1,0,1/0,0,1], e1=[1,0,2,99,1,0,0,3,3,0,15/0,2,0,0,1], ru=[1,0,6,99,1,0,0,0,1],
beta.rulp.rule.TestModel:test_model_4_stmt_listener_alpha_1:1-mStatus:sc=[0,3], a0=[2,0,2,0,6,0,0,6,6,0,6/0,6],
beta.rulp.rule.TestModel:test_model_4_stmt_listener_alpha_1:1-oStatus:shared=0
beta.rulp.rule.TestModel:test_model_4_stmt_listener_alpha_2:1-mStatus:sc=[0,3], a0=[2,0,2,0,4,0,0,6,6,0,6/0,6],
beta.rulp.rule.TestModel:test_model_4_stmt_listener_alpha_2:1-oStatus:shared=0
beta.rulp.rule.TestModel:test_model_4_stmt_listener_root_1:1-mStatus:sc=[0,3],
beta.rulp.rule.TestModel:test_model_4_stmt_listener_root_1:1-oStatus:shared=0
beta.rulp.rule.TestModel:test_model_4_stmt_listener_rule_1:1-mStatus:sc=[0,2,1,0,0,0,0,0,1], a0=[3,3,2,99,6,0,0,7,4,0,6/0,3,1], b2=[1,0,3,99,3,1,0,3,2,0,2/0,1,1], ru=[1,0,4,99,2,0,0,0,2,1],
beta.rulp.rule.TestModel:test_model_4_stmt_listener_rule_1:1-oStatus:shared=0
beta.rulp.worker.WorkerTest:test_load_1_model_interface:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.worker.WorkerTest:test_load_1_model_interface:1-mCount:stmt=2, rule=0, match=0, fetch=6, exec=7, idle=3, state=5/2, max-queue=4, uniq-obj=3, entry-cnt=2, entry-maxid=2, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_1_model_interface:1-mStatus:sc=[0,2], a0=[2,0,2,0,4,2,0,4,4,0,4,0,1/0,4], wk=[1,0,0,-99,1],
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:1-eCount:size=1, max-id=1, dup=0, null=0
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:1-mCount:stmt=1, rule=0, match=0, fetch=3, exec=7, idle=4, state=5/2, max-queue=4, uniq-obj=3, entry-cnt=1, entry-maxid=1, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:1-mStatus:sc=[0,1], a0=[2,0,2,0,4,2,0,2,2,0,2,0,1/0,2], wk=[1,0,0,0,1],
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:2-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:2-mCount:stmt=2, rule=0, match=0, fetch=7, exec=14, idle=8, state=5/4, max-queue=4, uniq-obj=3, entry-cnt=2, entry-maxid=2, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:2-mStatus:sc=[0,2], a0=[2,0,2,0,8,4,0,4,4,0,5,0,1/0,4], wk=[1,0,0,0,2],
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:3-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:3-mCount:stmt=3, rule=0, match=0, fetch=12, exec=21, idle=12, state=5/6, max-queue=4, uniq-obj=3, entry-cnt=3, entry-maxid=3, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:3-mStatus:sc=[0,3], a0=[2,0,2,0,12,6,0,6,6,0,9,0,1/0,6], wk=[1,0,0,0,3],
beta.rulp.worker.WorkerTest:test_load_3_always_has_data_has_duplicate:1-mCount:stmt=1, rule=0, match=0, fetch=3, exec=7, idle=4, state=5/2, max-queue=4, uniq-obj=3, entry-cnt=1, entry-maxid=1, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_3_always_has_data_has_duplicate:1-mStatus:sc=[0,1], a0=[2,0,2,0,4,2,0,2,2,0,2,0,1/0,2], wk=[1,0,0,0,1],
beta.rulp.worker.WorkerTest:test_load_3_always_has_data_has_duplicate:2-mCount:stmt=1, rule=0, match=0, fetch=4, exec=11, idle=8, state=5/4, max-queue=4, uniq-obj=3, entry-cnt=1, entry-maxid=1, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_3_always_has_data_has_duplicate:2-mStatus:sc=[0,1,0,0,0,0,0,0,1], a0=[2,0,2,0,6,4,0,2,2,0,3,0,1/0,2], wk=[1,0,0,0,2],
beta.rulp.worker.WorkerTest:test_load_4_data_not_match_filter:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.worker.WorkerTest:test_load_4_data_not_match_filter:1-mCount:stmt=2, rule=0, match=0, fetch=4, exec=7, idle=3, state=5/2, max-queue=4, uniq-obj=3, entry-cnt=2, entry-maxid=2, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_4_data_not_match_filter:1-mStatus:sc=[0,2], a0=[2,0,2,0,4,2,0,3,2,0,2,0,1/0,2], wk=[1,0,0,-99,1],
beta.rulp.worker.WorkerTest:test_load_5_multi_bind_2:1-eCount:size=1, max-id=1, dup=0, null=0
beta.rulp.worker.WorkerTest:test_load_5_multi_bind_2:1-mCount:stmt=1, rule=0, match=0, fetch=3, exec=7, idle=4, state=5/2, max-queue=4, uniq-obj=3, entry-cnt=1, entry-maxid=1, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_5_multi_bind_2:1-mStatus:sc=[0,1], a0=[2,0,2,0,4,2,0,2,2,0,2,0,1/0,2], wk=[1,0,0,0,1],
beta.rulp.worker.WorkerTest:test_load_5_multi_bind_3:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.worker.WorkerTest:test_load_5_multi_bind_3:1-mCount:stmt=2, rule=0, match=0, fetch=6, exec=9, idle=5, state=5/2, max-queue=5, uniq-obj=3, entry-cnt=2, entry-maxid=2, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_5_multi_bind_3:1-mStatus:sc=[0,2], a0=[2,0,2,0,4,2,0,4,4,0,4,0,2/0,4], wk=[2,0,0,0,2],
