beta.rulp.cache.CacheTest:test_1_model_cache_1:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.cache.CacheTest:test_1_model_cache_1:1-mCount:stmt=1, rule=0, match=0, fetch=2, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=2, entry-maxid=2, waste-node=2, waste-match=0
beta.rulp.cache.CacheTest:test_1_model_cache_1:1-mStatus:sc=[0,1], n0=[0,1,1],
beta.rulp.cache.CacheTest:test_1_model_cache_1b:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.cache.CacheTest:test_1_model_cache_1b:1-mCount:stmt=1, rule=0, match=0, fetch=2, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=2, entry-maxid=2, waste-node=2, waste-match=0
beta.rulp.cache.CacheTest:test_1_model_cache_1b:1-mStatus:sc=[0,1], n0=[0,1,1],
beta.rulp.cache.CacheTest:test_1_model_cache_2:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.cache.CacheTest:test_1_model_cache_2:1-mCount:stmt=1, rule=0, match=0, fetch=5, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=2, entry-maxid=2, waste-node=2, waste-match=0
beta.rulp.cache.CacheTest:test_1_model_cache_2:1-mStatus:sc=[0,1], n0=[0,1,1],
beta.rulp.cache.CacheTest:test_1_model_cache_3:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.cache.CacheTest:test_1_model_cache_3:1-mCount:stmt=1, rule=0, match=1, fetch=4, exec=1, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=2, entry-maxid=2, waste-node=2, waste-match=0
beta.rulp.cache.CacheTest:test_1_model_cache_3:1-mStatus:sc=[0,1], n0=[0,2,1,1],
beta.rulp.cache.CacheTest:test_1_model_cache_4a:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.cache.CacheTest:test_1_model_cache_4a:1-mCount:stmt=1, rule=1, match=1, fetch=7, exec=4, idle=0, state=0/3, max-queue=2, uniq-obj=3, entry-cnt=3, entry-maxid=3, waste-node=1, waste-match=0
beta.rulp.cache.CacheTest:test_1_model_cache_4a:1-mStatus:sc=[0,1], n0=[0,3,1,2], ru=[1,0,1,99,1,0,0,0,1],
beta.rulp.cache.CacheTest:test_1_model_cache_4b:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.cache.CacheTest:test_1_model_cache_4b:1-mCount:stmt=1, rule=1, match=0, fetch=4, exec=5, idle=1, state=5/3, max-queue=4, uniq-obj=3, entry-cnt=3, entry-maxid=3, waste-node=1, waste-match=0
beta.rulp.cache.CacheTest:test_1_model_cache_4b:1-mStatus:sc=[0,1], n0=[0,3,1,3,1], ru=[1,0,1,99,1,0,0,0,1],
beta.rulp.cache.CacheTest:test_1_model_cache_5:1-eCount:size=0, max-id=1, dup=0, null=1
beta.rulp.cache.CacheTest:test_1_model_cache_5:1-mCount:stmt=0, rule=0, match=0, fetch=2, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=0, entry-maxid=1, waste-node=1, waste-match=0
beta.rulp.cache.CacheTest:test_1_model_cache_5:1-mStatus:sc=[0,0,0,0,1],
beta.rulp.cache.CacheTest:test_2_node_cache_1:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.cache.CacheTest:test_2_node_cache_1:1-mCount:stmt=0, rule=0, match=1, fetch=3, exec=1, idle=0, state=1/1, max-queue=0, uniq-obj=1, entry-cnt=2, entry-maxid=2, waste-node=0, waste-match=0
beta.rulp.cache.CacheTest:test_2_node_cache_1:1-mStatus:sc=[], n0=[0,1,2,1],
beta.rulp.cache.CacheTest:test_2_node_cache_2:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.cache.CacheTest:test_2_node_cache_2:1-mCount:stmt=1, rule=0, match=0, fetch=2, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=3, entry-cnt=3, entry-maxid=3, waste-node=3, waste-match=0
beta.rulp.cache.CacheTest:test_2_node_cache_2:1-mStatus:sc=[0,1], n0=[0,2,2],
beta.rulp.factor.XRFactorAddRuleTest:test_1:1-mStatus:sc=[0,3,0,0,0,0,0,0,1], a0=[1,1,1,99], ru=[1,0,2,99],
beta.rulp.factor.XRFactorAddRuleTest:test_1:2-mStatus:sc=[0,3,1,0,0,0,0,0,2], a0=[1,1,1,99,3,1,0,4,2,0,4/0,1,1], ru=[1,0,2,99,2,0,0,0,2,1],
beta.rulp.factor.XRFactorAddRuleTest:test_rule_beta3_1:1-mStatus:sc=[0,2,4], b3=[1,0,1,99,1,0,0,0,4,0,4/0,0,4], ru=[1,0,2,99,1,0,0,0,4],
beta.rulp.factor.XRFactorAddRuleTest:test_rule_beta3_2_a:1-mStatus:sc=[0,2,2], b0=[1,0,1,99,1,0,0,4,2,0,2/0,0,2], ru=[1,0,2,99,1,0,0,0,2],
beta.rulp.factor.XRFactorAddRuleTest:test_rule_beta3_2_b:1-mStatus:sc=[0,2,2], b0=[1,0,1,99,1,0,0,4,2,0,2/0,0,2], ru=[1,0,2,99,1,0,0,0,2],
beta.rulp.factor.XRFactorAddRuleTest:test_rule_beta3_2_c:1-mStatus:sc=[0,2], b0=[1,0,1,99,1,0,0,4,2,0,2/0,0,2], ru=[1,0,2,99,1,0,0,2],
beta.rulp.factor.XRFactorAddRuleTest:test_rule_beta3_3:1-mStatus:sc=[0,2,2], b0=[1,0,1,99,1,0,0,4,2,0,2/0,0,2], e1=[1,0,2,99,1,0,0,2,2,0,2/0,0,2], ru=[1,0,3,99,1,0,0,0,2],
beta.rulp.factor.XRFactorAddRuleTest:test_rule_beta3_4:1-mStatus:sc=[0,2,2], b3=[1,0,1,99,1,0,0,4,2,0,2/0,0,2], ru=[1,0,2,99,1,0,0,0,2],
beta.rulp.factor.XRFactorAddRuleTest:test_rule_beta3_5:1-mStatus:sc=[0,4,1], b3=[1,0,1,99,1,0,0,16,2,0,2/0,0,2], e1=[1,0,2,99,1,0,0,2,1,0,1/0,0,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.factor.XRFactorAddRuleTest:test_rule_condtion:1-mStatus:sc=[0,2,2], a0=[1,0,1,99,2,0,0,4,2,0,4/0,2], e0=[2,0,2,99,2,0,0,4,2,0,2/0,2], ru=[2,0,3,99,2,0,0,0,2],
beta.rulp.factor.XRFactorAddRuleTest:test_rule_condtion:1-rStatus-RU000:sc=[], a0=[1,0,1,99,2,0,0,4,2,0,4/0,2], e0=[1,0,2,99,1,0,0,2,1,0,1/0,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.factor.XRFactorAddRuleTest:test_rule_condtion:1-rStatus-RU001:sc=[], a0=[1,0,1,99,2,0,0,4,2,0,4/0,2], e0=[1,0,2,99,1,0,0,2,1,0,1/0,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.factor.XRFactorAddRuleTest:test_rule_match:1-mStatus:sc=[0,2,1,0,0,0,0,0,1], a0=[2,2,2,99,3,0,0,4,2,0,4/0,2], b2=[1,0,3,99,3,1,0,3,2,0,2/0,1,1], ru=[1,0,4,99,2,0,0,0,2,1],
beta.rulp.factor.XRFactorAddRuleTest:test_rule_match_2:1-mStatus:sc=[0,2,1], a0=[2,0,2,99,3,0,0,5,3,0,3/0,3], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.factor.XRFactorAddStmtTest:test_1_atom:1-mStatus:sc=[0,3,0,0,0,0,0,0,1], a0=[2,0,2,0,2,0,0,6,5,0,5/0,5],
beta.rulp.factor.XRFactorAddStmtTest:test_2_int:1-mStatus:sc=[0,1,0,0,0,0,0,0,1], a0=[2,0,2,0,2,0,0,2,2,0,2/0,2],
beta.rulp.factor.XRFactorAddStmtTest:test_3_float:1-mStatus:sc=[0,1,0,0,0,0,0,0,1], a0=[2,0,2,0,2,0,0,2,2,0,2/0,2],
beta.rulp.factor.XRFactorAddStmtTest:test_3_string_1:1-mStatus:sc=[0,1,0,0,0,0,0,0,1],
beta.rulp.factor.XRFactorAddStmtTest:test_3_string_3:1-mStatus:sc=[0,1],
beta.rulp.factor.XRFactorAddStmtTest:test_3_string_4:1-mStatus:sc=[], n0=[0,1,1],
beta.rulp.factor.XRFactorAddStmtTest:test_4_long:1-mStatus:sc=[0,1,0,0,0,0,0,0,1], a0=[2,0,2,0,2,0,0,2,2,0,2/0,2],
beta.rulp.factor.XRFactorAddStmtTest:test_5_double:1-mStatus:sc=[0,1,0,0,0,0,0,0,1], a0=[2,0,2,0,2,0,0,2,2,0,2/0,2],
beta.rulp.factor.XRFactorAddStmtTest:test_6_variable_length_entry:1-mStatus:sc=[0,3],
beta.rulp.factor.XRFactorAddStmtTest:test_6_variable_length_entry:2-mStatus:sc=[0,3], a0=[2,0,2,0,2,0,0,2,2,0,2/0,2],
beta.rulp.factor.XRFactorAddStmtTest:test_6_variable_length_entry:3-mStatus:sc=[0,3], a0=[4,0,2,0,4,0,0,4,4,0,4/0,4],
beta.rulp.factor.XRFactorAddStmtTest:test_6_variable_length_entry:4-mStatus:sc=[0,3], a0=[6,0,2,0,6,0,0,6,6,0,6/0,6],
beta.rulp.factor.XRFactorAddStmtTest:test_6_variable_length_entry:5-mStatus:sc=[0,3], a0=[8,0,2,0,8,2,0,6,6,0,6/0,6],
beta.rulp.factor.XRFactorAddStmtTest:test_6_variable_length_entry:6-mStatus:sc=[0,4], a0=[9,0,2,0,9,2,0,7,7,0,7/0,7],
beta.rulp.factor.XRFactorAddStmtTest:test_6_variable_length_entry:7-mStatus:sc=[0,5], a0=[9,0,2,0,9,2,0,7,7,0,7/0,7],
beta.rulp.factor.XRFactorAddStmtTest:test_7_bool:1-mStatus:sc=[0,2,0,0,0,0,0,0,1],
beta.rulp.factor.XRFactorAddStmtTest:test_8_nil_a:1-mStatus:sc=[0,1,0,0,0,0,0,0,1],
beta.rulp.factor.XRFactorAddStmtTest:test_8_nil_b:1-mStatus:sc=[0,1,0,0,0,0,0,0,1],
beta.rulp.factor.XRFactorAddStmtTest:test_8_nil_c:1-mStatus:sc=[], n0=[0,1,1],
beta.rulp.factor.XRFactorFixStmtTest:test_1_no_child:1-mStatus:sc=[1,1,1,0,0,1], a0=[2,0,1,99,4,0,0,6,2,0,2/1,1,0,0,0,1], b3=[1,0,2,99,1,0,0,0,1,0,1/0,0,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.factor.XRFactorFixStmtTest:test_4_child_is_fix:1-mStatus:sc=[3,0,0,0,0,3], a0=[2,0,1,99,4,0,0,6,2,0,2/2,0,0,0,0,2], b3=[1,0,2,99,1,0,0,0,1,0,1/1,0,0,0,0,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.factor.XRFactorHasStmtTest:test_1:1-eCount:size=1, max-id=1, dup=0, null=0
beta.rulp.factor.XRFactorHasStmtTest:test_1:1-mCount:stmt=1, rule=0, match=3, fetch=3, exec=3, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=1, entry-maxid=1, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorHasStmtTest:test_1:1-mStatus:sc=[0,1,0,0,0,0,0,0,1], a0=[2,0,2,0,2,0,0,2,2,0,2/0,2],
beta.rulp.factor.XRFactorHasStmtTest:test_2:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.factor.XRFactorHasStmtTest:test_2:1-mCount:stmt=2, rule=0, match=3, fetch=3, exec=3, idle=0, state=1/1, max-queue=2, uniq-obj=0, entry-cnt=2, entry-maxid=2, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorHasStmtTest:test_2:1-mStatus:sc=[0,2], a0=[2,0,2,0,2,0,0,2,2,0,2/0,2],
beta.rulp.factor.XRFactorHasStmtTest:test_3:1-eCount:size=4, max-id=4, dup=0, null=0
beta.rulp.factor.XRFactorHasStmtTest:test_3:1-mCount:stmt=4, rule=1, match=0, fetch=10, exec=5, idle=1, state=0/3, max-queue=1, uniq-obj=3, entry-cnt=4, entry-maxid=4, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorHasStmtTest:test_3:1-mStatus:sc=[0,2,2], a0=[1,0,1,99,2,0,0,4,2,0,2/0,2], ru=[1,0,2,99,1,0,0,0,2],
beta.rulp.factor.XRFactorHasStmtTest:test_4:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.factor.XRFactorHasStmtTest:test_4:1-mCount:stmt=0, rule=0, match=3, fetch=3, exec=3, idle=0, state=1/1, max-queue=0, uniq-obj=0, entry-cnt=3, entry-maxid=3, waste-node=1, waste-match=0
beta.rulp.factor.XRFactorHasStmtTest:test_4:1-mStatus:sc=[], n0=[0,2,3,1], a0=[2,0,2,0,2,0,0,2,2,0,2/0,2],
beta.rulp.factor.XRFactorHasStmtTest:test_6_uniq_1:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.factor.XRFactorHasStmtTest:test_6_uniq_1:1-mCount:stmt=0, rule=0, match=0, fetch=0, exec=0, idle=0, state=1/1, max-queue=0, uniq-obj=0, entry-cnt=3, entry-maxid=3, waste-node=1, waste-match=0
beta.rulp.factor.XRFactorHasStmtTest:test_6_uniq_1:1-mStatus:sc=[], n0=[0,1,3],
beta.rulp.factor.XRFactorListStmtTest:test_1:1-eCount:size=0, max-id=0, dup=0, null=0
beta.rulp.factor.XRFactorListStmtTest:test_1:1-mCount:stmt=0, rule=0, match=0, fetch=0, exec=0, idle=0, state=0/0, max-queue=0, uniq-obj=0, entry-cnt=0, entry-maxid=0, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorListStmtTest:test_1:2-eCount:size=8, max-id=8, dup=0, null=0
beta.rulp.factor.XRFactorListStmtTest:test_1:2-mCount:stmt=8, rule=0, match=0, fetch=8, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=8, entry-maxid=8, waste-node=1, waste-match=0
beta.rulp.factor.XRFactorListStmtTest:test_1:3-eCount:size=8, max-id=8, dup=0, null=0
beta.rulp.factor.XRFactorListStmtTest:test_1:3-mCount:stmt=8, rule=0, match=2, fetch=19, exec=2, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=8, entry-maxid=8, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorListStmtTest:test_1:4-eCount:size=8, max-id=8, dup=0, null=0
beta.rulp.factor.XRFactorListStmtTest:test_1:4-mCount:stmt=8, rule=0, match=2, fetch=27, exec=4, idle=2, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=8, entry-maxid=8, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorListStmtTest:test_1:5-eCount:size=8, max-id=8, dup=0, null=0
beta.rulp.factor.XRFactorListStmtTest:test_1:5-mCount:stmt=8, rule=0, match=3, fetch=40, exec=6, idle=3, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=8, entry-maxid=8, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorListStmtTest:test_1:6-eCount:size=8, max-id=8, dup=0, null=0
beta.rulp.factor.XRFactorListStmtTest:test_1:6-mCount:stmt=8, rule=0, match=3, fetch=48, exec=8, idle=5, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=8, entry-maxid=8, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorListStmtTest:test_1:7-eCount:size=8, max-id=8, dup=0, null=0
beta.rulp.factor.XRFactorListStmtTest:test_1:7-mCount:stmt=8, rule=0, match=4, fetch=58, exec=10, idle=6, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=8, entry-maxid=8, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorListStmtTest:test_1:8-eCount:size=8, max-id=8, dup=0, null=0
beta.rulp.factor.XRFactorListStmtTest:test_1:8-mCount:stmt=8, rule=0, match=4, fetch=66, exec=12, idle=8, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=8, entry-maxid=8, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorListStmtTest:test_2:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.factor.XRFactorListStmtTest:test_2:1-mCount:stmt=2, rule=1, match=0, fetch=2, exec=0, idle=0, state=1/1, max-queue=2, uniq-obj=4, entry-cnt=2, entry-maxid=2, waste-node=3, waste-match=0
beta.rulp.factor.XRFactorListStmtTest:test_2:1-mStatus:sc=[0,2], b0=[1,0,1,99], ru=[1,0,2,99],
beta.rulp.factor.XRFactorListStmtTest:test_2:2-eCount:size=4, max-id=4, dup=0, null=0
beta.rulp.factor.XRFactorListStmtTest:test_2:2-mCount:stmt=3, rule=1, match=0, fetch=20, exec=5, idle=1, state=0/3, max-queue=2, uniq-obj=4, entry-cnt=4, entry-maxid=4, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorListStmtTest:test_2:2-mStatus:sc=[0,2,1], b0=[1,0,1,99,2,0,0,9,1,0,1/0,0,1], ru=[1,0,2,99,1,0,0,0,1],
beta.rulp.factor.XRFactorListStmtTest:test_2:3-eCount:size=4, max-id=4, dup=0, null=0
beta.rulp.factor.XRFactorListStmtTest:test_2:3-mCount:stmt=3, rule=1, match=0, fetch=35, exec=5, idle=1, state=0/3, max-queue=2, uniq-obj=4, entry-cnt=4, entry-maxid=4, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorListStmtTest:test_2:3-mStatus:sc=[0,2,1], b0=[1,0,1,99,2,0,0,9,1,0,1/0,0,1], ru=[1,0,2,99,1,0,0,0,1],
beta.rulp.factor.XRFactorListStmtTest:test_3_varargs_1:1-eCount:size=7, max-id=7, dup=0, null=0
beta.rulp.factor.XRFactorListStmtTest:test_3_varargs_1:1-mCount:stmt=4, rule=0, match=7, fetch=28, exec=16, idle=9, state=1/1, max-queue=3, uniq-obj=0, entry-cnt=7, entry-maxid=7, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorListStmtTest:test_3_varargs_1:1-mStatus:sc=[0,4], n0=[0,1,3,3,2], a0=[3,0,1,0,3,0,0,6,5,0,5/0,5],
beta.rulp.factor.XRFactorListStmtTest:test_3_varargs_2:1-eCount:size=5, max-id=5, dup=0, null=0
beta.rulp.factor.XRFactorListStmtTest:test_3_varargs_2:1-mCount:stmt=2, rule=0, match=6, fetch=26, exec=13, idle=7, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=5, entry-maxid=5, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorListStmtTest:test_3_varargs_2:1-mStatus:sc=[0,2], n0=[0,1,3,5,4], a0=[4,0,1,0,5,1,0,10,6,0,8/0,6],
beta.rulp.factor.XRFactorListStmtTest:test_4_limit_1:1-eCount:size=4, max-id=4, dup=0, null=0
beta.rulp.factor.XRFactorListStmtTest:test_4_limit_1:1-mCount:stmt=4, rule=0, match=4, fetch=5, exec=4, idle=0, state=1/1, max-queue=3, uniq-obj=0, entry-cnt=4, entry-maxid=4, waste-node=1, waste-match=0
beta.rulp.factor.XRFactorListStmtTest:test_4_limit_1:1-mStatus:sc=[0,4], a0=[2,0,1,0,2,0,0,3,3,0,2/0,3],
beta.rulp.factor.XRFactorQueryStmtTest:test_1:1-eCount:size=6, max-id=6, dup=0, null=0
beta.rulp.factor.XRFactorQueryStmtTest:test_1:1-mCount:stmt=4, rule=0, match=0, fetch=24, exec=16, idle=11, state=5/9, max-queue=5, uniq-obj=5, entry-cnt=6, entry-maxid=6, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorQueryStmtTest:test_2_loader_1:1-eCount:size=6, max-id=6, dup=0, null=0
beta.rulp.factor.XRFactorQueryStmtTest:test_2_loader_1:1-mCount:stmt=4, rule=0, match=0, fetch=22, exec=15, idle=8, state=5/7, max-queue=6, uniq-obj=6, entry-cnt=6, entry-maxid=6, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorQueryStmtTest:test_2_loader_2:1-eCount:size=6, max-id=6, dup=0, null=0
beta.rulp.factor.XRFactorQueryStmtTest:test_2_loader_2:1-mCount:stmt=4, rule=0, match=0, fetch=17, exec=12, idle=5, state=5/3, max-queue=6, uniq-obj=6, entry-cnt=6, entry-maxid=6, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorQueryStmtTest:test_2_loader_2:1-mStatus:sc=[0,4], a0=[3,0,2,0,6,1,0,10,6,0,8,0,1/0,6], b0=[1,0,3,0,3,2,0,4,2,0,1/0,0,2], wk=[1,0,0,-99,1],
beta.rulp.factor.XRFactorQueryStmtTest:test_3_already_has_data_a_join:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.factor.XRFactorQueryStmtTest:test_3_already_has_data_a_join:1-mCount:stmt=2, rule=0, match=0, fetch=8, exec=8, idle=3, state=5/3, max-queue=5, uniq-obj=5, entry-cnt=3, entry-maxid=3, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorQueryStmtTest:test_3_already_has_data_a_join:1-mStatus:sc=[0,2], a0=[3,0,2,0,4,1,0,5,3,0,3/0,3], b0=[1,0,3,0,3,2,0,1,1,0,1/0,0,1],
beta.rulp.factor.XRFactorQueryStmtTest:test_3_already_has_data_b_join_twice:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.factor.XRFactorQueryStmtTest:test_3_already_has_data_b_join_twice:1-mCount:stmt=2, rule=0, match=0, fetch=8, exec=8, idle=3, state=5/3, max-queue=5, uniq-obj=5, entry-cnt=3, entry-maxid=3, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorQueryStmtTest:test_3_already_has_data_b_join_twice:1-mStatus:sc=[0,2], a0=[3,0,2,0,4,1,0,5,3,0,3/0,3], b0=[1,0,3,0,3,2,0,1,1,0,1/0,0,1],
beta.rulp.factor.XRFactorQueryStmtTest:test_3_already_has_data_b_join_twice:2-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.factor.XRFactorQueryStmtTest:test_3_already_has_data_b_join_twice:2-mCount:stmt=2, rule=0, match=0, fetch=9, exec=8, idle=3, state=5/3, max-queue=5, uniq-obj=5, entry-cnt=3, entry-maxid=3, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorQueryStmtTest:test_3_already_has_data_b_join_twice:2-mStatus:sc=[0,2], a0=[3,0,2,0,4,1,0,5,3,0,3/0,3], b0=[1,0,3,0,3,2,0,1,1,0,2/0,0,1],
beta.rulp.factor.XRFactorQueryStmtTest:test_3_query_1_already_has_data:1-eCount:size=1, max-id=1, dup=0, null=0
beta.rulp.factor.XRFactorQueryStmtTest:test_3_query_1_already_has_data:1-mCount:stmt=1, rule=0, match=0, fetch=3, exec=4, idle=1, state=5/3, max-queue=3, uniq-obj=3, entry-cnt=1, entry-maxid=1, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorQueryStmtTest:test_3_query_1_already_has_data:1-mStatus:sc=[0,1], a0=[2,0,2,0,3,1,0,2,2,0,2/0,2],
beta.rulp.factor.XRFactorQueryStmtTest:test_4_no_data_rule:1-eCount:size=4, max-id=4, dup=0, null=0
beta.rulp.factor.XRFactorQueryStmtTest:test_4_no_data_rule:1-mCount:stmt=3, rule=2, match=0, fetch=25, exec=12, idle=5, state=5/3, max-queue=7, uniq-obj=8, entry-cnt=4, entry-maxid=4, waste-node=2, waste-match=3
beta.rulp.factor.XRFactorQueryStmtTest:test_4_no_data_rule:1-mStatus:sc=[0,2,1], a0=[3,3,2,99,6,0,0,9,4,0,7/0,2,2], b0=[1,0,1,99,2,0,0,9,1,0,1/0,0,1], ru=[2,0,3,99,2,1,0,0,1],
beta.rulp.factor.XRFactorQueryStmtTest:test_4_no_data_rule:1-rStatus-R1:sc=[], a0=[2,2,2,99,4,0,0,6,3,0,6/0,2,1], ru=[1,0,3,99,1,1],
beta.rulp.factor.XRFactorQueryStmtTest:test_4_no_data_rule:1-rStatus-R2:sc=[], b0=[1,0,1,99,2,0,0,9,1,0,1/0,0,1], ru=[1,0,2,99,1,0,0,0,1],
beta.rulp.factor.XRFactorQueryStmtTest:test_7_where_1_expr_1_a:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.factor.XRFactorQueryStmtTest:test_7_where_1_expr_1_a:1-mCount:stmt=0, rule=0, match=0, fetch=5, exec=3, idle=1, state=5/3, max-queue=2, uniq-obj=2, entry-cnt=3, entry-maxid=3, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorQueryStmtTest:test_7_where_1_expr_1_b:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.factor.XRFactorQueryStmtTest:test_7_where_1_expr_1_b:1-mCount:stmt=0, rule=0, match=0, fetch=3, exec=1, idle=0, state=5/3, max-queue=1, uniq-obj=2, entry-cnt=3, entry-maxid=3, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorQueryStmtTest:test_7_where_1_uniq_1:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.factor.XRFactorQueryStmtTest:test_7_where_1_uniq_1:1-mCount:stmt=3, rule=0, match=0, fetch=6, exec=2, idle=1, state=5/5, max-queue=1, uniq-obj=3, entry-cnt=3, entry-maxid=3, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorQueryStmtTest:test_8_do_1:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.factor.XRFactorQueryStmtTest:test_8_do_1:1-mCount:stmt=2, rule=0, match=0, fetch=2, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=2, entry-maxid=2, waste-node=1, waste-match=0
beta.rulp.factor.XRFactorQueryStmtTest:test_8_do_1:1-mStatus:sc=[0,2],
beta.rulp.factor.XRFactorQueryStmtTest:test_8_do_1:2-eCount:size=1, max-id=2, dup=0, null=1
beta.rulp.factor.XRFactorQueryStmtTest:test_8_do_1:2-mCount:stmt=1, rule=0, match=2, fetch=10, exec=7, idle=2, state=5/3, max-queue=3, uniq-obj=3, entry-cnt=1, entry-maxid=2, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorQueryStmtTest:test_8_do_1:2-mStatus:sc=[0,1,0,0,1], a0=[3,0,2,0,3,0,0,5,3,0,3/0,0,0,0,3], e0=[1,0,2,0,2,1,0,1,1,0,1/0,0,0,0,1],
beta.rulp.factor.XRFactorQueryStmtTest:test_8_do_2:1-eCount:size=0, max-id=1, dup=0, null=1
beta.rulp.factor.XRFactorQueryStmtTest:test_8_do_2:1-mCount:stmt=0, rule=1, match=0, fetch=4, exec=3, idle=2, state=5/3, max-queue=3, uniq-obj=2, entry-cnt=0, entry-maxid=1, waste-node=2, waste-match=0
beta.rulp.factor.XRFactorQueryStmtTest:test_8_do_2:1-mStatus:sc=[], n0=[0,1,0,1], e0=[1,0,1,99,1], ru=[1,0,2,99,1,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_1:1-eCount:size=1, max-id=2, dup=0, null=1
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_1:1-mCount:stmt=0, rule=0, match=1, fetch=1, exec=1, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=1, entry-maxid=2, waste-node=1, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_1:1-mStatus:sc=[0,0,0,0,1], n0=[0,1,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_2:1-eCount:size=1, max-id=2, dup=0, null=1
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_2:1-mCount:stmt=0, rule=0, match=1, fetch=1, exec=1, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=1, entry-maxid=2, waste-node=1, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_2:1-mStatus:sc=[0,0,0,0,1], n0=[0,1,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_3:1-eCount:size=1, max-id=2, dup=0, null=1
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_3:1-mCount:stmt=0, rule=0, match=2, fetch=2, exec=2, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=1, entry-maxid=2, waste-node=1, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_3:1-mStatus:sc=[0,0,0,0,1], n0=[0,1,1], a0=[1,0,1,0,1,0,0,1,1,0,1/0,0,0,0,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_4:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_4:1-mCount:stmt=1, rule=0, match=0, fetch=0, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=2, entry-maxid=2, waste-node=2, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_4:1-mStatus:sc=[0,1], n0=[0,1,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_5:1-eCount:size=0, max-id=3, dup=0, null=3
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_5:1-mCount:stmt=0, rule=0, match=1, fetch=3, exec=1, idle=0, state=1/1, max-queue=0, uniq-obj=0, entry-cnt=0, entry-maxid=3, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_5:1-mStatus:sc=[], n0=[0,1,0,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_6:1-eCount:size=0, max-id=3, dup=0, null=3
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_6:1-mCount:stmt=0, rule=0, match=1, fetch=3, exec=1, idle=0, state=1/1, max-queue=0, uniq-obj=0, entry-cnt=0, entry-maxid=3, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_3_varargs_6:1-mStatus:sc=[], n0=[0,1,0,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_1:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_1:1-mCount:stmt=2, rule=1, match=1, fetch=2, exec=1, idle=0, state=1/1, max-queue=2, uniq-obj=3, entry-cnt=2, entry-maxid=2, waste-node=4, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_1:1-mStatus:sc=[0,2], a0=[1,0,1,99], b0=[1,0,2,99], ru=[1,0,3,99],
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_1:2-eCount:size=1, max-id=4, dup=0, null=3
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_1:2-mCount:stmt=1, rule=1, match=1, fetch=14, exec=6, idle=2, state=0/3, max-queue=2, uniq-obj=3, entry-cnt=1, entry-maxid=4, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_1:2-mStatus:sc=[0,1,0,0,1], a0=[1,0,1,99,1,0,0,2,2,0,6/0,1,0,0,1], b0=[1,0,2,99,1,0,0,4,2,0,2/0,0,0,2], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_1:3-eCount:size=1, max-id=4, dup=0, null=3
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_1:3-mCount:stmt=1, rule=1, match=1, fetch=14, exec=6, idle=2, state=0/3, max-queue=2, uniq-obj=3, entry-cnt=1, entry-maxid=4, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_1:3-mStatus:sc=[0,1,0,0,0,0,0,1], a0=[1,0,1,99,1,0,0,2,2,0,6/0,1,0,0,0,0,0,1], b0=[1,0,2,99,1,0,0,4,2,0,2/0,0,0,0,0,0,0,2], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:1-mCount:stmt=3, rule=1, match=1, fetch=3, exec=1, idle=0, state=1/1, max-queue=2, uniq-obj=4, entry-cnt=3, entry-maxid=3, waste-node=4, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:1-mStatus:sc=[0,3], a0=[1,1,1,99], b0=[1,0,2,99], ru=[1,0,3,99],
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:2-eCount:size=36, max-id=36, dup=18, null=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:2-mCount:stmt=9, rule=1, match=1, fetch=147, exec=14, idle=2, state=0/3, max-queue=2, uniq-obj=4, entry-cnt=36, entry-maxid=36, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:2-mStatus:sc=[0,3,6,0,0,0,0,0,21], a0=[1,1,1,99,3,0,0,9,9,0,99/0,3,6], b0=[1,0,2,99,3,0,0,81,27,0,27/0,0,27], ru=[1,0,3,99,3,0,0,0,27,21],
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:3-eCount:size=18, max-id=42, dup=3, null=24
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:3-mCount:stmt=6, rule=2, match=1, fetch=231, exec=19, idle=4, state=0/6, max-queue=4, uniq-obj=6, entry-cnt=18, entry-maxid=42, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:3-mStatus:sc=[0,3,3,0,3,0,0,0,21], a0=[1,1,1,99,4,1,0,9,9,0,162/0,3,3,0,3], b0=[2,0,3,99,4,0,0,135,33,0,33/0,0,12,21], e1=[1,0,2,99,1,0,0,9,6,0,6/0,3,0,0,3], ru=[2,0,4,99,4,0,0,0,30,21],
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:4-eCount:size=18, max-id=42, dup=3, null=24
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:4-mCount:stmt=6, rule=2, match=1, fetch=231, exec=19, idle=4, state=0/6, max-queue=4, uniq-obj=6, entry-cnt=18, entry-maxid=42, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_2:4-mStatus:sc=[0,3,3,0,0,0,0,3,21], a0=[1,1,1,99,4,1,0,9,9,0,162/0,3,3,0,0,0,0,3], b0=[2,0,3,99,4,0,0,135,33,0,33/0,0,12,0,0,0,0,21], e1=[1,0,2,99,1,0,0,9,6,0,6/0,3,0,0,0,0,0,3], ru=[2,0,4,99,4,0,0,0,30,21],
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_3:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_3:1-mCount:stmt=3, rule=2, match=1, fetch=3, exec=1, idle=0, state=1/1, max-queue=2, uniq-obj=6, entry-cnt=3, entry-maxid=3, waste-node=7, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_3:1-mStatus:sc=[0,3], a0=[1,1,1,99], b0=[2,0,3,99], e1=[1,0,2,99], ru=[2,0,4,99],
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_3:2-eCount:size=4, max-id=24, dup=0, null=20
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_3:2-mCount:stmt=5, rule=2, match=1, fetch=129, exec=14, idle=3, state=0/3, max-queue=3, uniq-obj=6, entry-cnt=4, entry-maxid=24, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_3:2-mStatus:sc=[0,2,1,2,1], a0=[1,1,1,99,2,0,0,6,6,0,87/0,2,1,2,1], b0=[2,0,3,99,4,0,0,72,18,0,18/0,0,1,17], e1=[1,0,2,99,2,0,0,6,6,0,9/0,2,1,2,1], ru=[2,0,4,99,3,0,0,0,4],
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_3:3-eCount:size=4, max-id=24, dup=0, null=20
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_3:3-mCount:stmt=3, rule=2, match=1, fetch=129, exec=14, idle=3, state=0/3, max-queue=3, uniq-obj=6, entry-cnt=4, entry-maxid=24, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_conflict_3:3-mStatus:sc=[0,2,1,0,0,0,0,3], a0=[1,1,1,99,2,0,0,6,6,0,87/0,2,1,0,0,0,0,3], b0=[2,0,3,99,4,0,0,72,18,0,18/0,0,1,0,0,0,0,17], e1=[1,0,2,99,2,0,0,6,6,0,9/0,2,1,0,0,0,0,3], ru=[2,0,4,99,3,0,0,0,4],
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_1:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_1:1-mCount:stmt=3, rule=2, match=0, fetch=3, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=6, entry-cnt=3, entry-maxid=3, waste-node=7, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_1:1-mStatus:sc=[0,3], a0=[1,1,1,99], b0=[2,0,3,99], e1=[1,0,2,99], ru=[2,0,4,99],
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_1:2-eCount:size=3, max-id=24, dup=0, null=21
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_1:2-mCount:stmt=4, rule=2, match=0, fetch=129, exec=13, idle=2, state=0/3, max-queue=3, uniq-obj=6, entry-cnt=3, entry-maxid=24, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_1:2-mStatus:sc=[0,2,0,2,2], a0=[1,1,1,99,2,0,0,6,6,0,87/0,2,0,2,2], b0=[2,0,3,99,4,0,0,72,18,0,18/0,0,1,17], e1=[1,0,2,99,2,0,0,6,6,0,9/0,2,0,2,2], ru=[2,0,4,99,3,0,0,0,4],
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_1:3-eCount:size=3, max-id=24, dup=0, null=21
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_1:3-mCount:stmt=2, rule=2, match=0, fetch=129, exec=13, idle=2, state=0/3, max-queue=3, uniq-obj=6, entry-cnt=3, entry-maxid=24, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_1:3-mStatus:sc=[0,2,0,0,0,0,0,4], a0=[1,1,1,99,2,0,0,6,6,0,87/0,2,0,0,0,0,0,4], b0=[2,0,3,99,4,0,0,72,18,0,18/0,0,1,0,0,0,0,17], e1=[1,0,2,99,2,0,0,6,6,0,9/0,2,0,0,0,0,0,4], ru=[2,0,4,99,3,0,0,0,4],
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_2:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_2:1-mCount:stmt=3, rule=2, match=0, fetch=3, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=6, entry-cnt=3, entry-maxid=3, waste-node=7, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_2:1-mStatus:sc=[0,3], a0=[1,1,1,99], b0=[2,0,3,99], e1=[1,0,2,99], ru=[2,0,4,99],
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_2:2-eCount:size=3, max-id=24, dup=0, null=21
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_2:2-mCount:stmt=4, rule=2, match=0, fetch=129, exec=13, idle=2, state=0/3, max-queue=3, uniq-obj=6, entry-cnt=3, entry-maxid=24, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_2:2-mStatus:sc=[0,2,0,2,2], a0=[1,1,1,99,2,0,0,6,6,0,87/0,2,0,2,2], b0=[2,0,3,99,4,0,0,72,18,0,18/0,0,1,17], e1=[1,0,2,99,2,0,0,6,6,0,9/0,2,0,2,2], ru=[2,0,4,99,3,0,0,0,4],
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_2:3-eCount:size=3, max-id=24, dup=0, null=21
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_2:3-mCount:stmt=2, rule=2, match=0, fetch=129, exec=13, idle=2, state=0/3, max-queue=3, uniq-obj=6, entry-cnt=3, entry-maxid=24, waste-node=0, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_drop_stmt_rule_2:3-mStatus:sc=[0,2,0,0,0,0,0,4], a0=[1,1,1,99,2,0,0,6,6,0,87/0,2,0,0,0,0,0,4], b0=[2,0,3,99,4,0,0,72,18,0,18/0,0,1,0,0,0,0,17], e1=[1,0,2,99,2,0,0,6,6,0,9/0,2,0,0,0,0,0,4], ru=[2,0,4,99,3,0,0,0,4],
beta.rulp.factor.XRFactorRemoveStmtTest:test_incomplete_mode:1-eCount:size=2, max-id=3, dup=0, null=1
beta.rulp.factor.XRFactorRemoveStmtTest:test_incomplete_mode:1-mCount:stmt=2, rule=0, match=0, fetch=6, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=2, entry-maxid=3, waste-node=1, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_incomplete_mode:1-mStatus:sc=[0,2,0,0,1],
beta.rulp.factor.XRFactorRemoveStmtTest:test_incomplete_mode:2-eCount:size=2, max-id=3, dup=0, null=1
beta.rulp.factor.XRFactorRemoveStmtTest:test_incomplete_mode:2-mCount:stmt=2, rule=0, match=0, fetch=6, exec=0, idle=0, state=1/1, max-queue=1, uniq-obj=0, entry-cnt=2, entry-maxid=3, waste-node=1, waste-match=0
beta.rulp.factor.XRFactorRemoveStmtTest:test_incomplete_mode:2-mStatus:sc=[0,2,0,0,0,0,0,1],
beta.rulp.factor.XRFactorSetDefaultModelTest:test_1:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.factor.XRFactorSetDefaultModelTest:test_1:1-mCount:stmt=2, rule=1, match=0, fetch=18, exec=10, idle=4, state=5/8, max-queue=3, uniq-obj=6, entry-cnt=2, entry-maxid=2, waste-node=0, waste-match=0
beta.rulp.named.Named1Test:test_1:1-eCount:size=5, max-id=5, dup=0, null=0
beta.rulp.named.Named1Test:test_1:1-mCount:stmt=2, rule=2, match=0, fetch=12, exec=10, idle=2, state=0/3, max-queue=2, uniq-obj=3, entry-cnt=5, entry-maxid=5, waste-node=1, waste-match=0
beta.rulp.named.Named1Test:test_1:1-mStatus:sc=[0,1,1,0,0,0,0,0,1], n0=[0,2,2,3,1], ru=[2,0,1,99,4,0,0,0,4,2],
beta.rulp.named.Named1Test:test_2:1-eCount:size=4, max-id=4, dup=0, null=0
beta.rulp.named.Named1Test:test_2:1-mCount:stmt=2, rule=2, match=0, fetch=10, exec=11, idle=3, state=5/5, max-queue=3, uniq-obj=3, entry-cnt=4, entry-maxid=4, waste-node=0, waste-match=0
beta.rulp.named.Named1Test:test_2:1-mStatus:sc=[0,1,1,0,0,0,0,0,1], n0=[0,1,1,4,2], ru=[2,0,1,99,4,0,0,0,4,2],
beta.rulp.optimize.OptimizeTest1:test_alpha_match_expr_1:1-mStatus:sc=[], a0=[3,0,2,99], b2=[2,0,4,99], e0=[3,0,6,99], ru=[2,0,7,99],
beta.rulp.optimize.OptimizeTest1:test_alpha_match_expr_1:1-oStatus:shared=3
beta.rulp.optimize.OptimizeTest1:test_bad_expr_1_bigger:1-mStatus:sc=[], a0=[3,0,2,99], b2=[2,0,4,99], e0=[3,0,6,99], ru=[2,0,7,99],
beta.rulp.optimize.OptimizeTest1:test_bad_expr_1_bigger:1-oStatus:shared=3
beta.rulp.optimize.OptimizeTest1:test_beta_join_1:1-mStatus:sc=[0,5], a0=[2,0,2,99,2,0,0,7,4,0,11/0,4], b2=[2,0,4,99,4,2,0,24,3,0,3/0,3], e1=[1,0,1,99,1,0,0,5,5,0,15/0,5], ru=[1,0,5,99],
beta.rulp.optimize.OptimizeTest1:test_beta_join_1:1-oStatus:shared=0
beta.rulp.optimize.OptimizeTest1:test_beta_join_same_node_1:1-mStatus:sc=[0,2], n0=[0,1,0,2,1], b2=[1,0,1,99,1,0,0,3,2,0,2/0,2], ru=[1,0,2,99,2,1,0,0,2],
beta.rulp.optimize.OptimizeTest1:test_beta_join_same_node_1:1-oStatus:shared=0
beta.rulp.optimize.OptimizeTest1:test_beta_join_same_node_2:1-mStatus:sc=[0,2,2,0,0,0,0,0,2], b2=[1,0,1,99,2,0,0,10,4,0,4/0,2,2], ru=[1,0,2,99,3,1,0,0,4,2],
beta.rulp.optimize.OptimizeTest1:test_beta_join_same_node_2:1-oStatus:shared=0
beta.rulp.optimize.OptimizeTest1:test_equal_1:1-mStatus:sc=[], a0=[3,0,2,99], b2=[2,0,4,99], e1=[2,0,2,99], ru=[2,0,5,99],
beta.rulp.optimize.OptimizeTest1:test_equal_1:1-oStatus:shared=5
beta.rulp.optimize.OptimizeTest1:test_equal_4:1-mStatus:sc=[0,1,1,0,0,0,0,0,1], ru=[1,0,1,99,2,0,0,0,2,1],
beta.rulp.optimize.OptimizeTest1:test_equal_4:1-oStatus:shared=0
beta.rulp.optimize.OptimizeTest1:test_not_equal_1_orignal:1-mStatus:sc=[], a0=[3,0,2,99], b2=[2,0,4,99], e1=[2,0,2,99], ru=[2,0,5,99],
beta.rulp.optimize.OptimizeTest1:test_not_equal_1_orignal:1-oStatus:shared=5
beta.rulp.optimize.OptimizeTest1:test_not_equal_2:1-mStatus:sc=[], a0=[3,0,2,99], b2=[2,0,4,99], e1=[2,0,2,99], ru=[2,0,5,99],
beta.rulp.optimize.OptimizeTest1:test_not_equal_2:1-oStatus:shared=5
beta.rulp.optimize.OptimizeTest1:test_not_equal_3:1-mStatus:sc=[], a0=[3,0,2,99], b2=[2,0,4,99], e1=[2,0,2,99], ru=[2,0,5,99],
beta.rulp.optimize.OptimizeTest1:test_not_equal_3:1-oStatus:shared=5
beta.rulp.optimize.OptimizeTest1:test_not_equal_4:1-mStatus:sc=[0,3], a0=[3,0,2,99,3,0,0,7,3,0,3/0,3], b2=[2,0,4,99,2,1,0,2], e1=[2,0,2,99,2,0,0,6,5,0,5/0,5], ru=[2,0,5,99],
beta.rulp.optimize.OptimizeTest1:test_not_equal_4:1-oStatus:shared=5
beta.rulp.optimize.OptimizeTest1:test_not_equal_5:1-mStatus:sc=[0,1,2,0,0,0,0,0,4], a0=[1,1,1,99,3,0,0,3,1,0,3/0,0,1], b2=[1,0,2,99,3,1,0,3,3,0,3/0,1,2], e1=[1,0,1,99,3,0,0,3,3,0,6/0,1,2], ru=[2,0,3,99,5,0,0,0,6,4],
beta.rulp.optimize.OptimizeTest1:test_not_equal_5:1-oStatus:shared=1
beta.rulp.optimize.OptimizeTest1:test_not_equal_6:1-mStatus:sc=[0,1,3,0,0,0,0,0,5], b2=[1,0,2,99,3,0,0,10,4,0,4/0,1,3], e1=[1,0,1,99,3,0,0,4,4,0,9/0,1,3], ru=[2,0,3,99,5,0,0,0,8,5],
beta.rulp.optimize.OptimizeTest1:test_not_equal_6:1-oStatus:shared=1
beta.rulp.optimize.OptimizeTest2:test_tag_alias_1_full_with_single_child_optimize:1-eCount:size=207, max-id=207, dup=8, null=0
beta.rulp.optimize.OptimizeTest2:test_tag_alias_1_full_with_single_child_optimize:1-mCount:stmt=324, rule=41, match=1, fetch=9264, exec=283, idle=199, state=0/3, max-queue=45, uniq-obj=74, entry-cnt=207, entry-maxid=207, waste-node=83, waste-match=3320
beta.rulp.optimize.OptimizeTest2:test_tag_alias_1_full_with_single_child_optimize:1-mStatus:sc=[157,2,8,0,0,157,0,0,50], vc=[1, 0, 0, 2, 0], a0=[34,189,2,99,148,3,0,4874,284,0,2175/271,2,11,0,0,271], a1=[1,0,1,99,2,0,0,2,1,0,9/0,0,0,0,0,1], b0=[20,0,4,99,30,14,0,273,32,0,32/22,0,10,0,0,22], b1=[9,0,5,99,9,7,0,7,7,0,7/0,0,7], b2=[10,0,4,99,38,9,0,702,44,0,44/26,8,10,0,0,26], e0=[4,0,3,99,3,0,0,9], e1=[7,0,5,99,17,0,0,533,525,0,698/499,4,22,0,0,499], ru=[41,0,6,99,16,0,0,0,112,50],
beta.rulp.partial.ConflictRuleTest:test_confilct_rule_1_without_priority:1-mStatus:sc=[0,1,0,1,1], a0=[1,1,1,99,2,0,0,2,2,0,6/0,1,0,0,1], b0=[1,0,2,99,1,0,0,4,1,0,2/0,0,0,1], ru=[2,0,3,99,2,0,0,0,2],
beta.rulp.partial.ConflictRuleTest:test_confilct_rule_1_without_priority:1-rStatus-R1:sc=[], a0=[1,1,1,99,2,0,0,2,2,0,6/0,1,0,0,1], b0=[1,0,2,99,1,0,0,4,1,0,2/0,0,0,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.partial.ConflictRuleTest:test_confilct_rule_1_without_priority:1-rStatus-R2:sc=[], a0=[1,1,1,99,2,0,0,2,2,0,6/0,1,0,0,1], b0=[1,0,2,99,1,0,0,4,1,0,2/0,0,0,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.partial.ConflictRuleTest:test_confilct_rule_2_with_priority:1-mStatus:sc=[0,1,0,0,1], a0=[1,1,1,199,1,0,0,2,2,0,6/0,1,0,0,1], b0=[1,0,2,199,1,0,0,4,1,0,2/0,0,0,1], ru=[2,0,3,199,2,0,0,0,1],
beta.rulp.partial.ConflictRuleTest:test_confilct_rule_2_with_priority:1-rStatus-R1:sc=[], a0=[1,1,1,199,1,0,0,2,2,0,6/0,1,0,0,1], b0=[1,0,2,199,1,0,0,4,1,0,2/0,0,0,1], ru=[1,0,3,99,1],
beta.rulp.partial.ConflictRuleTest:test_confilct_rule_2_with_priority:1-rStatus-R2:sc=[], a0=[1,1,1,199,1,0,0,2,2,0,6/0,1,0,0,1], b0=[1,0,2,199,1,0,0,4,1,0,2/0,0,0,1], ru=[1,0,3,199,1,0,0,0,1],
beta.rulp.partial.PartialReasonTest:test_1_full:1-eCount:size=6, max-id=6, dup=0, null=0
beta.rulp.partial.PartialReasonTest:test_1_full:1-mCount:stmt=5, rule=2, match=0, fetch=33, exec=13, idle=2, state=0/3, max-queue=3, uniq-obj=6, entry-cnt=6, entry-maxid=6, waste-node=0, waste-match=0
beta.rulp.partial.PartialReasonTest:test_1_full:1-mStatus:sc=[0,3,2], a0=[3,2,2,99,6,0,0,12,6,0,17/0,4,2], b0=[1,0,2,99,2,0,0,9,1,0,1/0,0,1], ru=[2,0,3,99,2,0,0,0,2],
beta.rulp.partial.PartialReasonTest:test_1_full:1-rStatus-R1:sc=[], a0=[2,1,2,99,4,0,0,7,3,0,3/0,2,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.partial.PartialReasonTest:test_1_full:1-rStatus-R2:sc=[], a0=[1,1,1,99,2,0,0,5,3,0,14/0,2,1], b0=[1,0,2,99,2,0,0,9,1,0,1/0,0,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.partial.PartialReasonTest:test_1_full_b:1-eCount:size=6, max-id=6, dup=0, null=0
beta.rulp.partial.PartialReasonTest:test_1_full_b:1-mCount:stmt=5, rule=2, match=0, fetch=33, exec=13, idle=2, state=0/5, max-queue=3, uniq-obj=6, entry-cnt=6, entry-maxid=6, waste-node=0, waste-match=0
beta.rulp.partial.PartialReasonTest:test_1_full_b:1-mStatus:sc=[0,3,2], a0=[3,2,2,99,6,0,0,12,6,0,17/0,4,2], b0=[1,0,2,99,2,0,0,9,1,0,1/0,0,1], ru=[2,0,3,99,2,0,0,0,2],
beta.rulp.partial.PartialReasonTest:test_1_full_b:1-rStatus-R1:sc=[], a0=[2,1,2,99,4,0,0,7,3,0,3/0,2,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.partial.PartialReasonTest:test_1_full_b:1-rStatus-R2:sc=[], a0=[1,1,1,99,2,0,0,5,3,0,14/0,2,1], b0=[1,0,2,99,2,0,0,9,1,0,1/0,0,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.partial.PartialReasonTest:test_2_partial_r2_not_work:1-eCount:size=4, max-id=4, dup=0, null=0
beta.rulp.partial.PartialReasonTest:test_2_partial_r2_not_work:1-mCount:stmt=4, rule=2, match=2, fetch=17, exec=15, idle=7, state=5/3, max-queue=8, uniq-obj=8, entry-cnt=4, entry-maxid=4, waste-node=3, waste-match=3
beta.rulp.partial.PartialReasonTest:test_2_partial_r2_not_work:1-mStatus:sc=[0,3,1], a0=[4,3,2,99,10,3,0,11,6,0,6/0,4,2], b0=[1,0,2,99], ru=[2,0,3,99,1,0,0,0,1],
beta.rulp.partial.PartialReasonTest:test_2_partial_r2_not_work:1-rStatus-R1:sc=[], a0=[2,1,2,99,6,2,0,6,3,0,5/0,2,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.partial.PartialReasonTest:test_2_partial_r2_not_work:1-rStatus-R2:sc=[], a0=[1,1,1,99,1,0,0,3,2/0,2], b0=[1,0,2,99], ru=[1,0,3,99],
beta.rulp.partial.PartialReasonTest:test_3_alias_full:1-eCount:size=210, max-id=210, dup=4, null=0
beta.rulp.partial.PartialReasonTest:test_3_alias_full:1-mCount:stmt=326, rule=41, match=2, fetch=9305, exec=283, idle=194, state=0/3, max-queue=44, uniq-obj=74, entry-cnt=210, entry-maxid=210, waste-node=83, waste-match=3386
beta.rulp.partial.PartialReasonTest:test_3_alias_full:1-mStatus:sc=[157,2,10,0,0,157,0,0,49], vc=[1, 0, 0, 2, 0], a0=[35,210,2,99,146,0,0,4929,288,0,1999/271,0,17,0,0,271], a1=[1,0,1,99,2,0,0,2,1,0,9/0,0,0,0,0,1], b0=[20,0,4,99,30,12,0,259,32,0,32/22,0,10,0,0,22], b1=[9,0,5,99,9,7,0,8,8,0,8/0,0,8], b2=[10,0,4,99,38,9,0,480,44,0,44/26,8,10,0,0,26], e0=[4,0,3,99,3,0,0,12], e1=[7,0,5,99,21,0,0,676,670,0,873/628,4,38,0,0,628], ru=[41,0,6,99,16,0,0,0,114,49],
beta.rulp.partial.PartialReasonTest:test_4_alias_query_all:1-eCount:size=200, max-id=201, dup=4, null=1
beta.rulp.partial.PartialReasonTest:test_4_alias_query_all:1-mCount:stmt=326, rule=41, match=0, fetch=6157, exec=220, idle=152, state=5/3, max-queue=77, uniq-obj=75, entry-cnt=200, entry-maxid=201, waste-node=95, waste-match=1866
beta.rulp.partial.PartialReasonTest:test_4_alias_query_all:1-mStatus:sc=[157,2,10,0,0,157,0,0,49], vc=[1, 0, 0, 1, 0], a0=[35,210,2,99,108,1,0,3332,235,0,1149/218,0,17,0,0,218], a1=[1,0,1,99,1,0,0,1/0,0,0,0,0,0,0,1], b0=[20,0,4,99,30,16,0,249,30,0,30/22,0,8,0,0,22], b1=[9,0,5,99,1,1], b2=[10,0,4,99,16,4,0,188,34,0,34/26,4,4,0,0,26], e0=[4,0,3,99,2,1,0,4], e1=[7,0,5,99,12,0,0,396,392,0,497/370,4,18,0,0,370], ru=[41,0,6,99,34,20,0,0,106,49],
beta.rulp.partial.PartialReasonTest:test_5_alias_query_1:1-eCount:size=192, max-id=193, dup=4, null=1
beta.rulp.partial.PartialReasonTest:test_5_alias_query_1:1-mCount:stmt=322, rule=41, match=0, fetch=4544, exec=151, idle=102, state=5/3, max-queue=77, uniq-obj=75, entry-cnt=192, entry-maxid=193, waste-node=105, waste-match=1673
beta.rulp.partial.PartialReasonTest:test_5_alias_query_1:1-mStatus:sc=[157,2,6,0,0,157,0,0,19], vc=[1, 0, 0, 1, 0], a0=[35,210,2,99,70,1,0,2777,178,0,626/174,0,4,0,0,174], a1=[1,0,1,99,1,0,0,1/0,0,0,0,0,0,0,1], b0=[20,0,4,99,20,14,0,65,26,0,4/22,0,4,0,0,22], b1=[9,0,5,99,1,1], b2=[10,0,4,99,10,4,0,68,30,0,30/26,2,2,0,0,26], e0=[4,0,3,99,1,1], e1=[7,0,5,99,8,0,0,336,332,0,375/326,4,2,0,0,326], ru=[41,0,6,99,29,20,0,0,72,19],
beta.rulp.partial.PartialReasonTest:test_6_root_based_rule:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.partial.PartialReasonTest:test_6_root_based_rule:1-mCount:stmt=2, rule=1, match=0, fetch=4, exec=5, idle=1, state=5/3, max-queue=2, uniq-obj=3, entry-cnt=2, entry-maxid=2, waste-node=0, waste-match=0
beta.rulp.partial.PartialReasonTest:test_6_root_based_rule:1-mStatus:sc=[0,1,1,0,0,0,0,0,1], ru=[1,0,1,99,2,0,0,0,2,1],
beta.rulp.rule.TestModel:test_1_add_factor_rule_1:1-mStatus:sc=[0,3], a0=[2,0,2,99,2,0,0,6,6,0,6/0,6], ru=[1,0,3,99,1,0,0,0,3],
beta.rulp.rule.TestModel:test_1_add_factor_rule_1:1-oStatus:shared=0
beta.rulp.rule.TestModel:test_1_add_factor_rule_2:1-mStatus:sc=[0,3], a0=[2,0,2,99,2,0,0,6,6,0,6/0,6], ru=[1,0,3,99,1,0,0,0,3],
beta.rulp.rule.TestModel:test_1_add_factor_rule_2:1-oStatus:shared=0
beta.rulp.rule.TestModel:test_2_list_stmt_1:1-mStatus:sc=[0,3], a0=[2,0,2,0,2,0,0,6,6,0,6/0,6],
beta.rulp.rule.TestModel:test_2_list_stmt_1:1-oStatus:shared=0
beta.rulp.rule.TestModel:test_3_remove_stmt_after_completed:1-mStatus:sc=[0,2,0,0,1], vc=[1, 0, 0, 2, 0], a0=[1,0,1,99,1,0,0,3,3,0,3/0,2,0,0,1], a1=[1,0,1,99,2,0,0,2,1,0,1/0,0,0,0,0,1], b0=[1,0,3,99,1,0,0,9,1,0,1/0,0,1], b1=[1,0,5,99,1,0,0,1,1,0,1/0,0,1], b2=[1,0,4,99,1,0,0,3,1,0,1/0,0,1], e1=[1,0,2,99,1,0,0,3,3,0,15/0,2,0,0,1], ru=[1,0,6,99,1,0,0,0,1],
beta.rulp.rule.TestModel:test_4_stmt_listener_alpha_1:1-mStatus:sc=[0,3], a0=[2,0,2,0,6,0,0,6,6,0,6/0,6],
beta.rulp.rule.TestModel:test_4_stmt_listener_alpha_1:1-oStatus:shared=0
beta.rulp.rule.TestModel:test_4_stmt_listener_alpha_2:1-mStatus:sc=[0,3], a0=[2,0,2,0,4,0,0,6,6,0,6/0,6],
beta.rulp.rule.TestModel:test_4_stmt_listener_alpha_2:1-oStatus:shared=0
beta.rulp.rule.TestModel:test_4_stmt_listener_root_1:1-mStatus:sc=[0,3],
beta.rulp.rule.TestModel:test_4_stmt_listener_root_1:1-oStatus:shared=0
beta.rulp.rule.TestModel:test_4_stmt_listener_rule_1:1-mStatus:sc=[0,2,1,0,0,0,0,0,1], a0=[3,3,2,99,7,1,0,7,4,0,6/0,3,1], b2=[1,0,3,99,3,1,0,3,2,0,2/0,1,1], ru=[1,0,4,99,2,0,0,0,2,1],
beta.rulp.rule.TestModel:test_4_stmt_listener_rule_1:1-oStatus:shared=0
beta.rulp.rule.TestP2d:test_domain_beParentDomainOf_Global:1-eCount:size=229, max-id=229, dup=0, null=0
beta.rulp.rule.TestP2d:test_domain_beParentDomainOf_Global:1-mCount:stmt=331, rule=41, match=3, fetch=9613, exec=453, idle=330, state=0/5, max-queue=46, uniq-obj=74, entry-cnt=229, entry-maxid=229, waste-node=90, waste-match=4216
beta.rulp.rule.TestP2d:test_domain_beParentDomainOf_Global:1-mStatus:sc=[157,4,13,0,0,157,0,0,42], vc=[1, 0, 0, 4, 0], a0=[36,197,2,99,243,2,0,4880,285,0,2780/271,8,6,0,0,271], a1=[1,0,1,99,4,0,0,4,2,0,18/0,0,0,0,0,1], b0=[20,0,4,99,48,35,0,241,37,0,37/22,0,15,0,0,22], b1=[9,0,5,99,18,14,0,17,17,0,17/0,0,17], b2=[10,0,4,99,59,5,0,1285,40,0,40/26,1,13,0,0,26], e0=[4,0,3,99], e1=[7,0,5,99,37,0,0,699,699,0,565/628,19,52,0,0,628], ru=[41,0,6,99,20,0,0,0,121,42,0,3],
beta.rulp.rule.TestP2d:test_domain_beParentDomainOf_Global:2-eCount:size=229, max-id=229, dup=0, null=0
beta.rulp.rule.TestP2d:test_domain_beParentDomainOf_Global:2-mCount:stmt=331, rule=41, match=3, fetch=9616, exec=455, idle=332, state=0/5, max-queue=46, uniq-obj=74, entry-cnt=229, entry-maxid=229, waste-node=90, waste-match=4216
beta.rulp.rule.TestP2d:test_domain_beParentDomainOf_Global:2-mStatus:sc=[157,4,13,0,0,157,0,0,42], vc=[1, 0, 0, 4, 0], a0=[36,197,2,99,244,3,0,4880,285,0,2783/271,8,6,0,0,271], a1=[1,0,1,99,4,0,0,4,2,0,18/0,0,0,0,0,1], b0=[20,0,4,99,48,35,0,241,37,0,37/22,0,15,0,0,22], b1=[9,0,5,99,18,14,0,17,17,0,17/0,0,17], b2=[10,0,4,99,59,5,0,1285,40,0,40/26,1,13,0,0,26], e0=[4,0,3,99], e1=[7,0,5,99,37,0,0,699,699,0,565/628,19,52,0,0,628], ru=[41,0,6,99,20,0,0,0,121,42,0,3],
beta.rulp.rule.TestP2d:test_query_1:1-eCount:size=195, max-id=196, dup=3, null=1
beta.rulp.rule.TestP2d:test_query_1:1-mCount:stmt=325, rule=41, match=0, fetch=5973, exec=254, idle=167, state=5/3, max-queue=85, uniq-obj=75, entry-cnt=195, entry-maxid=196, waste-node=100, waste-match=2191
beta.rulp.rule.TestP2d:test_query_1:1-mStatus:sc=[157,5,6,0,0,157,0,0,44], vc=[1, 0, 0, 1, 0], a0=[36,234,2,99,114,1,0,3651,240,0,975/218,10,12,0,0,218], a1=[1,0,1,99,1,0,0,1/0,0,0,0,0,0,0,1], b0=[22,0,5,99,38,28,0,107,26,0,26/22,0,4,0,0,22], b1=[9,0,5,99,1,1], b2=[12,0,6,99,23,8,0,171,34,0,35/26,4,4,0,0,26], e0=[7,0,4,99,12,4,0,9,6,0,6/0,3,3], e1=[7,0,5,99,12,0,0,402,402,0,168/370,20,12,0,0,370], ru=[41,0,6,99,35,19,0,0,98,44],
beta.rulp.rule.TestP2d:test_tag_alias_1_full:1-eCount:size=207, max-id=207, dup=8, null=0
beta.rulp.rule.TestP2d:test_tag_alias_1_full:1-mCount:stmt=324, rule=41, match=1, fetch=9618, exec=287, idle=199, state=0/3, max-queue=44, uniq-obj=74, entry-cnt=207, entry-maxid=207, waste-node=83, waste-match=3320
beta.rulp.rule.TestP2d:test_tag_alias_1_full:1-mStatus:sc=[157,2,8,0,0,157,0,0,50], vc=[1, 0, 0, 2, 0], a0=[34,189,2,99,148,3,0,4874,284,0,2227/271,2,11,0,0,271], a1=[1,0,1,99,2,0,0,2,1,0,9/0,0,0,0,0,1], b0=[20,0,4,99,30,12,0,325,32,0,32/22,0,10,0,0,22], b1=[9,0,5,99,9,7,0,7,7,0,7/0,0,7], b2=[10,0,4,99,38,9,0,702,44,0,44/26,8,10,0,0,26], e0=[4,0,3,99,3,0,0,9], e1=[7,0,5,99,21,0,0,668,662,0,863/628,4,30,0,0,628], ru=[41,0,6,99,16,0,0,0,112,50],
beta.rulp.rule.TestP2d:test_tag_alias_1_partial:1-eCount:size=193, max-id=194, dup=7, null=1
beta.rulp.rule.TestP2d:test_tag_alias_1_partial:1-mCount:stmt=321, rule=41, match=0, fetch=4815, exec=200, idle=139, state=5/7, max-queue=50, uniq-obj=75, entry-cnt=193, entry-maxid=194, waste-node=100, waste-match=968
beta.rulp.rule.TestP2d:test_tag_alias_1_partial:1-mStatus:sc=[157,2,5,0,0,157,0,0,48], vc=[1, 0, 0, 3, 0], a0=[34,189,2,99,81,14,0,2307,228,0,1132/218,2,8,0,0,218], a1=[1,0,1,99/0,0,0,0,0,0,0,1], b0=[20,0,4,99,33,19,0,307,28,0,28/22,0,6,0,0,22], b1=[9,0,5,99], b2=[10,0,4,99,14,7,0,229,34,0,34/26,4,4,0,0,26], e0=[4,0,3,99], e1=[7,0,5,99,16,4,0,386,382,0,482/370,4,8,0,0,370], ru=[41,0,6,99,38,26,0,0,100,48],
beta.rulp.rule.TestP2d:test_tag_alias_4_full:1-eCount:size=284, max-id=284, dup=77, null=0
beta.rulp.rule.TestP2d:test_tag_alias_4_full:1-mCount:stmt=358, rule=41, match=9, fetch=12146, exec=474, idle=289, state=0/3, max-queue=66, uniq-obj=74, entry-cnt=284, entry-maxid=284, waste-node=75, waste-match=3083
beta.rulp.rule.TestP2d:test_tag_alias_4_full:1-mStatus:sc=[157,5,39,0,0,157,0,0,144], vc=[1, 0, 0, 2, 0], a0=[42,291,2,99,216,3,0,6373,348,0,2723/271,9,68,0,0,271], a1=[1,0,1,99,2,0,0,2,1,0,9/0,0,0,0,0,1], b0=[20,0,4,99,64,23,0,662,55,0,55/22,0,33,0,0,22], b1=[9,0,5,99,9,7,0,27,27,0,27/0,0,27], b2=[10,0,4,99,56,19,0,658,147,0,122/26,21,100,0,0,26], e0=[4,0,3,99,9,0,0,21], e1=[7,0,5,99,31,0,0,807,804,0,1091/628,21,155,0,0,628], ru=[41,0,6,99,40,0,0,0,231,144],
beta.rulp.rule.TestP2d:test_tag_auto_beginner:1-eCount:size=258, max-id=258, dup=49, null=0
beta.rulp.rule.TestP2d:test_tag_auto_beginner:1-mCount:stmt=346, rule=41, match=2, fetch=10678, exec=604, idle=412, state=0/5, max-queue=51, uniq-obj=74, entry-cnt=258, entry-maxid=258, waste-node=69, waste-match=2530
beta.rulp.rule.TestP2d:test_tag_auto_beginner:1-mStatus:sc=[157,3,29,0,2,157,0,0,110], vc=[1, 0, 0, 4, 0], a0=[35,195,2,99,294,1,0,5483,311,0,2897/271,6,32,0,2,271], a1=[1,0,1,99,4,0,0,4,2,0,18/0,0,0,0,0,1], b0=[20,0,4,99,69,49,0,211,40,0,40/22,0,18,0,0,22], b1=[9,0,5,99,18,11,0,28,28,0,32/0,0,28], b2=[10,0,4,99,82,12,0,1017,114,0,118/26,0,82,0,6,26], e0=[4,0,3,99,9,0,0,18,4,0,4/0,4], e1=[7,0,5,99,45,0,0,766,764,0,640/628,12,118,0,6,628], ru=[41,0,6,99,42,0,0,0,198,110],
beta.rulp.rule.TestP2d:test_tag_auto_code_tag:1-eCount:size=245, max-id=245, dup=36, null=0
beta.rulp.rule.TestP2d:test_tag_auto_code_tag:1-mCount:stmt=342, rule=41, match=2, fetch=10728, exec=713, idle=477, state=0/5, max-queue=50, uniq-obj=74, entry-cnt=245, entry-maxid=245, waste-node=63, waste-match=1906
beta.rulp.rule.TestP2d:test_tag_auto_code_tag:1-mStatus:sc=[157,3,25,0,2,157,0,0,93], vc=[1, 0, 0, 4, 0], a0=[35,211,2,99,344,0,0,5387,310,0,3157/271,4,33,0,2,271], a1=[1,0,1,99,4,0,0,4,2,0,18/0,0,0,0,0,1], b0=[20,0,4,99,82,57,0,394,37,0,37/22,0,15,0,0,22], b1=[9,0,5,99,18,10,0,22,22,0,24/0,0,22], b2=[10,0,4,99,99,15,0,1380,99,0,107/26,8,59,0,6,26], e0=[4,0,3,99,13,0,0,19,2,0,3/0,1,1], e1=[7,0,5,99,53,0,0,749,747,0,605/628,12,101,0,6,628], ru=[41,0,6,99,51,0,0,0,176,93],
beta.rulp.rule.TestP2d:test_tag_auto_code_tag_2:1-eCount:size=270, max-id=271, dup=36, null=1
beta.rulp.rule.TestP2d:test_tag_auto_code_tag_2:1-mCount:stmt=351, rule=41, match=0, fetch=12123, exec=808, idle=550, state=5/7, max-queue=74, uniq-obj=77, entry-cnt=270, entry-maxid=271, waste-node=54, waste-match=1393
beta.rulp.rule.TestP2d:test_tag_auto_code_tag_2:1-mStatus:sc=[157,8,29,0,2,157,0,0,99], vc=[1, 0, 0, 5, 0], a0=[39,244,2,99,372,25,0,5818,328,0,3321/271,23,32,0,2,271], a1=[1,0,1,99,5,0,0,5,2,0,19/0,0,0,1], b0=[21,0,6,99,98,69,0,366,48,0,48/22,0,26,0,0,22], b1=[9,0,5,99,19,9,0,27,27,0,29/0,0,27], b2=[15,0,5,99,114,25,0,1433,138,0,154/26,14,92,0,6,26], e0=[5,0,3,99,15,1,0,213,191,0,197/157,8,26,0,0,157], e1=[7,0,5,99,56,2,0,786,784,0,647/628,33,117,0,6,628], ru=[41,0,6,99,76,22,0,0,190,99],
beta.rulp.rule.TestP2d:test_tag_auto_code_tag_3:1-eCount:size=270, max-id=271, dup=36, null=1
beta.rulp.rule.TestP2d:test_tag_auto_code_tag_3:1-mCount:stmt=351, rule=41, match=0, fetch=12253, exec=809, idle=550, state=5/7, max-queue=75, uniq-obj=78, entry-cnt=270, entry-maxid=271, waste-node=54, waste-match=1393
beta.rulp.rule.TestP2d:test_tag_auto_code_tag_3:1-mStatus:sc=[157,8,29,0,2,157,0,0,99], vc=[1, 0, 0, 5, 0], a0=[39,244,2,99,372,25,0,5818,328,0,3307/271,23,32,0,2,271], a1=[1,0,1,99,5,0,0,5,2,0,19/0,0,0,1], b0=[21,0,5,99,97,68,0,362,48,0,48/22,0,26,0,0,22], b1=[9,0,5,99,19,9,0,27,27,0,29/0,0,27], b2=[15,0,6,99,115,26,0,1447,118,0,126/26,8,78,0,6,26], e0=[6,0,3,99,16,1,0,407,383,0,391/314,16,53,0,0,314], e1=[7,0,5,99,56,2,0,786,784,0,647/628,33,117,0,6,628], ru=[41,0,6,99,76,22,0,0,190,99],
beta.rulp.rule.TestP2d:test_tag_auto_code_tag_4:1-eCount:size=287, max-id=288, dup=36, null=1
beta.rulp.rule.TestP2d:test_tag_auto_code_tag_4:1-mCount:stmt=351, rule=41, match=0, fetch=12007, exec=788, idle=533, state=5/7, max-queue=58, uniq-obj=77, entry-cnt=287, entry-maxid=288, waste-node=54, waste-match=1393
beta.rulp.rule.TestP2d:test_tag_auto_code_tag_4:1-mStatus:sc=[157,8,29,0,2,157,0,0,99], vc=[1, 0, 0, 5, 0], a0=[34,189,2,99,362,20,0,5415,311,0,3330/271,10,28,0,2,271], a1=[1,0,1,99,4,0,0,4,2,0,18/0,0,0,1], b0=[24,0,8,99,102,70,0,499,65,0,65/22,0,43,0,0,22], b1=[9,0,5,99,18,8,0,27,27,0,29/0,0,27], b2=[12,0,4,99,106,20,0,1371,133,0,201/26,12,89,0,6,26], e0=[7,0,5,99,17,1,0,415,393,0,424/314,17,62,0,0,314], e1=[7,0,5,99,56,2,0,786,784,0,647/628,33,117,0,6,628], ru=[41,0,6,99,70,16,0,0,190,99],
beta.rulp.rule.TestP2d:test_tag_auto_domain_common_tag:1-eCount:size=204, max-id=204, dup=3, null=0
beta.rulp.rule.TestP2d:test_tag_auto_domain_common_tag:1-mCount:stmt=326, rule=41, match=2, fetch=9212, exec=438, idle=305, state=0/5, max-queue=48, uniq-obj=74, entry-cnt=204, entry-maxid=204, waste-node=77, waste-match=3095
beta.rulp.rule.TestP2d:test_tag_auto_domain_common_tag:1-mStatus:sc=[157,3,9,0,0,157,0,0,44], vc=[1, 0, 0, 4, 0], a0=[36,214,2,99,220,2,0,4927,288,0,2420/271,6,11,0,0,271], a1=[1,0,1,99,4,0,0,4,2,0,18/0,0,0,0,0,1], b0=[20,0,4,99,47,35,0,252,26,0,26/22,0,4,0,0,22], b1=[9,0,5,99,18,11,0,8,8,0,10/0,0,8], b2=[10,0,4,99,56,11,0,988,39,0,37/26,1,12,0,0,26], e0=[4,0,3,99,6,0,0,6,1,0,1/0,1], e1=[7,0,5,99,33,0,0,677,677,0,539/628,13,36,0,0,628], ru=[41,0,6,99,26,0,0,0,110,44],
beta.rulp.rule.TestP2d:test_tag_auto_group_tag:1-eCount:size=199, max-id=199, dup=7, null=0
beta.rulp.rule.TestP2d:test_tag_auto_group_tag:1-mCount:stmt=325, rule=41, match=2, fetch=9159, exec=528, idle=378, state=0/5, max-queue=48, uniq-obj=74, entry-cnt=199, entry-maxid=199, waste-node=82, waste-match=3419
beta.rulp.rule.TestP2d:test_tag_auto_group_tag:1-mStatus:sc=[157,2,9,0,0,157,0,0,48], vc=[1, 0, 0, 4, 0], a0=[35,211,2,99,269,0,0,4903,289,0,2411/271,4,14,0,0,271], a1=[1,0,1,99,4,0,0,4,2,0,18/0,0,0,0,0,1], b0=[20,0,4,99,55,43,0,249,24,0,24/22,0,2,0,0,22], b1=[9,0,5,99,18,13,0,6,6,0,8/0,0,6], b2=[10,0,4,99,72,15,0,979,43,0,39/26,1,16,0,0,26], e0=[4,0,3,99,9,0,0,9,1,0,1/0,1], e1=[7,0,5,99,40,0,0,672,672,0,534/628,8,36,0,0,628], ru=[41,0,6,99,30,0,0,0,111,48],
beta.rulp.rule.TestP2d:test_tag_auto_item_tag:1-eCount:size=211, max-id=211, dup=19, null=0
beta.rulp.rule.TestP2d:test_tag_auto_item_tag:1-mCount:stmt=329, rule=41, match=2, fetch=9665, exec=592, idle=412, state=0/5, max-queue=48, uniq-obj=74, entry-cnt=211, entry-maxid=211, waste-node=72, waste-match=2454
beta.rulp.rule.TestP2d:test_tag_auto_item_tag:1-mStatus:sc=[157,2,13,0,2,157,0,0,69], vc=[1, 0, 0, 4, 0], a0=[35,211,2,99,293,0,0,5053,296,0,2655/271,4,19,0,2,271], a1=[1,0,1,99,4,0,0,4,2,0,18/0,0,0,0,0,1], b0=[20,0,4,99,67,48,0,310,28,0,28/22,0,6,0,0,22], b1=[9,0,5,99,18,13,0,10,10,0,12/0,0,10], b2=[10,0,4,99,80,12,0,1070,69,0,70/26,1,36,0,6,26], e0=[4,0,3,99,9,0,0,9,1,0,1/0,1], e1=[7,0,5,99,45,0,0,697,695,0,555/628,8,53,0,6,628], ru=[41,0,6,99,38,0,0,0,139,69],
beta.rulp.rule.TestP2d:test_tag_autorelated_1_full:1-eCount:size=201, max-id=202, dup=10, null=1
beta.rulp.rule.TestP2d:test_tag_autorelated_1_full:1-mCount:stmt=328, rule=41, match=0, fetch=8712, exec=326, idle=237, state=0/5, max-queue=47, uniq-obj=74, entry-cnt=201, entry-maxid=202, waste-node=91, waste-match=4012
beta.rulp.rule.TestP2d:test_tag_autorelated_1_full:1-mStatus:sc=[157,4,10,0,0,157,0,0,56], vc=[1, 0, 0, 4, 0], a0=[33,185,2,99,166,1,0,4806,289,0,2003/271,8,10,0,0,271], a1=[1,0,1,99,4,0,0,4,2,0,18/0,0,0,0,0,1], b0=[20,0,4,99,31,24,0,217,22,0,22/22,0,0,0,0,22], b1=[9,0,5,99,18,14,0,7,7,0,13/0,0,7], b2=[10,0,4,99,41,9,0,622,44,0,44/26,0,18,0,0,26], e0=[4,0,3,99,3,0,0,12,3,0,3/0,3], e1=[7,0,5,99,24,0,0,684,678,0,539/628,16,34,0,0,628], ru=[41,0,6,99,18,0,0,0,121,56],
beta.rulp.rule.TestP2d:test_tag_child_1_full:1-eCount:size=209, max-id=209, dup=18, null=0
beta.rulp.rule.TestP2d:test_tag_child_1_full:1-mCount:stmt=328, rule=41, match=1, fetch=8842, exec=363, idle=245, state=0/3, max-queue=51, uniq-obj=74, entry-cnt=209, entry-maxid=209, waste-node=83, waste-match=2955
beta.rulp.rule.TestP2d:test_tag_child_1_full:1-mStatus:sc=[157,1,13,0,0,157,0,0,60], vc=[1, 0, 0, 2, 0], a0=[34,190,2,99,181,3,0,4974,287,0,1966/271,1,15,0,0,271], a1=[1,0,1,99,2,0,0,2,1,0,9/0,0,0,0,0,1], b0=[20,0,4,99,45,32,0,99,28,0,28/22,0,6,0,0,22], b1=[9,0,5,99,9,7,0,9,9,0,9/0,0,9], b2=[10,0,4,99,45,14,0,603,58,0,50/26,4,28,0,0,26], e0=[4,0,3,99,6,0,0,9], e1=[7,0,5,99,25,0,0,685,685,0,557/628,5,52,0,0,628], ru=[41,0,6,99,23,0,0,0,125,60],
beta.rulp.rule.TestP2d:test_tag_class:1-eCount:size=245, max-id=245, dup=36, null=0
beta.rulp.rule.TestP2d:test_tag_class:1-mCount:stmt=342, rule=41, match=1, fetch=10727, exec=718, idle=483, state=0/5, max-queue=50, uniq-obj=74, entry-cnt=245, entry-maxid=245, waste-node=63, waste-match=1906
beta.rulp.rule.TestP2d:test_tag_class:1-mStatus:sc=[157,3,25,0,2,157,0,0,93], vc=[1, 0, 0, 4, 0], a0=[34,189,2,99,346,3,0,5381,305,0,3156/271,4,28,0,2,271], a1=[1,0,1,99,4,0,0,4,2,0,18/0,0,0,0,0,1], b0=[20,0,4,99,82,57,0,394,37,0,37/22,0,15,0,0,22], b1=[9,0,5,99,18,10,0,22,22,0,24/0,0,22], b2=[10,0,4,99,99,15,0,1380,99,0,107/26,8,59,0,6,26], e0=[4,0,3,99,13,0,0,19,2,0,3/0,1,1], e1=[7,0,5,99,53,0,0,749,747,0,605/628,12,101,0,6,628], ru=[41,0,6,99,51,0,0,0,176,93],
beta.rulp.rule.TestP2d:test_tag_related_1_full:1-eCount:size=193, max-id=193, dup=6, null=0
beta.rulp.rule.TestP2d:test_tag_related_1_full:1-mCount:stmt=324, rule=41, match=0, fetch=8545, exec=274, idle=199, state=0/3, max-queue=49, uniq-obj=74, entry-cnt=193, entry-maxid=193, waste-node=96, waste-match=3844
beta.rulp.rule.TestP2d:test_tag_related_1_full:1-mStatus:sc=[157,2,8,0,0,157,0,0,46], vc=[1, 0, 0, 2, 0], a0=[33,185,2,99,145,1,0,4707,284,0,2011/271,2,11,0,0,271], a1=[1,0,1,99,2,0,0,2,1,0,9/0,0,0,0,0,1], b0=[20,0,4,99,32,26,0,139,22,0,22/22,0,0,0,0,22], b1=[9,0,5,99,9,8,0,3,3,0,3/0,0,3], b2=[10,0,4,99,36,9,0,692,42,0,38/26,8,8,0,0,26], e0=[4,0,3,99,3,0,0,9], e1=[7,0,5,99,20,0,0,668,668,0,531/628,8,32,0,0,628], ru=[41,0,6,99,12,0,0,0,104,46],
beta.rulp.rule.TestP2d:test_tag_remove_descendan_1_full:1-eCount:size=247, max-id=253, dup=53, null=6
beta.rulp.rule.TestP2d:test_tag_remove_descendan_1_full:1-mCount:stmt=342, rule=41, match=1, fetch=9566, exec=363, idle=239, state=0/3, max-queue=52, uniq-obj=74, entry-cnt=247, entry-maxid=253, waste-node=76, waste-match=3172
beta.rulp.rule.TestP2d:test_tag_remove_descendan_1_full:1-mStatus:sc=[157,2,26,0,2,157,0,0,110], vc=[1, 0, 0, 2, 0], a0=[34,190,2,99,179,1,0,5375,301,0,1934/271,2,27,0,1,271], a1=[1,0,1,99,2,0,0,2,1,0,9/0,0,0,0,0,1], b0=[20,0,4,99,45,32,0,147,42,0,42/22,0,18,2,0,22], b1=[9,0,5,99,9,6,0,23,23,0,23/0,0,21,2], b2=[10,0,4,99,45,13,0,465,115,0,93/26,8,73,0,8,26], e0=[4,0,3,99,6,0,0,12], e1=[7,0,5,99,25,0,0,751,751,0,646/628,10,104,0,9,628], ru=[41,0,6,99,25,0,0,0,189,110],
beta.rulp.rule.TestP2d:test_tag_subcollection_1_full:1-eCount:size=365, max-id=365, dup=114, null=0
beta.rulp.rule.TestP2d:test_tag_subcollection_1_full:1-mCount:stmt=392, rule=41, match=1, fetch=12703, exec=489, idle=308, state=0/5, max-queue=56, uniq-obj=74, entry-cnt=365, entry-maxid=365, waste-node=68, waste-match=3260
beta.rulp.rule.TestP2d:test_tag_subcollection_1_full:1-mStatus:sc=[157,10,68,0,4,157,0,0,204], vc=[1, 0, 0, 4, 0], a0=[34,189,2,99,227,1,0,6706,358,0,2726/271,12,71,0,4,271], a1=[1,0,1,99,4,0,0,4,2,0,18/0,0,0,0,0,1], b0=[20,0,4,99,58,40,0,255,66,0,70/22,0,44,0,0,22], b1=[9,0,5,99,18,10,0,63,63,0,71/0,0,63], b2=[10,0,4,99,61,13,0,847,238,0,288/26,32,168,0,12,26], e0=[4,0,3,99,9,0,0,45,4,0,4/0,2,2], e1=[7,0,5,99,33,0,0,960,956,0,851/628,44,272,0,12,628], ru=[41,0,6,99,40,0,0,0,344,204],
beta.rulp.rule.TestP2d:test_tag_subcollection_2_full:1-eCount:size=365, max-id=365, dup=114, null=0
beta.rulp.rule.TestP2d:test_tag_subcollection_2_full:1-mCount:stmt=392, rule=41, match=1, fetch=12703, exec=489, idle=308, state=0/5, max-queue=56, uniq-obj=74, entry-cnt=365, entry-maxid=365, waste-node=68, waste-match=3260
beta.rulp.rule.TestP2d:test_tag_subcollection_2_full:1-mStatus:sc=[157,10,68,0,4,157,0,0,204], vc=[1, 0, 0, 4, 0], a0=[34,189,2,99,227,1,0,6706,358,0,2726/271,12,71,0,4,271], a1=[1,0,1,99,4,0,0,4,2,0,18/0,0,0,0,0,1], b0=[20,0,4,99,58,40,0,255,66,0,70/22,0,44,0,0,22], b1=[9,0,5,99,18,10,0,63,63,0,71/0,0,63], b2=[10,0,4,99,61,13,0,847,238,0,288/26,32,168,0,12,26], e0=[4,0,3,99,9,0,0,45,4,0,4/0,2,2], e1=[7,0,5,99,33,0,0,960,956,0,851/628,44,272,0,12,628], ru=[41,0,6,99,40,0,0,0,344,204],
beta.rulp.rule.TestP2d:test_tag_subcollection_3_full:1-eCount:size=285, max-id=285, dup=70, null=0
beta.rulp.rule.TestP2d:test_tag_subcollection_3_full:1-mCount:stmt=356, rule=41, match=1, fetch=11265, exec=608, idle=377, state=0/7, max-queue=56, uniq-obj=74, entry-cnt=285, entry-maxid=285, waste-node=64, waste-match=2691
beta.rulp.rule.TestP2d:test_tag_subcollection_3_full:1-mStatus:sc=[157,5,37,0,4,157,0,0,142], vc=[1, 0, 0, 6, 0], a0=[34,189,2,99,275,1,0,5782,318,0,2923/271,7,36,0,4,271], a1=[1,0,1,99,6,0,0,6,3,0,27/0,0,0,0,0,1], b0=[20,0,4,99,72,49,0,258,50,0,51/22,0,28,0,0,22], b1=[9,0,5,99,27,15,0,35,35,0,39/0,0,35], b2=[10,0,4,99,76,12,0,1144,156,0,177/26,12,106,0,12,26], e0=[4,0,3,99,9,0,0,21,2,0,2/0,2], e1=[7,0,5,99,41,0,0,814,810,0,686/628,22,148,0,12,628], ru=[41,0,6,99,52,0,0,0,239,142],
beta.rulp.rule.TestP2d:test_tag_version_1:1-eCount:size=221, max-id=222, dup=22, null=1
beta.rulp.rule.TestP2d:test_tag_version_1:1-mCount:stmt=332, rule=41, match=1, fetch=9380, exec=487, idle=349, state=0/7, max-queue=47, uniq-obj=74, entry-cnt=221, entry-maxid=222, waste-node=81, waste-match=3527
beta.rulp.rule.TestP2d:test_tag_version_1:1-mStatus:sc=[157,3,15,0,0,157,0,0,69], vc=[1, 0, 0, 6, 0], a0=[34,189,2,99,242,1,0,5077,291,0,2286/271,6,14,0,0,271], a1=[1,0,1,99,6,0,0,6,3,0,27/0,0,0,0,0,1], b0=[20,0,4,99,47,37,0,147,30,0,30/22,0,8,0,0,22], b1=[9,0,5,99,27,17,0,15,15,0,17/0,0,15], b2=[10,0,4,99,63,11,0,779,64,0,72/26,0,38,0,0,26], e0=[4,0,3,99,6,0,0,12,3,0,3/0,2,1], e1=[7,0,5,99,36,0,0,700,698,0,566/628,12,58,0,0,628], ru=[41,0,6,99,28,0,0,0,137,69],
beta.rulp.rule.TestRule:test_0:1-mStatus:sc=[0,1,1], a0=[1,0,1,99,2,0,0,2,1,0,1/0,1], ru=[1,0,2,99,1,0,0,0,1],
beta.rulp.rule.TestRule:test_0_default_model:1-mStatus:sc=[0,1,1], a0=[1,0,1,99,2,0,0,2,1,0,1/0,1], ru=[1,0,2,99,1,0,0,0,1],
beta.rulp.rule.TestRule:test_0_error_rule_1:1-mStatus:sc=[0,3,1], a0=[1,1,1,99,2,0,0,4,4,0,2/0,3,1], ru=[1,0,2,99,1,0,1,0,2],
beta.rulp.rule.TestRule:test_0_error_rule_halt:1-mStatus:sc=[0,2], a0=[1,1,1,99,1,0,0,2,2,0,1/0,2], ru=[1,0,2,99,1,0,1,0,1],
beta.rulp.rule.TestRule:test_0_similiar_match_alpha_1:1-mStatus:sc=[0,2,3], a0=[2,1,1,99,6,0,0,10,3,0,6/0,2,1], b0=[1,0,2,99,2,0,0,2,1,0,1/0,0,1], ru=[2,0,3,99,3,0,0,0,3],
beta.rulp.rule.TestRule:test_0_similiar_match_alpha_1:1-rStatus-RA001:sc=[], a0=[2,1,1,99,6,0,0,10,3,0,6/0,2,1], b0=[1,0,2,99,2,0,0,2,1,0,1/0,0,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.rule.TestRule:test_0_similiar_match_alpha_1:1-rStatus-RA002:sc=[], a0=[1,1,1,99,3,0,0,5,2,0,4/0,1,1], ru=[1,0,2,99,2,0,0,0,2],
beta.rulp.rule.TestRule:test_0_similiar_match_alpha_2:1-mStatus:sc=[0,1,2], a0=[2,0,2,99,3,0,0,4,2,0,3/0,2], ru=[2,0,3,99,2,0,0,0,2],
beta.rulp.rule.TestRule:test_0_similiar_match_beta:1-mStatus:sc=[0,2,2], a0=[2,0,1,99,4,0,0,8,2,0,2/0,2], b0=[1,0,2,99,1,0,0,1,1,0,2/0,0,1], ru=[2,0,3,99,2,0,0,0,2],
beta.rulp.rule.TestRule:test_1_forward:1-mStatus:sc=[0,3,1], a0=[3,3,2,99,4,0,0,9,5,0,8/0,4,1], b0=[1,0,4,99,3,1,0,12,1,0,1/0,0,1], b2=[1,0,3,99,3,1,0,4,3,0,5/0,2,1], ru=[1,0,5,99,1,0,0,0,1],
beta.rulp.rule.TestRule:test_2_inverse_add_rule_after_stmt:1-mStatus:sc=[0,2,1,0,0,0,0,0,1], a0=[3,3,2,99,4,0,0,7,4,0,6/0,3,1], b2=[1,0,3,99,3,1,0,3,2,0,2/0,1,1], ru=[1,0,4,99,2,0,0,0,2,1],
beta.rulp.rule.TestRule:test_2_inverse_add_rule_before_stmt:1-mStatus:sc=[0,2,1,0,0,0,0,0,1], a0=[3,3,2,99,4,0,0,7,4,0,6/0,3,1], b2=[1,0,3,99,3,1,0,3,2,0,2/0,1,1], ru=[1,0,4,99,2,0,0,0,2,1],
beta.rulp.rule.TestRule:test_3_variable_entry_1:1-mStatus:sc=[0,1,3,0,0,0,0,0,1], ru=[1,0,1,99,4,0,0,0,4,1],
beta.rulp.rule.TestRule:test_3_variable_entry_2:1-mStatus:sc=[0,3,2], a0=[1,0,1,99,1,0,0,2,2,0,5/0,2], b2=[1,0,2,99,3,0,0,5,2,0,2/0,1,1], ru=[1,0,3,99,2,0,0,0,2],
beta.rulp.rule.TestRule:test_4_const_expr_2:1-mStatus:sc=[0,3,1], a0=[1,1,1,99,3,0,0,4,3,0,12/0,2,1], b0=[1,0,3,99,4,1,0,9,1,0,1/0,0,1], b1=[1,0,2,99,2,0,0,3,3,0,5/0,0,3], ru=[1,0,4,99,1,0,0,0,1], c0=[1,0,1,99,2,0,0,0,1,0,2/0,1],
beta.rulp.rule.TestRule:test_4_const_expr_3:1-mStatus:sc=[0,2,4,0,0,0,0,0,2], e0=[1,0,1,99,3,0,0,6,6,0,6/0,2,4], ru=[1,0,2,99,3,0,0,0,6,2],
beta.rulp.rule.TestRule:test_4_const_stmt:1-mStatus:sc=[0,3,1], a0=[1,1,1,99,3,0,0,4,3,0,12/0,2,1], b0=[1,0,3,99,4,1,0,9,1,0,1/0,0,1], b1=[1,0,2,99,2,0,0,3,3,0,5/0,0,3], ru=[1,0,4,99,1,0,0,0,1], c0=[1,0,1,99,2,0,0,0,1,0,2/0,1],
beta.rulp.rule.TestRule:test_4_redunt_beta:1-mStatus:sc=[0,4,1,0,0,0,0,0,1], b0=[1,0,1,99,2,0,0,25,2,0,2/0,0,2], ru=[1,0,2,99,1,0,0,0,2,1],
beta.rulp.rule.TestRule:test_5_waste_var:1-mStatus:sc=[0,2], vc=[1, 0, 0, 0, 0], a0=[1,1,1,99,1,0,0,2,2,0,6/0,2], b0=[1,0,2,99,1,0,0,4,1/0,0,1], b1=[1,0,3,99], ru=[1,0,4,99],
beta.rulp.rule.TestRule:test_5_waste_var_2:1-mStatus:sc=[0,3], vc=[1, 0, 0, 0, 0], a0=[1,1,1,99,1,0,0,3,3,0,18/0,3], b0=[2,0,3,99,2,0,0,15,3,0,2/0,0,3], b1=[1,0,4,99], ru=[1,0,5,99],
beta.rulp.rule.TestRule:test_6_var_expr_1:1-mStatus:sc=[0,2,1,0,0,0,0,0,1], a0=[1,1,1,99,3,0,0,3,3,0,2/0,2,1], e3=[1,0,2,99,3,0,0,3,2,0,2/0,0,2], ru=[1,0,3,99,2,0,0,0,2,1],
beta.rulp.rule.TestRule:test_6_var_expr_2:1-mStatus:sc=[0,1], a0=[1,1,1,99,1,0,0,1,1/0,1], e3=[1,0,2,99,1,0,0,1], ru=[1,0,3,99],
beta.rulp.rule.TestRule:test_6_var_expr_3:1-mStatus:sc=[0,1,1,0,0,0,0,0,1], a0=[1,1,1,99,2,0,0,2,2,0,2/0,1,1], e3=[1,0,2,99,2,0,0,2,2,0,2/0,0,2], ru=[1,0,3,99,2,0,0,0,2,1],
beta.rulp.rule.TestRule:test_6_var_expr_4:1-mStatus:sc=[0,1,1,0,0,0,0,0,1], a0=[1,1,1,99,2,0,0,2,2,0,2/0,1,1], e0=[1,0,2,99,2,0,0,2,2,0,2/0,1,1], ru=[1,0,3,99,2,0,0,0,2,1],
beta.rulp.rule.TestRule:test_6_var_expr_5:1-mStatus:sc=[0,1,2], a0=[1,0,1,99,3,0,0,3,3,0,3/0,1,2], e0=[1,0,2,99,3,0,0,3,2,0,2/0,1,1], e2=[1,0,3,99,2,0,0,2,2,0,2/0,1,1], ru=[1,0,4,99,2,0,0,0,2],
beta.rulp.rule.TestRule:test_6_var_expr_6:1-mStatus:sc=[], n0=[0,2,4,2], e0=[1,0,1,99,1,0,0,4,2,0,2/0,2], ru=[1,0,2,99,1,0,0,0,2],
beta.rulp.rule.TestRule:test_6_var_expr_7:1-mStatus:sc=[], n0=[0,1,2,1], ru=[1,0,1,99,1,0,0,0,2],
beta.rulp.rule.TestRule:test_6_var_expr_8:1-mStatus:sc=[], n0=[0,2,1,5,3], vc=[1, 0, 0, 2, 1], a1=[1,0,1,99,2,1,0,1,1,0,1/0,0,0,0,0,1], b1=[1,0,2,99,3,2,0,1,1,0,1/0,0,1], ru=[1,0,3,99,3,2,0,0,1],
beta.rulp.rule.TestRule:test_7_null_expr_1:1-mStatus:sc=[0,1,1], a0=[1,0,1,99,1,0,0,1,1,0,1/0,1], e1=[1,0,2,99,1,0,0,1,1,0,1/0,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.rule.TestRule:test_7_null_expr_2:1-mStatus:sc=[0,2], n0=[0,1], a0=[1,0,1,99,1,0,0,2,2,0,6/0,2], b0=[1,0,2,99,1,0,0,4,4,0,4/0,0,4], e1=[1,0,3,99,1,0,0,4,2,0,2/0,0,2], ru=[1,0,4,99,1,0,0,0,2],
beta.rulp.rule.TestRule:test_a_similar_expr_1:1-mStatus:sc=[0,1,0,0,2], a0=[1,0,1,99,1,0,0,3,3,0,6/0,1,0,0,2], e0=[2,0,2,99,2,0,0,6,2,0,2/0,0,0,0,2], ru=[2,0,3,99,2,0,0,0,2],
beta.rulp.rule.TestRule:test_c_action_var_tostring_1:1-mStatus:sc=[], n0=[0,2,1,1], ru=[1,0,1,99,1,0,0,0,1],
beta.rulp.rule.TestRuleGroup:test_rule_group_0:1-mStatus:sc=[0,1], a0=[1,0,1], ru=[1,0,2],
beta.rulp.rule.TestRuleGroup:test_rule_group_0:2-mStatus:sc=[0,1,1], a0=[1,0,1,0,2,0,0,2,1,0,1/0,1], ru=[1,0,2,0,1,0,0,0,1],
beta.rulp.rule.TestRuleGroup:test_rule_group_1:1-mStatus:sc=[0,1,1], a0=[2,1,1,0,4,0,0,4,2,0,2/0,1,1], ru=[1,0,2,0,2,1,0,0,1],
beta.rulp.rule.TestRuleGroup:test_rule_group_1:2-mStatus:sc=[0,1,1], a0=[2,1,1,0,6,2,0,4,2,0,3/0,1,1], ru=[1,0,2,0,3,2,0,0,1],
beta.rulp.rule.TestRuleGroup:test_rule_group_2:1-mStatus:sc=[0,2,2], a0=[2,2,1,99,3,0,0,8,4,0,4/0,2,2], b0=[1,0,2,99], ru=[2,0,3,99,1,0,0,0,2],
beta.rulp.rule.TestRuleGroup:test_rule_group_2:2-mStatus:sc=[0,2,3], a0=[2,2,1,99,7,2,0,10,5,0,13/0,2,3], b0=[1,0,2,99,1,0,0,4,1,0,1/0,0,1], ru=[2,0,3,99,4,2,0,0,3],
beta.rulp.rule.TestRuleGroup:test_rule_group_3:1-mStatus:sc=[0,2,2], a0=[1,0,1,99,2,0,0,4,2,0,2/0,2], b0=[1,0,2,99], ru=[2,0,3,99,1,0,0,0,2],
beta.rulp.rule.TestRuleGroup:test_rule_group_3:2-mStatus:sc=[0,2,3], a0=[1,0,1,99,3,0,0,5,2,0,8/0,2], b0=[1,0,2,99,1,0,0,4,1,0,1/0,0,1], ru=[2,0,3,99,2,0,0,0,3],
beta.rulp.rule.TestRuleModifier:test_1_entry_order_1_a:1-mStatus:sc=[], n0=[0,2,2,3,1], b3=[1,0,1,99,1,0,0,0,4,0,4/0,0,4], ru=[1,0,2,99,2,1,0,0,4],
beta.rulp.rule.TestRuleModifier:test_1_entry_order_1_b:1-mStatus:sc=[], n0=[0,2,2,3,1], b3=[1,0,1,99,1,0,0,4,2,0,2/0,0,2], ru=[1,0,2,99,2,1,0,0,2],
beta.rulp.rule.TestRuleModifier:test_1_entry_order_1_c:1-mStatus:sc=[], n0=[0,2,2,3,1], b3=[1,0,1,99,1,0,0,0,1,0,1/0,0,1], e1=[1,0,2,99,2,1,0,1,1,0,1/0,0,1], ru=[1,0,3,99,2,1,0,0,1],
beta.rulp.rule.VarChangeTest:test_1_expr_tree_1:1-mStatus:sc=[0,1], vc=[1, 0, 0, 1, 0], ru=[1,0,1,99,1,0,0,0,1],
beta.rulp.rule.VarChangeTest:test_1_expr_tree_2:1-mStatus:sc=[0,1], vc=[1, 0, 0, 1, 0], e0=[1,0,1,99,1,0,0,1,1,0,1/0,0,0,0,0,1], ru=[1,0,2,99,1,0,0,0,1],
beta.rulp.rule.VarChangeTest:test_1_expr_tree_3:1-mStatus:sc=[0,0,1], vc=[1, 0, 0, 1, 0], a2=[1,0,1,99,1,0,0,0,1,0,1/0,1], ru=[1,0,2,99,1,0,0,0,1],
beta.rulp.rule.VarChangeTest:test_1_expr_tree_4:1-mStatus:sc=[0,0,1], vc=[1, 0, 0, 1, 0], a2=[1,0,1,99,1,0,0,0,1,0,1/0,1], e0=[1,0,2,99,1,0,0,1,1,0,1/0,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.rule.VarChangeTest:test_1_expr_tree_5:1-mStatus:sc=[0,0,1], vc=[2, 0, 0, 2, 0], a2=[2,0,1,99,2,0,0,0,2,0,2/0,2], b3=[1,0,2,99,1,0,0,0,1,0,1/0,0,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.rule.VarChangeTest:test_1_expr_tree_6:1-mStatus:sc=[0,1], vc=[1, 0, 0, 1, 0], a1=[1,0,1,99,1,0,0,1,1,0,1/0,0,0,0,0,1], ru=[1,0,2,99,1,0,0,0,1],
beta.rulp.rule.VarChangeTest:test_1_expr_tree_7:1-mStatus:sc=[0,1], vc=[1, 0, 0, 1, 0], a1=[1,0,1,99,1,0,0,1,1,0,1/0,0,0,0,0,1], ru=[1,0,2,99,1,0,0,0,1],
beta.rulp.rule.VarChangeTest:test_1_expr_tree_8:1-mStatus:sc=[0,0,1], vc=[1, 0, 0, 1, 0], a2=[1,0,1,99,1,0,0,0,1,0,1/0,1], e2=[1,0,2,99,1,0,0,1,1,0,1/0,1], ru=[1,0,3,99,1,0,0,0,1],
beta.rulp.rule.VarChangeTest:test_1_expr_tree_9:1-mStatus:sc=[0,0,1], n0=[0,1,1], vc=[1, 0, 0, 1, 0], a2=[1,0,1,99,1,0,0,0,1,0,1/0,1], b0=[1,0,3,99,2,1,0,1,1,0,1/0,0,1], e2=[1,0,2,99,1,0,0,1,1,0,1/0,1], ru=[1,0,4,99,1,0,0,0,1],
beta.rulp.rule.VarChangeTest:test_2_contant_bool_1:1-mStatus:sc=[0,2,2,0,0,0,0,0,1], vc=[1, 0, 0, 3, 0], a1=[1,0,1,99,3,0,0,3,2,0,2/0,0,0,0,0,1], b1=[1,0,2,99,2,0,0,3,3,0,3/0,0,3], ru=[1,0,3,99,2,0,0,0,3,1],
beta.rulp.rule.VarChangeTest:test_2_contant_bool_2:1-mStatus:sc=[0,2,2,0,0,0,0,0,1], vc=[1, 0, 0, 4, 1], a1=[1,0,1,99,4,1,0,3,2,0,2/0,0,0,0,0,1], b1=[1,0,2,99,6,4,0,3,3,0,3/0,0,3], ru=[1,0,3,99,6,4,0,0,3,1],
beta.rulp.scope.ModelVarTest:test_2_atom_var_1:1-eCount:size=21, max-id=21, dup=0, null=0
beta.rulp.scope.ModelVarTest:test_2_atom_var_1:1-mCount:stmt=3, rule=0, match=0, fetch=28, exec=6, idle=2, state=5/3, max-queue=4, uniq-obj=7, entry-cnt=21, entry-maxid=21, waste-node=0, waste-match=0
beta.rulp.scope.ModelVarTest:test_2_atom_var_1:1-mStatus:sc=[0,3], a0=[1,0,1,0,1,0,0,3,3,0,21/0,3], b3=[2,0,3,0,4,2,0,18,4,0,4/0,0,4],
beta.rulp.worker.WorkerTest:test_load_1_model_interface:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.worker.WorkerTest:test_load_1_model_interface:1-mCount:stmt=2, rule=0, match=0, fetch=6, exec=7, idle=3, state=5/2, max-queue=4, uniq-obj=3, entry-cnt=2, entry-maxid=2, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_1_model_interface:1-mStatus:sc=[0,2], a0=[2,0,2,0,4,2,0,4,4,0,4,0,1/0,4], wk=[1,0,0,-99,1],
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:1-eCount:size=1, max-id=1, dup=0, null=0
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:1-mCount:stmt=1, rule=0, match=0, fetch=3, exec=7, idle=4, state=5/2, max-queue=4, uniq-obj=3, entry-cnt=1, entry-maxid=1, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:1-mStatus:sc=[0,1], a0=[2,0,2,0,4,2,0,2,2,0,2,0,1/0,2], wk=[1,0,0,0,1],
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:2-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:2-mCount:stmt=2, rule=0, match=0, fetch=7, exec=14, idle=8, state=5/4, max-queue=4, uniq-obj=3, entry-cnt=2, entry-maxid=2, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:2-mStatus:sc=[0,2], a0=[2,0,2,0,8,4,0,4,4,0,5,0,1/0,4], wk=[1,0,0,0,2],
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:3-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:3-mCount:stmt=3, rule=0, match=0, fetch=12, exec=21, idle=12, state=5/6, max-queue=4, uniq-obj=3, entry-cnt=3, entry-maxid=3, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_2_always_has_data_no_duplicate:3-mStatus:sc=[0,3], a0=[2,0,2,0,12,6,0,6,6,0,9,0,1/0,6], wk=[1,0,0,0,3],
beta.rulp.worker.WorkerTest:test_load_3_always_has_data_has_duplicate:1-mCount:stmt=1, rule=0, match=0, fetch=3, exec=7, idle=4, state=5/2, max-queue=4, uniq-obj=3, entry-cnt=1, entry-maxid=1, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_3_always_has_data_has_duplicate:1-mStatus:sc=[0,1], a0=[2,0,2,0,4,2,0,2,2,0,2,0,1/0,2], wk=[1,0,0,0,1],
beta.rulp.worker.WorkerTest:test_load_3_always_has_data_has_duplicate:2-mCount:stmt=1, rule=0, match=0, fetch=4, exec=12, idle=9, state=5/4, max-queue=4, uniq-obj=3, entry-cnt=1, entry-maxid=1, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_3_always_has_data_has_duplicate:2-mStatus:sc=[0,1,0,0,0,0,0,0,1], a0=[2,0,2,0,6,4,0,2,2,0,3,0,1/0,2], wk=[1,0,0,0,2],
beta.rulp.worker.WorkerTest:test_load_4_data_not_match_filter:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.worker.WorkerTest:test_load_4_data_not_match_filter:1-mCount:stmt=2, rule=0, match=0, fetch=4, exec=7, idle=3, state=5/2, max-queue=4, uniq-obj=3, entry-cnt=2, entry-maxid=2, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_4_data_not_match_filter:1-mStatus:sc=[0,2], a0=[2,0,2,0,4,2,0,3,2,0,2,0,1/0,2], wk=[1,0,0,-99,1],
beta.rulp.worker.WorkerTest:test_load_5_multi_bind_2:1-eCount:size=1, max-id=1, dup=0, null=0
beta.rulp.worker.WorkerTest:test_load_5_multi_bind_2:1-mCount:stmt=1, rule=0, match=0, fetch=3, exec=7, idle=4, state=5/2, max-queue=4, uniq-obj=3, entry-cnt=1, entry-maxid=1, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_5_multi_bind_2:1-mStatus:sc=[0,1], a0=[2,0,2,0,4,2,0,2,2,0,2,0,1/0,2], wk=[1,0,0,0,1],
beta.rulp.worker.WorkerTest:test_load_5_multi_bind_3:1-eCount:size=2, max-id=2, dup=0, null=0
beta.rulp.worker.WorkerTest:test_load_5_multi_bind_3:1-mCount:stmt=2, rule=0, match=0, fetch=6, exec=9, idle=5, state=5/2, max-queue=5, uniq-obj=3, entry-cnt=2, entry-maxid=2, waste-node=0, waste-match=0
beta.rulp.worker.WorkerTest:test_load_5_multi_bind_3:1-mStatus:sc=[0,2], a0=[2,0,2,0,4,2,0,4,4,0,4,0,2/0,4], wk=[2,0,0,0,2],
beta.rulp.worker.XRFactorAddLazyStmtTest:test_1_load_twice:1-eCount:size=3, max-id=3, dup=0, null=0
beta.rulp.worker.XRFactorAddLazyStmtTest:test_1_load_twice:1-mCount:stmt=3, rule=0, match=3, fetch=13, exec=14, idle=7, state=5/5, max-queue=5, uniq-obj=4, entry-cnt=3, entry-maxid=3, waste-node=0, waste-match=0
beta.rulp.worker.XRFactorAddLazyStmtTest:test_1_load_twice:1-mStatus:sc=[0,3], a0=[2,0,2,0,8,4,0,6,6,0,10,0,1/0,6], wk=[1,0,0,-99,1],
beta.rulp.worker.XRFactorAddLazyStmtTest:test_2_run_without_load_stmt:1-mStatus:sc=[0,1], a0=[2,0,1,99,0,0,0,0,0,0,0,0,2], b0=[1,0,2,99], ru=[1,0,3,99], wk=[2],
beta.rulp.worker.XRFactorAddLazyStmtTest:test_2_run_without_load_stmt:2-mStatus:sc=[0,1], a0=[2,0,1,99,0,0,0,0,0,0,0,0,2], b0=[1,0,2,99], ru=[1,0,3,99], wk=[2],
beta.rulp.worker.XRFactorAddLazyStmtTest:test_2_run_without_load_stmt:3-eCount:size=1, max-id=1, dup=0, null=0
beta.rulp.worker.XRFactorAddLazyStmtTest:test_2_run_without_load_stmt:3-mCount:stmt=1, rule=1, match=0, fetch=9, exec=3, idle=1, state=0/3, max-queue=2, uniq-obj=7, entry-cnt=1, entry-maxid=1, waste-node=5, waste-match=1
beta.rulp.worker.XRFactorAddLazyStmtTest:test_2_run_without_load_stmt:3-mStatus:sc=[0,1], a0=[2,0,1,99,1,0,0,1,1,0,2,0,2/0,1], b0=[1,0,2,99,1,0,0,1], ru=[1,0,3,99], wk=[2],
beta.rulp.worker.XRFactorAddLazyStmtTest:test_3_run_with_load_stmt:1-mStatus:sc=[0,1], a0=[2,0,1,99,0,0,0,0,0,0,0,0,2], b0=[1,0,2,99], ru=[1,0,3,99], wk=[2],
beta.rulp.worker.XRFactorAddLazyStmtTest:test_3_run_with_load_stmt:2-mStatus:sc=[0,1], a0=[2,0,1,99,0,0,0,0,0,0,0,0,2], b0=[1,0,2,99], ru=[1,0,3,99], wk=[2],
beta.rulp.worker.XRFactorAddLazyStmtTest:test_3_run_with_load_stmt:4-eCount:size=8, max-id=8, dup=0, null=0
beta.rulp.worker.XRFactorAddLazyStmtTest:test_3_run_with_load_stmt:4-mCount:stmt=6, rule=1, match=0, fetch=67, exec=17, idle=8, state=5/7, max-queue=5, uniq-obj=9, entry-cnt=8, entry-maxid=8, waste-node=2, waste-match=0
beta.rulp.worker.XRFactorAddLazyStmtTest:test_3_run_with_load_stmt:4-mStatus:sc=[0,4,2], a0=[3,1,1,99,7,2,0,12,6,0,27,0,2/0,4,2], b0=[1,0,2,99,2,0,0,16,2,0,2/0,0,2], ru=[1,0,3,99,2,1,0,0,2], wk=[2,0,0,0,1],
beta.rulp.worker.XRFactorAddLazyStmtTest:test_4_variable_length_entry:1-eCount:size=4, max-id=4, dup=0, null=0
beta.rulp.worker.XRFactorAddLazyStmtTest:test_4_variable_length_entry:1-mCount:stmt=4, rule=0, match=0, fetch=8, exec=5, idle=2, state=5/2, max-queue=3, uniq-obj=6, entry-cnt=4, entry-maxid=4, waste-node=0, waste-match=0
beta.rulp.worker.XRFactorAddLazyStmtTest:test_4_variable_length_entry:1-mStatus:sc=[0,4], a0=[1,0,1,0,2,1,0,4,4,0,4,0,1/0,4], wk=[1,0,0,-99,1],
