(new model mm)

(add-stmt mm '(guess-1 typeof guess))
(add-stmt mm '(guess-1 has-hobby 2))
(add-stmt mm '(guess-1 has-hobby 1))
(add-stmt mm '(guess-1 has-hobby 3))
(add-stmt mm '(guess-1 has-sex m))

(add-stmt mm '(guess-2 typeof guess))
(add-stmt mm '(guess-2 has-hobby 2))
(add-stmt mm '(guess-2 has-hobby 1))
(add-stmt mm '(guess-2 has-hobby 3))
(add-stmt mm '(guess-2 has-sex f))
;=>mm true true true true true true true true true true

(query-stmt mm '(?g1 ?g2) ('(?g1 typeof guess) '(?g2 typeof guess) '(?g1 has-sex ?s1) '(?g2 has-sex ?s2) (not (equal ?g1 ?g2)) (not (equal ?s1 ?s2)) ))
;err:
unsupport modifier: ('(?g1 typeof guess) '(?g2 typeof guess) '(?g1 has-sex ?s1) '(?g2 has-sex ?s2) (not (equal ?g1 ?g2)) (not (equal ?s1 ?s2)))
at (query-stmt mm '(?g1 ?g2) ('(?g1 typeof guess) '(?g2 typeof guess) '(?g1 has-... ; main-2
;eof

(query-stmt mm '(?s1 ?s2) ('(guess-1 typeof guess) '(guess-2 typeof guess) '(guess-1 has-sex ?s1) '(guess-2 has-sex ?s2) (not (equal guess-1 guess-2)) (not (equal ?s1 ?s2)) ))
;err:
unsupport modifier: ('(guess-1 typeof guess) '(guess-2 typeof guess) '(guess-1 has-sex ?s1) '(guess-2 has-sex ?s2) (not (equal guess-1 guess-2)) (not (equal ?s1 ?s2)))
at (query-stmt mm '(?s1 ?s2) ('(guess-1 typeof guess) '(guess-2 typeof guess) '(... ; main-2
;eof

(defun canBeCouple (?g1 ?g2) 
    (return (> (size-of (query-stmt mm '() 
                            ('(?g1 typeof guess) '(?g2 typeof guess) '(?g1 has-sex ?s1) '(?g2 has-sex ?s2) (not (equal ?g1 ?g2)) (not (equal ?s1 ?s2))) 1)) 1)))
;=>canBeCouple

(defun canSitTogether (?g1 ?g2) (return (and (canBeCouple ?g1 ?g2) '(?g1 has-hobby ?h) '(?g2 has-hobby ?h))))
;=>canSitTogether

(canBeCouple guess-1 guess-2)
;err:
unsupport modifier: ('(guess-1 typeof guess) '(guess-2 typeof guess) '(guess-1 has-sex ?s1) '(guess-2 has-sex ?s2) (not (equal guess-1 guess-2)) (not (equal ?s1 ?s2)))
at (query-stmt mm '() ('(?g1 typeof guess) '(?g2 typeof guess) '(?g1 has-sex ?s1... ; _$fun$_canBeCouple-4
at (size-of (query-stmt mm '() ('(?g1 typeof guess) '(?g2 typeof guess) '(?g1 ha... ; _$fun$_canBeCouple-4
at (> (size-of (query-stmt mm '() ('(?g1 typeof guess) '(?g2 typeof guess) '(?g1... ; _$fun$_canBeCouple-4
at (return (> (size-of (query-stmt mm '() ('(?g1 typeof guess) '(?g2 typeof gues... ; _$fun$_canBeCouple-4
at (canBeCouple guess-1 guess-2) ; main-2
;eof

(canSitTogether guess-1 guess-2)
;err:
unsupport modifier: ('(guess-1 typeof guess) '(guess-2 typeof guess) '(guess-1 has-sex ?s1) '(guess-2 has-sex ?s2) (not (equal guess-1 guess-2)) (not (equal ?s1 ?s2)))
at (query-stmt mm '() ('(?g1 typeof guess) '(?g2 typeof guess) '(?g1 has-sex ?s1... ; _$fun$_canBeCouple-5
at (size-of (query-stmt mm '() ('(?g1 typeof guess) '(?g2 typeof guess) '(?g1 ha... ; _$fun$_canBeCouple-5
at (> (size-of (query-stmt mm '() ('(?g1 typeof guess) '(?g2 typeof guess) '(?g1... ; _$fun$_canBeCouple-5
at (return (> (size-of (query-stmt mm '() ('(?g1 typeof guess) '(?g2 typeof gues... ; _$fun$_canBeCouple-5
at (canBeCouple ?g1 ?g2) ; _$fun$_canSitTogether-4
at (and (canBeCouple ?g1 ?g2) '(?g1 has-hobby ?h) '(?g2 has-hobby ?h)) ; _$fun$_canSitTogether-4
at (return (and (canBeCouple ?g1 ?g2) '(?g1 has-hobby ?h) '(?g2 has-hobby ?h))) ; _$fun$_canSitTogether-4
at (canSitTogether guess-1 guess-2) ; main-2
;eof

