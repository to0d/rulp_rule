(new model mm)
;=>

(add-stmt mm guess:'(1 m))
(add-stmt mm guess:'(2 f))
(add-stmt mm guess:'(3 m))
(add-stmt mm guess:'(4 m))
(add-stmt mm guess:'(5 m))
(add-stmt mm guess:'(6 m))
(add-stmt mm guess:'(7 f))
(add-stmt mm guess:'(8 m))
(add-stmt mm guess:'(9 m))
(add-stmt mm guess:'(10 m))
(add-stmt mm guess:'(11 f))
(add-stmt mm guess:'(12 f))
(add-stmt mm guess:'(13 f))
(add-stmt mm guess:'(14 f))
(add-stmt mm guess:'(15 f))
(add-stmt mm guess:'(16 f))
;=>

(add-stmt mm hobby:'(1 1))
(add-stmt mm hobby:'(1 2))
(add-stmt mm hobby:'(1 3))
(add-stmt mm hobby:'(2 1))
(add-stmt mm hobby:'(2 2))
(add-stmt mm hobby:'(2 3))
(add-stmt mm hobby:'(3 2))
(add-stmt mm hobby:'(3 3))
(add-stmt mm hobby:'(4 1))
(add-stmt mm hobby:'(4 2))
(add-stmt mm hobby:'(4 3))
(add-stmt mm hobby:'(5 1))
(add-stmt mm hobby:'(5 2))
(add-stmt mm hobby:'(5 3))
(add-stmt mm hobby:'(6 1))
(add-stmt mm hobby:'(6 2))
(add-stmt mm hobby:'(6 3))
(add-stmt mm hobby:'(7 1))
(add-stmt mm hobby:'(7 2))
(add-stmt mm hobby:'(7 3))
(add-stmt mm hobby:'(8 1))
(add-stmt mm hobby:'(8 3))
(add-stmt mm hobby:'(9 1))
(add-stmt mm hobby:'(9 2))
(add-stmt mm hobby:'(9 3))
(add-stmt mm hobby:'(10 1))
(add-stmt mm hobby:'(10 2))
(add-stmt mm hobby:'(10 3))
(add-stmt mm hobby:'(11 1))
(add-stmt mm hobby:'(11 2))
(add-stmt mm hobby:'(11 3))
(add-stmt mm hobby:'(12 1))
(add-stmt mm hobby:'(12 2))
(add-stmt mm hobby:'(12 3))
(add-stmt mm hobby:'(13 2))
(add-stmt mm hobby:'(13 3))
(add-stmt mm hobby:'(14 1))
(add-stmt mm hobby:'(14 2))
(add-stmt mm hobby:'(15 1))
(add-stmt mm hobby:'(15 2))
(add-stmt mm hobby:'(15 3))
(add-stmt mm hobby:'(16 2))
(add-stmt mm hobby:'(16 3))
;=>

(add-rule mm if guess:'(?g1 ?s1) guess:'(?g2 ?s2) (!= ?g1 ?g2) do 
    (if (= ?s1 ?s2) 
        (-> canBeCouple:'(?g1 ?g2 false)) 
        (-> canBeCouple:'(?g1 ?g2 true))
    )
)
             
(add-rule mm if hobby:'(?g1 ?h) hobby:'(?g2 ?h) (!= ?g1 ?g2) canBeCouple:'(?g1 ?g2 ?v) do 
    (-> canSitTogether:'(?g1 ?g2 ?v))
)
;=>

(setq ?bs-trace true)
;=>

(back-search mm canBeCouple:'(1 2 ?v) explain)
;=>'(canBeCouple:'(1 2 true))
