(load (+ (file-parent ?script-path) "manners_16.rulp"))
;=>nil

(add-rule mm if guess:'(?g1 ?s1) guess:'(?g2 ?s2) (!= ?g1 ?g2) do 
    (if (= ?s1 ?s2) 
        (-> canBeCouple:'(?g1 ?g2 false)) 
        (-> canBeCouple:'(?g1 ?g2 true))
    )
)
             
(add-rule mm if hobby:'(?g1 ?h) hobby:'(?g2 ?h) (!= ?g1 ?g2) canBeCouple:'(?g1 ?g2 ?v) do 
    (-> canSitTogether:'(?g1 ?g2 ?v))
)
;=>RU002 RU003

(setq ?bs-trace true)
;=>&?bs-trace

(back-search mm canBeCouple:'(1 2 ?v) explain)
;=>()
;out:
00000 EQ0000: create_root, tree='(canBeCouple:'(1 2 ?v)), type=ENTRY_QUERY, status=INIT
00000 EQ0000: init begin, tree='(canBeCouple:'(1 2 ?v)), type=ENTRY_QUERY, status=INIT
00000 EQ0000: init end, rst=false, status=PROCESS, size=0
00001 EQ0000: process begin
00001 EQ0000: process end, rst=true, status=COMPLETE, size=0
00002 EQ0000: return true

;eof

