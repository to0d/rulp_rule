(load (+ (file-parent ?script-path) "manners_16.rulp"))
;=>nil

(add-rule mm if guess:'(?g1 ?s1) guess:'(?g2 ?s2) (!= ?g1 ?g2) do 
    (if (= ?s1 ?s2) 
        (-> canBeCouple:'(?g1 ?g2 false)) 
        (-> canBeCouple:'(?g1 ?g2 true))
    )
)
             
(add-rule mm if hobby:'(?g1 ?h) hobby:'(?g2 ?h) (!= ?g1 ?g2) canBeCouple:'(?g1 ?g2 ?v) do 
    (-> canSitTogether:'(?g1 ?g2 ?v))
)
;=>RU002 RU003

(setq ?bs-trace true)
;=>&?bs-trace

(back-search mm canBeCouple:'(1 2 ?v) explain)
;=>'()
;out:
00000 SO0000: create_root, stmt=canBeCouple:'(1 2 ?v), type=STMT_OR, status=INIT
00000 SO0000: init begin, stmt=canBeCouple:'(1 2 ?v), type=STMT_OR, status=INIT
00000 SO0000: has stmt, stmt=canBeCouple:'(1 2 ?v), rst=false
00000 SO0000: not child, return false
00000 SO0000: init end, rst=false, status=COMPLETE, succ-child=null, needComplete=true
00001 SO0000: has stmt, stmt=canBeCouple:'(1 2 ?v), rst=false
00001 SO0000: return false

;eof

