
(alias add-stmt ->)

(defun size-of ((?m model)) (return (size-of-model ?m)))

(defmacro list-with-state
    (?list ?state)
    (foreach 
        (?e ?list)
        (if 
            (not (equal (state-of ?e) ?state))
            (continue)) 
        (return ?e)))
        
(defmacro list-without-state
    (?list ?state)
    (foreach 
        (?e ?list)
        (if 
            (equal (state-of ?e) ?state)
            (continue)) 
        (return ?e)))


(defclass scope () final
    (defvar ?impl nil private)
    
    (defun init () 
        (setq ?impl (scope::_scope_init this)))
        
    (defun init (?m) 
        (setq ?impl (scope::_scope_init this)))
    
    (defun define (?var ?type ?from ?to)
        (return (scope::_scope_define ?impl ?var ?type ?from ?to)))

    (defun assert ((?expr expr))
        (return (scope::_scope_assert ?impl ?expr)))
    
    (defun query ((?query-list list) (?query-modifier list))
        (return (scope::_scope_query ?impl ?query-list ?query-modifier)))
    
    (defun query ((?query-list list))
        (return (scope::_scope_query ?impl ?query-list '())))
        
    (defun get-model () 
        (return ?impl::?default-scope-model))

    (defun get-impl () 
        (return ?impl))

)